package PACKAGE;

import java.util.ArrayList;
import java.util.List;

import org.gemoc.executionframework.extensions.sirius.services.AbstractGemocDebuggerServices;

public class CLASS_NAME extends AbstractGemocDebuggerServices {

	@Override
	protected List<StringCouple> getRepresentationRefreshList() {
		final List<StringCouple> res = new ArrayList<StringCouple>();

		res.add(new StringCouple("LANGUAGE_NAME", "LAYER_NAME"));

		return res;
	}
	
	@Override
	public String getModelIdentifier(){
		// Important Note:
		// by default the wizard  generates a ModelIdentifier linked with the sequential engine.
		// ie. return org.gemoc.execution.sequential.javaengine.ui.Activator.DEBUG_MODEL_ID;
		// however, if the Debug service is to be used by another engine, you must use the targeted engine's
		// debug model id and update the manifest dependencies accordingly.
		// for example, org.gemoc.execution.concurrent.ccsljavaengine.ui.Activator.DEBUG_MODEL_ID for the concurrent engine.
		return org.gemoc.execution.sequential.javaengine.ui.Activator.DEBUG_MODEL_ID;
	}	

}
