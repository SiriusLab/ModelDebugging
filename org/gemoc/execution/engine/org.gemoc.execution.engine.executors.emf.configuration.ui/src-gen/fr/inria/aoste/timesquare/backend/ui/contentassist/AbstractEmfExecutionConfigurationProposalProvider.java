/*
 * generated by Xtext
 */
package fr.inria.aoste.timesquare.backend.ui.contentassist;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.common.ui.contentassist.TerminalsProposalProvider;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;

/**
 * Represents a generated, default implementation of interface
 * {@link IProposalProvider}. Methods are dynamically dispatched on the first
 * parameter, i.e., you can override them with a more concrete subtype.
 */
@SuppressWarnings("all")
public class AbstractEmfExecutionConfigurationProposalProvider extends TerminalsProposalProvider {

    public void complete_EMFExecutionConfiguration(EObject model, RuleCall ruleCall, ContentAssistContext context,
            ICompletionProposalAcceptor acceptor) {
        // subclasses may override
    }

    public void complete_ForcedClockMapping(EObject model, RuleCall ruleCall, ContentAssistContext context,
            ICompletionProposalAcceptor acceptor) {
        // subclasses may override
    }

    public void complete_ImportStatement(EObject model, RuleCall ruleCall, ContentAssistContext context,
            ICompletionProposalAcceptor acceptor) {
        // subclasses may override
    }

    public void complete_JarImportStatement(EObject model, RuleCall ruleCall, ContentAssistContext context,
            ICompletionProposalAcceptor acceptor) {
        // subclasses may override
    }

    public void completeEMFExecutionConfiguration_ForcedClockMappings(EObject model, Assignment assignment,
            ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
        this.completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
    }

    public void completeEMFExecutionConfiguration_Imports(EObject model, Assignment assignment,
            ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
        this.completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
    }

    public void completeEMFExecutionConfiguration_JarImportStatement(EObject model, Assignment assignment,
            ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
        this.completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
    }

    public void completeForcedClockMapping_Clock(EObject model, Assignment assignment, ContentAssistContext context,
            ICompletionProposalAcceptor acceptor) {
        this.lookupCrossReference(((CrossReference) assignment.getTerminal()), context, acceptor);
    }

    public void completeForcedClockMapping_ClockToAvoidWhenTrue(EObject model, Assignment assignment,
            ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
        this.lookupCrossReference(((CrossReference) assignment.getTerminal()), context, acceptor);
    }

    public void completeImportStatement_ImportURI(EObject model, Assignment assignment, ContentAssistContext context,
            ICompletionProposalAcceptor acceptor) {
        this.completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
    }

    public void completeJarImportStatement_PathToJar(EObject model, Assignment assignment,
            ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
        this.completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
    }
}
