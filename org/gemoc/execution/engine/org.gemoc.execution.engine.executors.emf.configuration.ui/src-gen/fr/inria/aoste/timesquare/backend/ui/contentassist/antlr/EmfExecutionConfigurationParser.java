/*
 * generated by Xtext
 */
package fr.inria.aoste.timesquare.backend.ui.contentassist.antlr;

import java.util.Collection;
import java.util.HashMap;
import java.util.Map;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import fr.inria.aoste.timesquare.backend.services.EmfExecutionConfigurationGrammarAccess;

public class EmfExecutionConfigurationParser extends AbstractContentAssistParser {

    @Inject
    private EmfExecutionConfigurationGrammarAccess grammarAccess;

    private Map<AbstractElement, String> nameMappings;

    @Override
    protected fr.inria.aoste.timesquare.backend.ui.contentassist.antlr.internal.InternalEmfExecutionConfigurationParser createParser() {
        fr.inria.aoste.timesquare.backend.ui.contentassist.antlr.internal.InternalEmfExecutionConfigurationParser result = new fr.inria.aoste.timesquare.backend.ui.contentassist.antlr.internal.InternalEmfExecutionConfigurationParser(
                null);
        result.setGrammarAccess(this.grammarAccess);
        return result;
    }

    @Override
    protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
        try {
            fr.inria.aoste.timesquare.backend.ui.contentassist.antlr.internal.InternalEmfExecutionConfigurationParser typedParser = (fr.inria.aoste.timesquare.backend.ui.contentassist.antlr.internal.InternalEmfExecutionConfigurationParser) parser;
            typedParser.entryRuleEMFExecutionConfiguration();
            return typedParser.getFollowElements();
        } catch (RecognitionException ex) {
            throw new RuntimeException(ex);
        }
    }

    public EmfExecutionConfigurationGrammarAccess getGrammarAccess() {
        return this.grammarAccess;
    }

    @Override
    protected String[] getInitialHiddenTokens() {
        return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
    }

    @Override
    protected String getRuleName(AbstractElement element) {
        if (this.nameMappings == null) {
            this.nameMappings = new HashMap<AbstractElement, String>() {
                private static final long serialVersionUID = 1L;
                {
                    this.put(EmfExecutionConfigurationParser.this.grammarAccess.getEMFExecutionConfigurationAccess()
                            .getGroup(), "rule__EMFExecutionConfiguration__Group__0");
                    this.put(EmfExecutionConfigurationParser.this.grammarAccess.getForcedClockMappingAccess()
                            .getGroup(), "rule__ForcedClockMapping__Group__0");
                    this.put(EmfExecutionConfigurationParser.this.grammarAccess.getImportStatementAccess().getGroup(),
                            "rule__ImportStatement__Group__0");
                    this.put(EmfExecutionConfigurationParser.this.grammarAccess.getJarImportStatementAccess()
                            .getGroup(), "rule__JarImportStatement__Group__0");
                    this.put(EmfExecutionConfigurationParser.this.grammarAccess.getEMFExecutionConfigurationAccess()
                            .getImportsAssignment_0(), "rule__EMFExecutionConfiguration__ImportsAssignment_0");
                    this.put(EmfExecutionConfigurationParser.this.grammarAccess.getEMFExecutionConfigurationAccess()
                            .getJarImportStatementAssignment_1(),
                            "rule__EMFExecutionConfiguration__JarImportStatementAssignment_1");
                    this.put(EmfExecutionConfigurationParser.this.grammarAccess.getEMFExecutionConfigurationAccess()
                            .getForcedClockMappingsAssignment_2(),
                            "rule__EMFExecutionConfiguration__ForcedClockMappingsAssignment_2");
                    this.put(EmfExecutionConfigurationParser.this.grammarAccess.getForcedClockMappingAccess()
                            .getClockAssignment_1(), "rule__ForcedClockMapping__ClockAssignment_1");
                    this.put(EmfExecutionConfigurationParser.this.grammarAccess.getForcedClockMappingAccess()
                            .getClockToAvoidWhenTrueAssignment_6(),
                            "rule__ForcedClockMapping__ClockToAvoidWhenTrueAssignment_6");
                    this.put(EmfExecutionConfigurationParser.this.grammarAccess.getImportStatementAccess()
                            .getImportURIAssignment_1(), "rule__ImportStatement__ImportURIAssignment_1");
                    this.put(EmfExecutionConfigurationParser.this.grammarAccess.getJarImportStatementAccess()
                            .getPathToJarAssignment_1(), "rule__JarImportStatement__PathToJarAssignment_1");
                }
            };
        }
        return this.nameMappings.get(element);
    }

    public void setGrammarAccess(EmfExecutionConfigurationGrammarAccess grammarAccess) {
        this.grammarAccess = grammarAccess;
    }
}
