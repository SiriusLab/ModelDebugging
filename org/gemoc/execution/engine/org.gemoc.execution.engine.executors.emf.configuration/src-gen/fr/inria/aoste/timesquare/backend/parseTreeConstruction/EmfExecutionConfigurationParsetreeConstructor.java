/*
 * generated by Xtext
 */
package fr.inria.aoste.timesquare.backend.parseTreeConstruction;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import com.google.inject.Inject;

import fr.inria.aoste.timesquare.backend.services.EmfExecutionConfigurationGrammarAccess;

@SuppressWarnings("all")
public class EmfExecutionConfigurationParsetreeConstructor extends AbstractParseTreeConstructor {

    // forcedClockMappings+=ForcedClockMapping*
    protected class EMFExecutionConfiguration_ForcedClockMappingsAssignment_2 extends AssignmentToken {

        public EMFExecutionConfiguration_ForcedClockMappingsAssignment_2(AbstractToken lastRuleCallOrigin,
                AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
            super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
        }

        @Override
        public AbstractToken createFollower(int index, IEObjectConsumer inst) {
            switch (index) {
                case 0:
                    return new ForcedClockMapping_Group(this, this, 0, inst);
                default:
                    return null;
            }
        }

        @Override
        public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index,
                IEObjectConsumer inst) {
            if (this.value == inst.getEObject() && !inst.isConsumed()) {
                return null;
            }
            switch (index) {
                case 0:
                    return new EMFExecutionConfiguration_ForcedClockMappingsAssignment_2(this.lastRuleCallOrigin, next,
                            actIndex, this.consumed);
                case 1:
                    return new EMFExecutionConfiguration_JarImportStatementAssignment_1(this.lastRuleCallOrigin, next,
                            actIndex, this.consumed);
                default:
                    return null;
            }
        }

        @Override
        public Assignment getGrammarElement() {
            return EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess
                    .getEMFExecutionConfigurationAccess().getForcedClockMappingsAssignment_2();
        }

        @Override
        public IEObjectConsumer tryConsume() {
            if ((this.value = this.eObjectConsumer.getConsumable("forcedClockMappings", false)) == null) {
                return null;
            }
            IEObjectConsumer obj = this.eObjectConsumer.cloneAndConsume("forcedClockMappings");
            if (this.value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
                IEObjectConsumer param = EmfExecutionConfigurationParsetreeConstructor.this
                        .createEObjectConsumer((EObject) this.value);
                if (param.isInstanceOf(EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess
                        .getForcedClockMappingRule().getType().getClassifier())) {
                    this.type = AssignmentType.PARSER_RULE_CALL;
                    this.element = EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess
                            .getEMFExecutionConfigurationAccess()
                            .getForcedClockMappingsForcedClockMappingParserRuleCall_2_0();
                    this.consumed = obj;
                    return param;
                }
            }
            return null;
        }
    }

    /************
     * begin Rule EMFExecutionConfiguration ****************
     * 
     * EMFExecutionConfiguration: imports+=ImportStatement+
     * jarImportStatement=JarImportStatement
     * forcedClockMappings+=ForcedClockMapping*;
     * 
     **/

    // imports+=ImportStatement+ jarImportStatement=JarImportStatement
    // forcedClockMappings+=ForcedClockMapping*
    protected class EMFExecutionConfiguration_Group extends GroupToken {

        public EMFExecutionConfiguration_Group(AbstractToken lastRuleCallOrigin, AbstractToken next,
                int transitionIndex, IEObjectConsumer eObjectConsumer) {
            super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
        }

        @Override
        public AbstractToken createFollower(int index, IEObjectConsumer inst) {
            switch (index) {
                case 0:
                    return new EMFExecutionConfiguration_ForcedClockMappingsAssignment_2(this.lastRuleCallOrigin, this,
                            0, inst);
                case 1:
                    return new EMFExecutionConfiguration_JarImportStatementAssignment_1(this.lastRuleCallOrigin, this,
                            1, inst);
                default:
                    return null;
            }
        }

        @Override
        public Group getGrammarElement() {
            return EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess
                    .getEMFExecutionConfigurationAccess().getGroup();
        }

        @Override
        public IEObjectConsumer tryConsume() {
            if (this.getEObject().eClass() != EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess
                    .getEMFExecutionConfigurationRule().getType().getClassifier()) {
                return null;
            }
            return this.eObjectConsumer;
        }

    }

    // imports+=ImportStatement+
    protected class EMFExecutionConfiguration_ImportsAssignment_0 extends AssignmentToken {

        public EMFExecutionConfiguration_ImportsAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next,
                int transitionIndex, IEObjectConsumer eObjectConsumer) {
            super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
        }

        @Override
        public AbstractToken createFollower(int index, IEObjectConsumer inst) {
            switch (index) {
                case 0:
                    return new ImportStatement_Group(this, this, 0, inst);
                default:
                    return null;
            }
        }

        @Override
        public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index,
                IEObjectConsumer inst) {
            if (this.value == inst.getEObject() && !inst.isConsumed()) {
                return null;
            }
            switch (index) {
                case 0:
                    return new EMFExecutionConfiguration_ImportsAssignment_0(this.lastRuleCallOrigin, next, actIndex,
                            this.consumed);
                default:
                    return this.lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex, index - 1, this.consumed);
            }
        }

        @Override
        public Assignment getGrammarElement() {
            return EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess
                    .getEMFExecutionConfigurationAccess().getImportsAssignment_0();
        }

        @Override
        public IEObjectConsumer tryConsume() {
            if ((this.value = this.eObjectConsumer.getConsumable("imports", true)) == null) {
                return null;
            }
            IEObjectConsumer obj = this.eObjectConsumer.cloneAndConsume("imports");
            if (this.value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
                IEObjectConsumer param = EmfExecutionConfigurationParsetreeConstructor.this
                        .createEObjectConsumer((EObject) this.value);
                if (param.isInstanceOf(EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess
                        .getImportStatementRule().getType().getClassifier())) {
                    this.type = AssignmentType.PARSER_RULE_CALL;
                    this.element = EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess
                            .getEMFExecutionConfigurationAccess().getImportsImportStatementParserRuleCall_0_0();
                    this.consumed = obj;
                    return param;
                }
            }
            return null;
        }
    }

    // jarImportStatement=JarImportStatement
    protected class EMFExecutionConfiguration_JarImportStatementAssignment_1 extends AssignmentToken {

        public EMFExecutionConfiguration_JarImportStatementAssignment_1(AbstractToken lastRuleCallOrigin,
                AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
            super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
        }

        @Override
        public AbstractToken createFollower(int index, IEObjectConsumer inst) {
            switch (index) {
                case 0:
                    return new JarImportStatement_Group(this, this, 0, inst);
                default:
                    return null;
            }
        }

        @Override
        public AbstractToken createFollowerAfterReturn(AbstractToken next, int actIndex, int index,
                IEObjectConsumer inst) {
            if (this.value == inst.getEObject() && !inst.isConsumed()) {
                return null;
            }
            switch (index) {
                case 0:
                    return new EMFExecutionConfiguration_ImportsAssignment_0(this.lastRuleCallOrigin, next, actIndex,
                            this.consumed);
                default:
                    return null;
            }
        }

        @Override
        public Assignment getGrammarElement() {
            return EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess
                    .getEMFExecutionConfigurationAccess().getJarImportStatementAssignment_1();
        }

        @Override
        public IEObjectConsumer tryConsume() {
            if ((this.value = this.eObjectConsumer.getConsumable("jarImportStatement", true)) == null) {
                return null;
            }
            IEObjectConsumer obj = this.eObjectConsumer.cloneAndConsume("jarImportStatement");
            if (this.value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
                IEObjectConsumer param = EmfExecutionConfigurationParsetreeConstructor.this
                        .createEObjectConsumer((EObject) this.value);
                if (param.isInstanceOf(EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess
                        .getJarImportStatementRule().getType().getClassifier())) {
                    this.type = AssignmentType.PARSER_RULE_CALL;
                    this.element = EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess
                            .getEMFExecutionConfigurationAccess()
                            .getJarImportStatementJarImportStatementParserRuleCall_1_0();
                    this.consumed = obj;
                    return param;
                }
            }
            return null;
        }
    }

    // "avoid"
    protected class ForcedClockMapping_AvoidKeyword_5 extends KeywordToken {

        public ForcedClockMapping_AvoidKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next,
                int transitionIndex, IEObjectConsumer eObjectConsumer) {
            super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
        }

        @Override
        public AbstractToken createFollower(int index, IEObjectConsumer inst) {
            switch (index) {
                case 0:
                    return new ForcedClockMapping_TrueKeyword_4(this.lastRuleCallOrigin, this, 0, inst);
                default:
                    return null;
            }
        }

        @Override
        public Keyword getGrammarElement() {
            return EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess.getForcedClockMappingAccess()
                    .getAvoidKeyword_5();
        }

    }

    // clock=[TimeModel::Clock]
    protected class ForcedClockMapping_ClockAssignment_1 extends AssignmentToken {

        public ForcedClockMapping_ClockAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next,
                int transitionIndex, IEObjectConsumer eObjectConsumer) {
            super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
        }

        @Override
        public AbstractToken createFollower(int index, IEObjectConsumer inst) {
            switch (index) {
                case 0:
                    return new ForcedClockMapping_WhenKeyword_0(this.lastRuleCallOrigin, this, 0, inst);
                default:
                    return null;
            }
        }

        @Override
        public Assignment getGrammarElement() {
            return EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess.getForcedClockMappingAccess()
                    .getClockAssignment_1();
        }

        @Override
        public IEObjectConsumer tryConsume() {
            if ((this.value = this.eObjectConsumer.getConsumable("clock", true)) == null) {
                return null;
            }
            IEObjectConsumer obj = this.eObjectConsumer.cloneAndConsume("clock");
            if (this.value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
                IEObjectConsumer param = EmfExecutionConfigurationParsetreeConstructor.this
                        .createEObjectConsumer((EObject) this.value);
                if (param.isInstanceOf(EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess
                        .getForcedClockMappingAccess().getClockClockCrossReference_1_0().getType().getClassifier())) {
                    this.type = AssignmentType.CROSS_REFERENCE;
                    this.element = EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess
                            .getForcedClockMappingAccess().getClockClockCrossReference_1_0();
                    return obj;
                }
            }
            return null;
        }

    }

    // clockToAvoidWhenTrue=[TimeModel::Clock]
    protected class ForcedClockMapping_ClockToAvoidWhenTrueAssignment_6 extends AssignmentToken {

        public ForcedClockMapping_ClockToAvoidWhenTrueAssignment_6(AbstractToken lastRuleCallOrigin,
                AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
            super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
        }

        @Override
        public AbstractToken createFollower(int index, IEObjectConsumer inst) {
            switch (index) {
                case 0:
                    return new ForcedClockMapping_AvoidKeyword_5(this.lastRuleCallOrigin, this, 0, inst);
                default:
                    return null;
            }
        }

        @Override
        public Assignment getGrammarElement() {
            return EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess.getForcedClockMappingAccess()
                    .getClockToAvoidWhenTrueAssignment_6();
        }

        @Override
        public IEObjectConsumer tryConsume() {
            if ((this.value = this.eObjectConsumer.getConsumable("clockToAvoidWhenTrue", true)) == null) {
                return null;
            }
            IEObjectConsumer obj = this.eObjectConsumer.cloneAndConsume("clockToAvoidWhenTrue");
            if (this.value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
                IEObjectConsumer param = EmfExecutionConfigurationParsetreeConstructor.this
                        .createEObjectConsumer((EObject) this.value);
                if (param.isInstanceOf(EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess
                        .getForcedClockMappingAccess().getClockToAvoidWhenTrueClockCrossReference_6_0().getType()
                        .getClassifier())) {
                    this.type = AssignmentType.CROSS_REFERENCE;
                    this.element = EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess
                            .getForcedClockMappingAccess().getClockToAvoidWhenTrueClockCrossReference_6_0();
                    return obj;
                }
            }
            return null;
        }

    }

    /************ end Rule EMFExecutionConfiguration ****************/

    // "DSA"
    protected class ForcedClockMapping_DSAKeyword_2 extends KeywordToken {

        public ForcedClockMapping_DSAKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next,
                int transitionIndex, IEObjectConsumer eObjectConsumer) {
            super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
        }

        @Override
        public AbstractToken createFollower(int index, IEObjectConsumer inst) {
            switch (index) {
                case 0:
                    return new ForcedClockMapping_ClockAssignment_1(this.lastRuleCallOrigin, this, 0, inst);
                default:
                    return null;
            }
        }

        @Override
        public Keyword getGrammarElement() {
            return EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess.getForcedClockMappingAccess()
                    .getDSAKeyword_2();
        }

    }

    /************
     * begin Rule ForcedClockMapping ****************
     * 
     * ForcedClockMapping: "When" clock=[TimeModel::Clock] "DSA" "returns"
     * "true" "avoid" clockToAvoidWhenTrue=[TimeModel::Clock] ";";
     * 
     **/

    // "When" clock=[TimeModel::Clock] "DSA" "returns" "true" "avoid"
    // clockToAvoidWhenTrue=[TimeModel::Clock] ";"
    protected class ForcedClockMapping_Group extends GroupToken {

        public ForcedClockMapping_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex,
                IEObjectConsumer eObjectConsumer) {
            super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
        }

        @Override
        public AbstractToken createFollower(int index, IEObjectConsumer inst) {
            switch (index) {
                case 0:
                    return new ForcedClockMapping_SemicolonKeyword_7(this.lastRuleCallOrigin, this, 0, inst);
                default:
                    return null;
            }
        }

        @Override
        public Group getGrammarElement() {
            return EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess.getForcedClockMappingAccess()
                    .getGroup();
        }

        @Override
        public IEObjectConsumer tryConsume() {
            if (this.getEObject().eClass() != EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess
                    .getForcedClockMappingRule().getType().getClassifier()) {
                return null;
            }
            return this.eObjectConsumer;
        }

    }

    // "returns"
    protected class ForcedClockMapping_ReturnsKeyword_3 extends KeywordToken {

        public ForcedClockMapping_ReturnsKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next,
                int transitionIndex, IEObjectConsumer eObjectConsumer) {
            super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
        }

        @Override
        public AbstractToken createFollower(int index, IEObjectConsumer inst) {
            switch (index) {
                case 0:
                    return new ForcedClockMapping_DSAKeyword_2(this.lastRuleCallOrigin, this, 0, inst);
                default:
                    return null;
            }
        }

        @Override
        public Keyword getGrammarElement() {
            return EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess.getForcedClockMappingAccess()
                    .getReturnsKeyword_3();
        }

    }

    // ";"
    protected class ForcedClockMapping_SemicolonKeyword_7 extends KeywordToken {

        public ForcedClockMapping_SemicolonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next,
                int transitionIndex, IEObjectConsumer eObjectConsumer) {
            super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
        }

        @Override
        public AbstractToken createFollower(int index, IEObjectConsumer inst) {
            switch (index) {
                case 0:
                    return new ForcedClockMapping_ClockToAvoidWhenTrueAssignment_6(this.lastRuleCallOrigin, this, 0,
                            inst);
                default:
                    return null;
            }
        }

        @Override
        public Keyword getGrammarElement() {
            return EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess.getForcedClockMappingAccess()
                    .getSemicolonKeyword_7();
        }

    }

    // "true"
    protected class ForcedClockMapping_TrueKeyword_4 extends KeywordToken {

        public ForcedClockMapping_TrueKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next,
                int transitionIndex, IEObjectConsumer eObjectConsumer) {
            super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
        }

        @Override
        public AbstractToken createFollower(int index, IEObjectConsumer inst) {
            switch (index) {
                case 0:
                    return new ForcedClockMapping_ReturnsKeyword_3(this.lastRuleCallOrigin, this, 0, inst);
                default:
                    return null;
            }
        }

        @Override
        public Keyword getGrammarElement() {
            return EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess.getForcedClockMappingAccess()
                    .getTrueKeyword_4();
        }

    }

    // "When"
    protected class ForcedClockMapping_WhenKeyword_0 extends KeywordToken {

        public ForcedClockMapping_WhenKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next,
                int transitionIndex, IEObjectConsumer eObjectConsumer) {
            super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
        }

        @Override
        public AbstractToken createFollower(int index, IEObjectConsumer inst) {
            switch (index) {
                default:
                    return this.lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
            }
        }

        @Override
        public Keyword getGrammarElement() {
            return EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess.getForcedClockMappingAccess()
                    .getWhenKeyword_0();
        }

    }

    /************
     * begin Rule ImportStatement ****************
     * 
     * ImportStatement: "import" importURI=STRING ";";
     * 
     **/

    // "import" importURI=STRING ";"
    protected class ImportStatement_Group extends GroupToken {

        public ImportStatement_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex,
                IEObjectConsumer eObjectConsumer) {
            super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
        }

        @Override
        public AbstractToken createFollower(int index, IEObjectConsumer inst) {
            switch (index) {
                case 0:
                    return new ImportStatement_SemicolonKeyword_2(this.lastRuleCallOrigin, this, 0, inst);
                default:
                    return null;
            }
        }

        @Override
        public Group getGrammarElement() {
            return EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess.getImportStatementAccess()
                    .getGroup();
        }

        @Override
        public IEObjectConsumer tryConsume() {
            if (this.getEObject().eClass() != EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess
                    .getImportStatementRule().getType().getClassifier()) {
                return null;
            }
            return this.eObjectConsumer;
        }

    }

    // "import"
    protected class ImportStatement_ImportKeyword_0 extends KeywordToken {

        public ImportStatement_ImportKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next,
                int transitionIndex, IEObjectConsumer eObjectConsumer) {
            super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
        }

        @Override
        public AbstractToken createFollower(int index, IEObjectConsumer inst) {
            switch (index) {
                default:
                    return this.lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
            }
        }

        @Override
        public Keyword getGrammarElement() {
            return EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess.getImportStatementAccess()
                    .getImportKeyword_0();
        }

    }

    // importURI=STRING
    protected class ImportStatement_ImportURIAssignment_1 extends AssignmentToken {

        public ImportStatement_ImportURIAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next,
                int transitionIndex, IEObjectConsumer eObjectConsumer) {
            super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
        }

        @Override
        public AbstractToken createFollower(int index, IEObjectConsumer inst) {
            switch (index) {
                case 0:
                    return new ImportStatement_ImportKeyword_0(this.lastRuleCallOrigin, this, 0, inst);
                default:
                    return null;
            }
        }

        @Override
        public Assignment getGrammarElement() {
            return EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess.getImportStatementAccess()
                    .getImportURIAssignment_1();
        }

        @Override
        public IEObjectConsumer tryConsume() {
            if ((this.value = this.eObjectConsumer.getConsumable("importURI", true)) == null) {
                return null;
            }
            IEObjectConsumer obj = this.eObjectConsumer.cloneAndConsume("importURI");
            if (EmfExecutionConfigurationParsetreeConstructor.this.valueSerializer.isValid(obj.getEObject(),
                    EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess.getImportStatementAccess()
                            .getImportURISTRINGTerminalRuleCall_1_0(), this.value, null)) {
                this.type = AssignmentType.TERMINAL_RULE_CALL;
                this.element = EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess
                        .getImportStatementAccess().getImportURISTRINGTerminalRuleCall_1_0();
                return obj;
            }
            return null;
        }

    }

    /************ end Rule ForcedClockMapping ****************/

    // ";"
    protected class ImportStatement_SemicolonKeyword_2 extends KeywordToken {

        public ImportStatement_SemicolonKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next,
                int transitionIndex, IEObjectConsumer eObjectConsumer) {
            super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
        }

        @Override
        public AbstractToken createFollower(int index, IEObjectConsumer inst) {
            switch (index) {
                case 0:
                    return new ImportStatement_ImportURIAssignment_1(this.lastRuleCallOrigin, this, 0, inst);
                default:
                    return null;
            }
        }

        @Override
        public Keyword getGrammarElement() {
            return EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess.getImportStatementAccess()
                    .getSemicolonKeyword_2();
        }

    }

    /************
     * begin Rule JarImportStatement ****************
     * 
     * JarImportStatement: "importJar" pathToJar=STRING ";";
     * 
     **/

    // "importJar" pathToJar=STRING ";"
    protected class JarImportStatement_Group extends GroupToken {

        public JarImportStatement_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex,
                IEObjectConsumer eObjectConsumer) {
            super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
        }

        @Override
        public AbstractToken createFollower(int index, IEObjectConsumer inst) {
            switch (index) {
                case 0:
                    return new JarImportStatement_SemicolonKeyword_2(this.lastRuleCallOrigin, this, 0, inst);
                default:
                    return null;
            }
        }

        @Override
        public Group getGrammarElement() {
            return EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess.getJarImportStatementAccess()
                    .getGroup();
        }

        @Override
        public IEObjectConsumer tryConsume() {
            if (this.getEObject().eClass() != EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess
                    .getJarImportStatementRule().getType().getClassifier()) {
                return null;
            }
            return this.eObjectConsumer;
        }

    }

    // "importJar"
    protected class JarImportStatement_ImportJarKeyword_0 extends KeywordToken {

        public JarImportStatement_ImportJarKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next,
                int transitionIndex, IEObjectConsumer eObjectConsumer) {
            super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
        }

        @Override
        public AbstractToken createFollower(int index, IEObjectConsumer inst) {
            switch (index) {
                default:
                    return this.lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
            }
        }

        @Override
        public Keyword getGrammarElement() {
            return EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess.getJarImportStatementAccess()
                    .getImportJarKeyword_0();
        }

    }

    // pathToJar=STRING
    protected class JarImportStatement_PathToJarAssignment_1 extends AssignmentToken {

        public JarImportStatement_PathToJarAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next,
                int transitionIndex, IEObjectConsumer eObjectConsumer) {
            super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
        }

        @Override
        public AbstractToken createFollower(int index, IEObjectConsumer inst) {
            switch (index) {
                case 0:
                    return new JarImportStatement_ImportJarKeyword_0(this.lastRuleCallOrigin, this, 0, inst);
                default:
                    return null;
            }
        }

        @Override
        public Assignment getGrammarElement() {
            return EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess.getJarImportStatementAccess()
                    .getPathToJarAssignment_1();
        }

        @Override
        public IEObjectConsumer tryConsume() {
            if ((this.value = this.eObjectConsumer.getConsumable("pathToJar", true)) == null) {
                return null;
            }
            IEObjectConsumer obj = this.eObjectConsumer.cloneAndConsume("pathToJar");
            if (EmfExecutionConfigurationParsetreeConstructor.this.valueSerializer.isValid(obj.getEObject(),
                    EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess.getJarImportStatementAccess()
                            .getPathToJarSTRINGTerminalRuleCall_1_0(), this.value, null)) {
                this.type = AssignmentType.TERMINAL_RULE_CALL;
                this.element = EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess
                        .getJarImportStatementAccess().getPathToJarSTRINGTerminalRuleCall_1_0();
                return obj;
            }
            return null;
        }

    }

    /************ end Rule ImportStatement ****************/

    // ";"
    protected class JarImportStatement_SemicolonKeyword_2 extends KeywordToken {

        public JarImportStatement_SemicolonKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next,
                int transitionIndex, IEObjectConsumer eObjectConsumer) {
            super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
        }

        @Override
        public AbstractToken createFollower(int index, IEObjectConsumer inst) {
            switch (index) {
                case 0:
                    return new JarImportStatement_PathToJarAssignment_1(this.lastRuleCallOrigin, this, 0, inst);
                default:
                    return null;
            }
        }

        @Override
        public Keyword getGrammarElement() {
            return EmfExecutionConfigurationParsetreeConstructor.this.grammarAccess.getJarImportStatementAccess()
                    .getSemicolonKeyword_2();
        }

    }

    protected class ThisRootNode extends RootToken {
        public ThisRootNode(IEObjectConsumer inst) {
            super(inst);
        }

        @Override
        public AbstractToken createFollower(int index, IEObjectConsumer inst) {
            switch (index) {
                case 0:
                    return new EMFExecutionConfiguration_Group(this, this, 0, inst);
                case 1:
                    return new ForcedClockMapping_Group(this, this, 1, inst);
                case 2:
                    return new ImportStatement_Group(this, this, 2, inst);
                case 3:
                    return new JarImportStatement_Group(this, this, 3, inst);
                default:
                    return null;
            }
        }
    }

    @Inject
    private EmfExecutionConfigurationGrammarAccess grammarAccess;

    @Override
    protected AbstractToken getRootToken(IEObjectConsumer inst) {
        return new ThisRootNode(inst);
    }

    /************ end Rule JarImportStatement ****************/

}
