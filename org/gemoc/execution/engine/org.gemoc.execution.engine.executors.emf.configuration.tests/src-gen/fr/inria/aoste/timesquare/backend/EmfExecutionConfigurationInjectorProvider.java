/*
 * generated by Xtext
 */
package fr.inria.aoste.timesquare.backend;

import org.eclipse.xtext.junit4.GlobalRegistries;
import org.eclipse.xtext.junit4.GlobalRegistries.GlobalStateMemento;
import org.eclipse.xtext.junit4.IInjectorProvider;
import org.eclipse.xtext.junit4.IRegistryConfigurator;

import com.google.inject.Injector;

public class EmfExecutionConfigurationInjectorProvider implements IInjectorProvider, IRegistryConfigurator {

    protected GlobalStateMemento stateBeforeInjectorCreation;
    protected GlobalStateMemento stateAfterInjectorCreation;
    protected Injector injector;

    static {
        GlobalRegistries.initializeDefaults();
    }

    @Override
    public Injector getInjector() {
        if (this.injector == null) {
            this.stateBeforeInjectorCreation = GlobalRegistries.makeCopyOfGlobalState();
            this.injector = this.internalCreateInjector();
            this.stateAfterInjectorCreation = GlobalRegistries.makeCopyOfGlobalState();
        }
        return this.injector;
    }

    protected Injector internalCreateInjector() {
        return new EmfExecutionConfigurationStandaloneSetup().createInjectorAndDoEMFRegistration();
    }

    @Override
    public void restoreRegistry() {
        this.stateBeforeInjectorCreation.restoreGlobalState();
    }

    @Override
    public void setupRegistry() {
        this.getInjector();
        this.stateAfterInjectorCreation.restoreGlobalState();
    }
}
