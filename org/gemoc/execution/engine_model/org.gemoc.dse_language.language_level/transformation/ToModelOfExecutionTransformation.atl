module toModelOfExecutionTransformation;
create ModelOfExecutionTransformation: ATL from AbstractSyntax: Ecore;

-- Transformation prenant en entrée le métamodèle du xDSML et produisant une
		-- transformation ATL qui pour chaque DomainSpecificEvent crée les
		-- ModelSpecificEvents associés.


rule MetaclassToSequentialInstanciationRule {
	from
		metaclass: Ecore!EClass
	to
		sequentialInstanciationRule: ATL!"ATL::MatchedRule" (
			location <- "hello",
			commentsBefore <- 'Rule which instanciates each DSE for every instance of the'
					+ ' metaclass ' + metaclass.name,
			commentsAfter <- 'Fin',
			name <- metaclass.name + 'Rule',
			isAbstract <- false,
			isRefining <- false,
			isNoDefault <- false,
			outPattern <-
			actionBlock <-
			variables <-
			inPattern <-
			children <-
			superRule <-
		)
}
