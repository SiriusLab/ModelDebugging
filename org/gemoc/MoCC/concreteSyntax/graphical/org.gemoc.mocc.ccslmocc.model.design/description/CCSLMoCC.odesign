<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/tree/description/1.0.0" xmlns:filter="http://www.eclipse.org/sirius/description/filter/1.1.0" xmlns:style="http://www.eclipse.org/sirius/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/description/tool/1.1.0" name="CCSLMoCC" version="7.0.0">
  <ownedViewpoints name="CCSLMoCC" modelFileExtension="ccslmocc xmi mocdsl">
    <ownedRepresentations xsi:type="description:DiagramDescription" name="State-Based Library Diagram" domainClass="ccslmocc.StateRelationBasedLibrary">
      <metamodel href="platform:/plugin/org.gemoc.mocc.ccslmocc.model/model/Ccslmocc.ecore#/"/>
      <metamodel href="platform:/plugin/org.gemoc.mocc.fsmkernel.model/model/FSMModel.ecore#/"/>
      <metamodel href="http://fr.inria.aoste.timemodel#/"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//BasicType"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel/ClockExpressionAndRelation"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel/ClockExpressionAndRelation/KernelExpression"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel/ClockExpressionAndRelation/KernelRelation"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel/ClassicalExpression"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//PrimitivesTypeValue"/>
      <metamodel href="http://org.gemoc.mocc.fsmmodel/editionextension/1.0#/"/>
      <defaultLayer name="Default">
        <edgeMappings name="RelationDefToDeclaration" deletionDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DelDeclarationRelation']" sourceMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@containerMappings[name='RelationLibrary']/@subContainerMappings[name='StateMachineRelationDefinition']" targetMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@containerMappings[name='RelationLibrary']/@subContainerMappings[name='RelationDeclaration']" targetFinderExpression="[self.oclAsType(ExternalRelationDefinition).declaration/]" reconnections="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='SetDeclarationChange']">
          <style lineStyle="dash" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelFormat="italic" showIcon="false" labelExpression="defines">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="RelationLibrary" labelDirectEdit="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='NameEditRelationTools']" semanticCandidatesExpression="[eAllContents()/]" domainClass="RelationLibrary">
          <subContainerMappings name="StateMachineRelationDefinition" detailDescriptions="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='CreateStateBasedDefDiagram']" labelDirectEdit="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='NameEditRelationTools']" semanticCandidatesExpression="[eAllContents()/]" doubleClickDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='OpenXtextEditor']" domainClass="ccslmocc.StateMachineRelationDefinition">
            <style xsi:type="style:FlatContainerStyleDescription" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/FSM.gif" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
            </style>
          </subContainerMappings>
          <subContainerMappings name="RelationDeclaration" labelDirectEdit="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='NameEditRelationTools']" semanticCandidatesExpression="[eAllContents()/]" doubleClickDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='OpenXtextEditor']" domainClass="RelationDeclaration" childrenPresentation="List" listContainer="true">
            <subNodeMappings name="AbstractEntity" labelDirectEdit="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='NameEditAbstractEntity']" semanticCandidatesExpression="[eAllContents()/]" domainClass="AbstractEntity">
              <style xsi:type="style:SquareDescription" labelFormat="italic" labelExpression="service:computeLabel" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/Parameter.gif" labelAlignment="LEFT" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:ShapeContainerStyleDescription" arcWidth="2" arcHeight="2" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/Variable.gif">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/RelationLibrary.jpg" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
          </style>
        </containerMappings>
        <toolSections name="RelationTools">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="CreateRelationLibrary" label="New Relation Library" forceRefresh="true" containerMappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@containerMappings[name='RelationLibrary']" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateRelationLibrary.jpg">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="RelationLibrary" referenceName="relationLibraries">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['newRelationLib'+container->filter(Library).relationLibraries->size()/]"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="CreateRelationDeclaration" label="New Relation Declaration" forceRefresh="true" containerMappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@containerMappings[name='RelationLibrary']/@subContainerMappings[name='RelationDeclaration']" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/AddStructuralFeature.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="RelationDeclaration" referenceName="relationDeclarations">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['newDeclaration'+container->filter(RelationLibrary).relationDeclarations->size()/]"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="CreateStateBasedDefinition" label="New State-Based Definition" forceRefresh="true" containerMappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@containerMappings[name='RelationLibrary']/@subContainerMappings[name='StateMachineRelationDefinition']" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateFSM.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="StateMachineRelationDefinition" referenceName="relationDefinitions">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['newFSM'+container->filter(RelationLibrary).relationDefinitions->size()/]"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="SetDeclaration" label="Set Declaration Relation" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@edgeMappings[name='RelationDefToDeclaration']" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateDeclaration.gif" connectionStartPrecondition="[preSource.oclAsType(ccslmocc::StateMachineRelationDefinition).declaration=null/]">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[source/]">
                <subModelOperations xsi:type="tool:SetValue" featureName="declaration" valueExpression="[target/]"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="SetDeclarationChange" forceRefresh="true">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[edgeView.oclAsType(viewpoint::DEdge).sourceNode.oclAsType(viewpoint::DSemanticDecorator).target/]">
                <subModelOperations xsi:type="tool:SetValue" featureName="declaration" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DelDeclarationRelation" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[elementView.oclAsType(viewpoint::DEdge).sourceNode.oclAsType(viewpoint::DSemanticDecorator).target/]">
                <subModelOperations xsi:type="tool:Unset" featureName="declaration" elementExpression="[elementView.oclAsType(viewpoint::DEdge).targetNode.oclAsType(viewpoint::DSemanticDecorator).target/]"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolGroup" name="AbstractEntitiesCreation">
            <tools xsi:type="tool:NodeCreationDescription" name="CreateAbstractEntity" label="New Declaration Parameter" nodeMappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@containerMappings[name='RelationLibrary']/@subContainerMappings[name='RelationDeclaration']/@subNodeMappings[name='AbstractEntity']" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateParameter.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:SelectionWizardDescription" name="CreateTypedAbstractEntity" label="New Typed Declaration Parameter" precondition="[container.oclIsTypeOf(RelationDeclaration)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateRelationBasedLibrary).getAllExistingTypes()/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the declaration parameter" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateParameter.gif" windowTitle="New Declaration Parameter Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="var:element"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:SelectionWizardDescription" name="CreateStartTypedAbstractEntity" label="New Typed Declaration Parameter Start" precondition="[container.oclIsTypeOf(RelationDeclaration)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateRelationBasedLibrary).getAllExistingTypes()/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the declaration parameter" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateParameter.gif" windowTitle="New Declaration Parameter Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="var:element"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="desiredEventKind" valueExpression="start"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:SelectionWizardDescription" name="CreateFinishTypedAbstractEntity" label="New Typed Declaration Parameter Finish" precondition="[container.oclIsTypeOf(RelationDeclaration)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateRelationBasedLibrary).getAllExistingTypes()/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the declaration parameter" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateParameter.gif" windowTitle="New Declaration Parameter Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="var:element"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="desiredEventKind" valueExpression="finish"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:SelectionWizardDescription" name="CreateSendTypedAbstractEntity" label="New Typed Declaration Parameter Send" precondition="[container.oclIsTypeOf(RelationDeclaration)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateRelationBasedLibrary).getAllExistingTypes()/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the declaration parameter" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateParameter.gif" windowTitle="New Declaration Parameter Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="var:element"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="desiredEventKind" valueExpression="send"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:SelectionWizardDescription" name="CreateReceiveTypedAbstractEntity" label="New Typed Declaration Parameter Receive" precondition="[container.oclIsTypeOf(RelationDeclaration)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateRelationBasedLibrary).getAllExistingTypes()/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the declaration parameter" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateParameter.gif" windowTitle="New Declaration Parameter Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="var:element"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="desiredEventKind" valueExpression="receive"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:SelectionWizardDescription" name="CreateConsumeTypedAbstractEntity" label="New Typed Declaration Parameter Consume" precondition="[container.oclIsTypeOf(RelationDeclaration)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateRelationBasedLibrary).getAllExistingTypes()/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the declaration parameter" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateParameter.gif" windowTitle="New Declaration Parameter Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="var:element"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="desiredEventKind" valueExpression="consume"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:SelectionWizardDescription" name="CreateProduceTypedAbstractEntity" label="New Typed Declaration Parameter Produce" precondition="[container.oclIsTypeOf(RelationDeclaration)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateRelationBasedLibrary).getAllExistingTypes()/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the declaration parameter" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateParameter.gif" windowTitle="New Declaration Parameter Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="var:element"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="desiredEventKind" valueExpression="produce"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OpenXtextEditor" label="Open Xtext Editor" forceRefresh="true" mappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@containerMappings[name='RelationLibrary']/@subContainerMappings[name='RelationDeclaration'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@containerMappings[name='RelationLibrary']/@subContainerMappings[name='StateMachineRelationDefinition']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaActionCall" name="org.gemoc.mocc.ccslmocc.model.design.OpenEditorActionCallID" forceRefresh="true" action="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@toolSections.0/@ownedTools[name='OpenEmbeddedEditorAction']"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="NameEditRelationTools">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramCreationDescription" name="CreateStateBasedDefDiagram" forceRefresh="true" diagramDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']">
            <initialOperation>
              <firstModelOperations xsi:type="tool:Navigation" diagramDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']"/>
            </initialOperation>
            <containerViewVariable name="containerView"/>
            <representationNameVariable name="diagramName"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="NameEditAbstractEntity">
            <mask mask="'{'{0}'} '{1}: {2}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:arg1"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
      <additionalLayers name="StateMachineRelationDefinition" label="State Machine Relation Definition">
        <edgeMappings name="Transition" deletionDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@toolSections.0/@ownedTools[name='DeleteTransition']" semanticCandidatesExpression="[eAllContents()/]" sourceMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@containerMappings[name='StateMachineRelationDefinitionImport']/@subNodeMappings[name='State']" targetMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@containerMappings[name='StateMachineRelationDefinitionImport']/@subNodeMappings[name='State']" targetFinderExpression="[target/]" sourceFinderExpression="[source/]" domainClass="Transition" useDomainElement="true" reconnections="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@toolSections.0/@ownedTools[name='EdgeMoveSrc'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@toolSections.0/@ownedTools[name='EdgeMoveTgt']">
          <style sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="service:computeLabel">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="GuardRelation" sourceMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@edgeMappings[name='Transition']" targetMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@containerMappings[name='StateMachineRelationDefinitionImport']/@subNodeMappings[name='Guard']" targetFinderExpression="[guard/]">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="6" labelFormat="italic" showIcon="false" labelExpression="guard">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ActionRelation" sourceMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@edgeMappings[name='Transition']" targetMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@containerMappings[name='StateMachineRelationDefinitionImport']/@subNodeMappings[name='FinishClockAction'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@containerMappings[name='StateMachineRelationDefinitionImport']/@subNodeMappings[name='IntegerAssignementAction'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@containerMappings[name='StateMachineRelationDefinitionImport']/@subNodeMappings[name='StartClockAction']" targetFinderExpression="[actions/]">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="6" labelFormat="italic" showIcon="false" labelExpression="action">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="TriggerRelation" sourceMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@edgeMappings[name='Transition']" targetMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@containerMappings[name='StateMachineRelationDefinitionImport']/@subNodeMappings[name='Trigger']" targetFinderExpression="[trigger/]">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="6" labelFormat="italic" showIcon="false" labelExpression="trigger">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings xsi:type="description:ContainerMappingImport" name="StateMachineRelationDefinitionImport" semanticCandidatesExpression="[eAllContents()/]" domainClass="ccslmocc.StateMachineRelationDefinition" importedMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@containerMappings[name='RelationLibrary']/@subContainerMappings[name='StateMachineRelationDefinition']">
          <subNodeMappings name="State" semanticCandidatesExpression="[states/]" domainClass="FSMModel.State">
            <style xsi:type="style:BundledImageDescription" labelFormat="bold" showIcon="false" resizeKind="NSEW" shape="dot">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
            <conditionnalStyles predicateExpression="[self.eContainer()->filter(ccslmocc::StateMachineRelationDefinition).initialState->includes(self)/]">
              <style xsi:type="style:BundledImageDescription" labelFormat="bold" showIcon="false" resizeKind="NSEW" shape="dot">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="[self.eContainer()->filter(ccslmocc::StateMachineRelationDefinition).finalStates->includes(self)/]">
              <style xsi:type="style:BundledImageDescription" labelFormat="bold" showIcon="false" resizeKind="NSEW" shape="dot">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
              </style>
            </conditionnalStyles>
          </subNodeMappings>
          <subNodeMappings name="FinishClockAction" semanticCandidatesExpression="[(transitions.actions)/]" doubleClickDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@toolSections.0/@ownedTools[name='OpenXtextEditor']" domainClass="FinishClock">
            <style xsi:type="style:WorkspaceImageDescription" labelFormat="italic" showIcon="false" labelExpression="[eClass().name/]" sizeComputationExpression="-1" workspacePath="/org.gemoc.mocc.ccslmocc.model.design/images/Action.gif">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="IntegerAssignementAction" semanticCandidatesExpression="[(transitions.actions)/]" doubleClickDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@toolSections.0/@ownedTools[name='OpenXtextEditor']" domainClass="IntegerAssignement">
            <style xsi:type="style:WorkspaceImageDescription" labelFormat="italic" showIcon="false" labelExpression="[eClass().name/]" sizeComputationExpression="-1" workspacePath="/org.gemoc.mocc.ccslmocc.model.design/images/Action.gif">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="Guard" semanticCandidatesExpression="[transitions.guard/]" doubleClickDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@toolSections.0/@ownedTools[name='OpenXtextEditor']" domainClass="Guard">
            <style xsi:type="style:WorkspaceImageDescription" labelFormat="italic" showIcon="false" labelExpression="[eClass().name/]" sizeComputationExpression="-1" workspacePath="/org.gemoc.mocc.ccslmocc.model.design/images/Guard.gif">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="Trigger" semanticCandidatesExpression="[transitions.trigger/]" doubleClickDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@toolSections.0/@ownedTools[name='OpenXtextEditor']" domainClass="Trigger">
            <style xsi:type="style:WorkspaceImageDescription" labelFormat="italic" showIcon="false" labelExpression="" sizeComputationExpression="-1" workspacePath="/org.gemoc.mocc.ccslmocc.model.design/images/Trigger.gif">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="StartClockAction" semanticCandidatesExpression="[(transitions.actions)/]" doubleClickDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@toolSections.0/@ownedTools[name='OpenXtextEditor']" domainClass="StartClock">
            <style xsi:type="style:WorkspaceImageDescription" labelFormat="italic" showIcon="false" labelExpression="[eClass().name/]" sizeComputationExpression="-1" workspacePath="/org.gemoc.mocc.ccslmocc.model.design/images/Action.gif">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/FSM.gif" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
          </style>
        </containerMappings>
        <toolSections name="StateMachineTools" label="State Machine Tools">
          <ownedTools xsi:type="tool:ToolGroup" name="FSMStates" label="FSM States">
            <tools xsi:type="tool:NodeCreationDescription" name="FSMStateCreation" label="New State" nodeMappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@containerMappings[name='StateMachineRelationDefinitionImport']/@subNodeMappings[name='State']" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateState.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[container/]">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="FSMModel.State" referenceName="states">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="service:createLabel"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:NodeCreationDescription" name="FSMInitialStateCreation" label="New Initial State" precondition="[container.oclAsType(StateMachineRelationDefinition).initialState = null/]" nodeMappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@containerMappings[name='StateMachineRelationDefinitionImport']/@subNodeMappings[name='State']" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateInitialState.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[container/]">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="FSMModel.State" referenceName="states" variableName="initState">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="service:createLabel"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="[initState.eContainer()/]">
                      <subModelOperations xsi:type="tool:SetValue" featureName="initialState" valueExpression="[initState/]"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:NodeCreationDescription" name="FSMFinalStateCreation" label="New Final State" nodeMappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@containerMappings[name='StateMachineRelationDefinitionImport']/@subNodeMappings[name='State']" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateFinalNode.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[container/]">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="FSMModel.State" referenceName="states" variableName="finalState">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="service:createLabel"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="[container/]">
                      <subModelOperations xsi:type="tool:SetValue" featureName="finalStates" valueExpression="[finalState/]"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="TransitionCreation" label="New Transition" edgeMappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@edgeMappings[name='Transition']" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateTransition.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[source.eContainer()/]">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="FSMModel.Transition" referenceName="transitions" variableName="t">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="[t/]">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="[source.oclAsType(State).name+'To'+target.oclAsType(State).name/]"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="source" valueExpression="[source/]"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="target" valueExpression="[target/]"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolDescription" name="TriggerCreation" label="New Trigger" precondition="[self.oclIsTypeOf(Transition)/]" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/Trigger.gif">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[element/]">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="CCSLTrigger" referenceName="trigger" variableName="ob"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolDescription" name="GuardCreation" label="New Guard" precondition="[self.oclIsTypeOf(Transition)/]" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateGuard.gif">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[element/]">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="CCSLGuard" referenceName="guard" variableName="ob"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolGroup" name="ToolAction">
            <tools xsi:type="tool:ToolDescription" name="IntegerAssignementActionCreation" label="New IntegerAssignement Action" precondition="[(self.oclIsTypeOf(Transition))/]" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateAction.gif">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[element/]">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="ccslmoc.IntegerAssignement" referenceName="actions" variableName="ob"/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:ToolDescription" name="FinishClockActionCreation" label="New Finish Clock Action" precondition="[(self.oclIsTypeOf(Transition))/]" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateAction.gif">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[element/]">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="FinishClock" referenceName="actions" variableName="ob"/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:ToolDescription" name="StartClockActionCreation" label="New Start Clock Action" precondition="[(self.oclIsTypeOf(Transition))/]" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateAction.gif">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[element/]">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="StartClock" referenceName="actions" variableName="ob"/>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OpenXtextEditor" label="Open Xtext Editor" forceRefresh="true" mappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@containerMappings[name='StateMachineRelationDefinitionImport']/@subNodeMappings[name='Guard'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@containerMappings[name='StateMachineRelationDefinitionImport']/@subNodeMappings[name='FinishClockAction'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@containerMappings[name='StateMachineRelationDefinitionImport']/@subNodeMappings[name='IntegerAssignementAction'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@containerMappings[name='StateMachineRelationDefinitionImport']/@subNodeMappings[name='Trigger'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='StateMachineRelationDefinition']/@containerMappings[name='StateMachineRelationDefinitionImport']/@subNodeMappings[name='StartClockAction']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaActionCall" name="org.gemoc.mocc.ccslmocc.model.design.OpenEditorActionCallID" forceRefresh="true" action="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@toolSections.0/@ownedTools[name='OpenEmbeddedEditorAction']"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="EdgeMoveSrc" forceRefresh="true" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[element/]">
                <subModelOperations xsi:type="tool:SetValue" featureName="source" valueExpression="[target/]"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="EdgeMoveTgt" forceRefresh="true">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[edgeView.oclAsType(viewpoint::DSemanticDecorator).target/]">
                <subModelOperations xsi:type="tool:SetValue" featureName="target" valueExpression="[target/]"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DeleteTransition">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[element/]">
                <subModelOperations xsi:type="tool:Unset" featureName="source" elementExpression="[elementView->filter(viewpoint::DEdge).sourceNode->filter(viewpoint::DSemanticDecorator).target/]"/>
                <subModelOperations xsi:type="tool:Unset" featureName="target" elementExpression="[elementView->filter(viewpoint::DEdge).targetNode->filter(viewpoint::DSemanticDecorator).target/]"/>
                <subModelOperations xsi:type="tool:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
      <additionalLayers name="LibraryDefinition" label="Library Definition">
        <containerMappings name="ImportURIContainer" semanticCandidatesExpression="[thisEObject.imports->first()/]" domainClass="ImportStatement" childrenPresentation="List">
          <subNodeMappings name="ImportURI" labelDirectEdit="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='LibraryDefinition']/@toolSections.0/@ownedTools[name='LabelImport']" semanticCandidatesExpression="[self.eContainer().oclAsType(StateRelationBasedLibrary).imports/]" domainClass="ImportStatement">
            <style xsi:type="style:SquareDescription" labelFormat="bold" showIcon="false" labelExpression="['import &quot;'+self.importURI+'&quot; as '+self.alias/]" labelAlignment="LEFT" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" labelFormat="bold_italic" showIcon="false" labelExpression="Imported Librairies" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_red']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_red']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_red']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
          </style>
        </containerMappings>
        <containerMappings name="TypeContainer" semanticCandidatesExpression="[predefinedTypes->first()/]" domainClass="BasicType.Type" childrenPresentation="List">
          <subNodeMappings name="TypeDeclaration" labelDirectEdit="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='LibraryDefinition']/@toolSections.0/@ownedTools[name='LabelType']" semanticCandidatesExpression="[eContainer().oclAsType(StateRelationBasedLibrary).predefinedTypes/]" domainClass="BasicType.Type">
            <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="[self.eClass().name+': '+self.name/]" labelAlignment="LEFT" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="10" arcHeight="10" labelFormat="bold_italic" showIcon="false" labelExpression="Predefined Types" roundedCorner="true" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_purple']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_purple']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
          </style>
        </containerMappings>
        <containerMappings name="ImportedTypeContainer" deletionDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='LibraryDefinition']/@toolSections.0/@ownedTools[name='DeleteImportedTypes']" semanticCandidatesExpression="[getImportedTypes()->first()/]" domainClass="BasicType.Type" childrenPresentation="List">
          <subNodeMappings name="ImportedTypeDeclaration" deletionDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='LibraryDefinition']/@toolSections.0/@ownedTools[name='DeleteImportedTypes']" semanticCandidatesExpression="[containerView.eContainer(viewpoint::DSemanticDecorator).target.oclAsType(StateRelationBasedLibrary).getImportedTypes()/]" synchronizationLock="true" domainClass="BasicType.Type">
            <style xsi:type="style:SquareDescription" labelFormat="italic" showIcon="false" labelExpression="[self.eClass().name+': '+self.name/]" labelAlignment="LEFT" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_purple']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="10" arcHeight="10" labelFormat="bold_italic" showIcon="false" labelExpression="Predefined Types from Imported Librairies" roundedCorner="true" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_purple']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_purple']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
          </style>
        </containerMappings>
        <toolSections name="LibraryTools" label="Library Tools">
          <ownedTools xsi:type="tool:ToolGroup" name="TypeCreationGroup">
            <tools xsi:type="tool:ToolDescription" name="CreateIntegerDeclaration" label="New Integer Type Declaration" precondition="[container.oclIsTypeOf(StateRelationBasedLibrary) or (container.oclIsKindOf(BasicType::Type)and(container.eContainer().oclIsTypeOf(StateRelationBasedLibrary)))/]" forceRefresh="true">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:Switch">
                  <cases conditionExpression="[element.oclIsTypeOf(StateRelationBasedLibrary)/]">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="BasicType.Integer" referenceName="predefinedTypes">
                      <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['New'+self.eClass().name+self.eContainer(StateRelationBasedLibrary).predefinedTypes->filter(BasicType::Integer)->size()/]"/>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="[element.oclIsKindOf(BasicType::Type)/]">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="[element.eContainer()/]">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="BasicType.Integer" referenceName="predefinedTypes">
                        <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['New'+self.eClass().name+self.eContainer(StateRelationBasedLibrary).predefinedTypes->filter(BasicType::Integer)->size()/]"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:ToolDescription" name="CreateBooleanDeclaration" label="New Boolean Type Declaration" precondition="[container.oclIsTypeOf(StateRelationBasedLibrary) or (container.oclIsKindOf(BasicType::Type)and(container.eContainer().oclIsTypeOf(StateRelationBasedLibrary)))/]" forceRefresh="true">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:Switch">
                  <cases conditionExpression="[element.oclIsTypeOf(StateRelationBasedLibrary)/]">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="BasicType.Boolean" referenceName="predefinedTypes">
                      <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['New'+self.eClass().name+self.eContainer(StateRelationBasedLibrary).predefinedTypes->filter(BasicType::Boolean)->size()/]"/>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="[element.oclIsKindOf(BasicType::Type)/]">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="[element.eContainer()/]">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="BasicType.Boolean" referenceName="predefinedTypes">
                        <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['New'+self.eClass().name+self.eContainer(StateRelationBasedLibrary).predefinedTypes->filter(BasicType::Boolean)->size()/]"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:ToolDescription" name="CreateDiscreteClockTypeDeclaration" label="New Discrete Clock Type Declaration" precondition="[container.oclIsTypeOf(StateRelationBasedLibrary) or (container.oclIsKindOf(BasicType::Type)and(container.eContainer().oclIsTypeOf(StateRelationBasedLibrary)))/]" forceRefresh="true">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:Switch">
                  <cases conditionExpression="[element.oclIsTypeOf(StateRelationBasedLibrary)/]">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="BasicType.DiscreteClockType" referenceName="predefinedTypes">
                      <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['New'+self.eClass().name+self.eContainer(StateRelationBasedLibrary).predefinedTypes->filter(BasicType::DiscreteClockType)->size()/]"/>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="[element.oclIsKindOf(BasicType::Type)/]">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="[element.eContainer()/]">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="BasicType.DiscreteClockType" referenceName="predefinedTypes">
                        <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['New'+self.eClass().name+self.eContainer(StateRelationBasedLibrary).predefinedTypes->filter(BasicType::DiscreteClockType)->size()/]"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:ToolDescription" name="CreateDenseClockTypeDeclaration" label="New Dense Clock Type Declaration" precondition="[container.oclIsTypeOf(StateRelationBasedLibrary) or (container.oclIsKindOf(BasicType::Type)and(container.eContainer().oclIsTypeOf(StateRelationBasedLibrary)))/]" forceRefresh="true">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:Switch">
                  <cases conditionExpression="[element.oclIsTypeOf(StateRelationBasedLibrary)/]">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="BasicType.DenseClockType" referenceName="predefinedTypes">
                      <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['New'+self.eClass().name+self.eContainer(StateRelationBasedLibrary).predefinedTypes->filter(BasicType::DenseClockType)->size()/]"/>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="[element.oclIsKindOf(BasicType::Type)/]">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="[element.eContainer()/]">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="BasicType.DenseClockType" referenceName="predefinedTypes">
                        <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['New'+self.eClass().name+self.eContainer(StateRelationBasedLibrary).predefinedTypes->filter(BasicType::DenseClockType)->size()/]"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:SelectionWizardDescription" name="CreateSequenceTypeOfDeclaration" label="New Sequence Type Of Declaration" precondition="[container.oclIsTypeOf(StateRelationBasedLibrary) or (container.oclIsKindOf(BasicType::Type)and(container.eContainer().oclIsTypeOf(StateRelationBasedLibrary)))/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateRelationBasedLibrary).getAllExistingTypes()->filter(PrimitiveType)/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the sequence" windowTitle="New Sequence Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:Switch">
                  <cases conditionExpression="[container.oclIsTypeOf(StateRelationBasedLibrary)/]">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="BasicType.SequenceType" referenceName="predefinedTypes">
                      <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['New'+self.eClass().name+self.eContainer(StateRelationBasedLibrary).predefinedTypes->filter(BasicType::SequenceType)->size()/]"/>
                      <subModelOperations xsi:type="tool:SetValue" featureName="elementType" valueExpression="var:element"/>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="[container.oclIsKindOf(BasicType::Type)/]">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="[container.eContainer()/]">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="BasicType.SequenceType" referenceName="predefinedTypes">
                        <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['New'+self.eClass().name+self.eContainer(StateRelationBasedLibrary).predefinedTypes->filter(BasicType::SequenceType)->size()/]"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="elementType" valueExpression="var:element"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default/>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolGroup" name="URICreationTools">
            <tools xsi:type="tool:ToolDescription" name="CreateURI" label="Import Library" precondition="[container.oclIsTypeOf(StateRelationBasedLibrary) or container.oclIsTypeOf(ImportStatement)/]">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:Switch">
                  <cases conditionExpression="[element.oclIsTypeOf(StateRelationBasedLibrary)/]">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="ImportStatement" referenceName="imports">
                        <subModelOperations xsi:type="tool:SetValue" featureName="alias" valueExpression="['NewAlias'+self.eContainer(StateRelationBasedLibrary).imports->size()/]"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="importURI" valueExpression="todo"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="[element.oclIsTypeOf(ImportStatement)/]">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="[element.eContainer(StateRelationBasedLibrary)/]">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="ImportStatement" referenceName="imports">
                        <subModelOperations xsi:type="tool:SetValue" featureName="alias" valueExpression="['NewAlias'+self.eContainer(StateRelationBasedLibrary).imports->size()/]"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="importURI" valueExpression="todo"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:ToolDescription" name="CreateURI" label="Import Kernel Library" precondition="[container.oclIsTypeOf(StateRelationBasedLibrary) or container.oclIsTypeOf(ImportStatement)/]">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:Switch">
                  <cases conditionExpression="[element.oclIsTypeOf(StateRelationBasedLibrary)/]">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="ImportStatement" referenceName="imports">
                        <subModelOperations xsi:type="tool:SetValue" featureName="alias" valueExpression="kernel"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="importURI" valueExpression="platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/kernel.ccslLib"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="[element.oclIsTypeOf(ImportStatement)/]">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="[element.eContainer(StateRelationBasedLibrary)/]">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="ImportStatement" referenceName="imports">
                        <subModelOperations xsi:type="tool:SetValue" featureName="alias" valueExpression="kernel"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="importURI" valueExpression="platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/kernel.ccslLib"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:ToolDescription" name="CreateURI" label="Import CCSL Library" precondition="[container.oclIsTypeOf(StateRelationBasedLibrary) or container.oclIsTypeOf(ImportStatement)/]">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:Switch">
                  <cases conditionExpression="[element.oclIsTypeOf(StateRelationBasedLibrary)/]">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="ImportStatement" referenceName="imports">
                        <subModelOperations xsi:type="tool:SetValue" featureName="alias" valueExpression="ccsl"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="importURI" valueExpression="platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/CCSL.ccslLib"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="[element.oclIsTypeOf(ImportStatement)/]">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="[element.eContainer(StateRelationBasedLibrary)/]">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="ImportStatement" referenceName="imports">
                        <subModelOperations xsi:type="tool:SetValue" featureName="alias" valueExpression="ccsl"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="importURI" valueExpression="platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/CCSL.ccslLib"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default/>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="LabelType">
            <mask mask="{0}: {1}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:arg1"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="LabelImport">
            <mask mask="import &quot;{0}&quot; as {1}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:SetValue" featureName="alias" valueExpression="var:arg1">
                <subModelOperations xsi:type="tool:SetValue" featureName="importURI" valueExpression="var:arg0"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DeleteImportedTypes">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaActionCall" name="CantDeleteElement" forceRefresh="true" action="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='LibraryDefinition']/@toolSections.0/@ownedTools[name='DeleteNotAllowed']"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ExternalJavaAction" name="DeleteNotAllowed" forceRefresh="true" id="org.gemoc.mocc.ccslmocc.model.design.actions.DeleteNotAllowedID"/>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description:DiagramDescription" name="StateMachineRelationDiagram" label="State Machine Relation Diagram" domainClass="ccslmocc.StateMachineRelationDefinition">
      <metamodel href="platform:/plugin/org.gemoc.mocc.ccslmocc.model/model/Ccslmocc.ecore#/"/>
      <metamodel href="platform:/plugin/org.gemoc.mocc.fsmkernel.model/model/FSMModel.ecore#/"/>
      <metamodel href="http://fr.inria.aoste.timemodel#/"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//BasicType"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel/ClockExpressionAndRelation"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel/ClockExpressionAndRelation/KernelExpression"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel/ClockExpressionAndRelation/KernelRelation"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel/ClassicalExpression"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//PrimitivesTypeValue"/>
      <metamodel href="http://org.gemoc.mocc.fsmmodel/editionextension/1.0#/"/>
      <filters xsi:type="filter:CompositeFilterDescription" name="ShowActions" label="Show Actions">
        <filters xsi:type="filter:MappingFilter" filterKind="COLLAPSE" mappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@nodeMappings[name='IntAssignAction'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@edgeMappings[name='ActionLink']"/>
      </filters>
      <filters xsi:type="filter:CompositeFilterDescription" name="ShowGuards" label="Show Guards">
        <filters xsi:type="filter:MappingFilter" filterKind="COLLAPSE" mappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@nodeMappings[name='Guard'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@edgeMappings[name='GuardLink']"/>
      </filters>
      <filters xsi:type="filter:CompositeFilterDescription" name="ShowTriggers" label="Show Triggers">
        <filters xsi:type="filter:MappingFilter" filterKind="COLLAPSE" mappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@nodeMappings[name='Trigger'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@edgeMappings[name='TriggerLink']"/>
      </filters>
      <concerns>
        <ownedConcernDescriptions name="HideTransitionGraphicalDesc" label="Hide Transitions Graphical Descriptions" filters="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@filters[name='ShowActions'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@filters[name='ShowGuards'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@filters[name='ShowTriggers']"/>
      </concerns>
      <defaultLayer name="Default">
        <nodeMappings name="FSMState" labelDirectEdit="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='SetStateName']" semanticCandidatesExpression="[states/]" domainClass="FSMModel.State">
          <style xsi:type="style:BundledImageDescription" labelFormat="bold" showIcon="false" resizeKind="NSEW" shape="dot">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
          <conditionnalStyles predicateExpression="[self.eContainer()->filter(StateMachineDefinition).initialState->includes(self)/]">
            <style xsi:type="style:BundledImageDescription" labelFormat="bold" showIcon="false" resizeKind="NSEW" shape="dot">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="[self.eContainer()->filter(StateMachineDefinition).finalStates->includes(self)/]">
            <style xsi:type="style:BundledImageDescription" labelFormat="bold" showIcon="false" resizeKind="NSEW" shape="dot">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <edgeMappings name="FSMTransition" label="FSM Transition" deletionDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DeleteTransition']" semanticCandidatesExpression="[eAllContents()/]" doubleClickDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@toolSections.0/@ownedTools[name='OpenXtextEditor']" sourceMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@nodeMappings[name='FSMState']" targetMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@nodeMappings[name='FSMState']" targetFinderExpression="[target/]" sourceFinderExpression="[source/]" domainClass="FSMModel.Transition" useDomainElement="true" reconnections="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='EdgeMoveTgt'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='EdgeMoveSrc']">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="service:computeLabel">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <toolSections name="FSMTools" label="Basic FSM Tools">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="FSMStateCreation" label="New State" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@nodeMappings[name='FSMState']" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateState.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="FSMModel.State" referenceName="states">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="service:createLabel"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="FSMInitialStateCreation" label="New Initial State" precondition="[container.oclAsType(FSMModel::StateMachineDefinition).initialState = null/]" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@nodeMappings[name='FSMState']" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateInitialState.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="FSMModel.State" referenceName="states" variableName="initState">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="service:createLabel"/>
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="[initState.eContainer()/]">
                    <subModelOperations xsi:type="tool:SetValue" featureName="initialState" valueExpression="var:initState"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="FSMFinalStateCreation" label="New Final State" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@nodeMappings[name='FSMState']" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateFinalNode.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="FSMModel.State" referenceName="states" variableName="finalState">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="service:createLabel"/>
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool:SetValue" featureName="finalStates" valueExpression="var:finalState"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="SetStateName" label="Set State Name">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="FSMTransitionCreation" label="New Transition" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@edgeMappings[name='FSMTransition']" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateTransition.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[source.eContainer()/]">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="FSMModel.Transition" referenceName="transitions" variableName="t">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:t">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="[source.oclAsType(State).name+'To'+target.oclAsType(State).name/]"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="source" valueExpression="var:source"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="target" valueExpression="var:target"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="EdgeMoveTgt" forceRefresh="true">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[element/]">
                <subModelOperations xsi:type="tool:Unset" featureName="target" elementExpression="var:source">
                  <subModelOperations xsi:type="tool:SetValue" featureName="target" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="EdgeMoveSrc" forceRefresh="true" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[element/]">
                <subModelOperations xsi:type="tool:Unset" featureName="source" elementExpression="var:source">
                  <subModelOperations xsi:type="tool:SetValue" featureName="source" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DeleteTransition">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:Unset" featureName="source" elementExpression="[elementView->filter(viewpoint::DEdge).sourceNode->filter(viewpoint::DSemanticDecorator).target/]"/>
                <subModelOperations xsi:type="tool:Unset" featureName="target" elementExpression="[elementView->filter(viewpoint::DEdge).targetNode->filter(viewpoint::DSemanticDecorator)/]"/>
                <subModelOperations xsi:type="tool:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
      <additionalLayers name="TransitionDetails" label="Transition Details">
        <nodeMappings name="Trigger" deletionDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@toolSections.0/@ownedTools[name='DeleteTrigger']" semanticCandidatesExpression="[eAllContents()/]" doubleClickDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@toolSections.0/@ownedTools[name='OpenXtextEditor']" domainClass="FSMModel.Trigger">
          <style xsi:type="style:WorkspaceImageDescription" labelFormat="italic" showIcon="false" labelExpression="[trueTriggers.oclAsType(BindableEntity).name->sep(', ')/]" sizeComputationExpression="-1" workspacePath="/org.gemoc.mocc.ccslmocc.model.design/images/Trigger.gif">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="IntAssignAction" deletionDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@toolSections.0/@ownedTools[name='DeleteAction']" labelDirectEdit="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@toolSections.0/@ownedTools[name='ActionGroup']/@tools.3" semanticCandidatesExpression="[transitions.actions/]" doubleClickDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@toolSections.0/@ownedTools[name='OpenXtextEditor']" domainClass="FSMModel.IntegerAssignement">
          <style xsi:type="style:WorkspaceImageDescription" labelFormat="italic" showIcon="false" labelExpression="[name/]" sizeComputationExpression="-1" workspacePath="/org.gemoc.mocc.ccslmocc.model.design/images/Action.gif">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="Guard" deletionDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@toolSections.0/@ownedTools[name='DeleteGuard']" semanticCandidatesExpression="[transitions.guard/]" doubleClickDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@toolSections.0/@ownedTools[name='OpenXtextEditor']" domainClass="FSMModel.Guard">
          <style xsi:type="style:WorkspaceImageDescription" labelFormat="italic" showIcon="false" labelExpression="[thisEObject.value.name/]" sizeComputationExpression="-1" workspacePath="/org.gemoc.mocc.ccslmocc.model.design/images/Guard.gif">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="StartClockAction" deletionDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@toolSections.0/@ownedTools[name='DeleteAction']" semanticCandidatesExpression="[transitions.actions/]" doubleClickDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@toolSections.0/@ownedTools[name='OpenXtextEditor']" domainClass="ccslmocc.StartClock">
          <style xsi:type="style:WorkspaceImageDescription" labelFormat="italic" showIcon="false" labelExpression="[clock/]" sizeComputationExpression="-1" workspacePath="/org.gemoc.mocc.ccslmocc.model.design/images/Action.gif">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="FinishClockAction" deletionDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@toolSections.0/@ownedTools[name='DeleteAction']" semanticCandidatesExpression="[transitions.actions/]" doubleClickDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@toolSections.0/@ownedTools[name='OpenXtextEditor']" domainClass="ccslmocc.FinishClock">
          <style xsi:type="style:WorkspaceImageDescription" labelFormat="italic" showIcon="false" labelExpression="[clock/]" sizeComputationExpression="-1" workspacePath="/org.gemoc.mocc.ccslmocc.model.design/images/Action.gif">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="ActionLink" sourceMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@edgeMappings[name='FSMTransition']" targetMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@nodeMappings[name='IntAssignAction']" targetFinderExpression="[actions->filter(FSMModel::IntegerAssignement)/]">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelFormat="italic" showIcon="false" labelExpression="do">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="TriggerLink" sourceMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@edgeMappings[name='FSMTransition']" targetMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@nodeMappings[name='Trigger']" targetFinderExpression="[trigger/]">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelFormat="italic" showIcon="false" labelExpression="trigger on">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="GuardLink" sourceMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@edgeMappings[name='FSMTransition']" targetMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@nodeMappings[name='Guard']" targetFinderExpression="[guard/]">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelFormat="italic" showIcon="false" labelExpression="provided that">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="StartClockActionLink" sourceMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@edgeMappings[name='FSMTransition']" targetMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@nodeMappings[name='StartClockAction']" targetFinderExpression="[actions->filter(StartClock)/]">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelFormat="italic" showIcon="false" labelExpression="do start">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="FinishActionLink" sourceMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@edgeMappings[name='FSMTransition']" targetMapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@nodeMappings[name='FinishClockAction']" targetFinderExpression="[actions/]">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelFormat="italic" showIcon="false" labelExpression="do finish">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <toolSections name="TransitionTooling" label="Transition Tools">
          <ownedTools xsi:type="tool:ToolGroup" name="TriggerCreationGroup">
            <tools xsi:type="tool:ToolDescription" name="TriggerCreation" label="New Trigger" precondition="[self.oclIsTypeOf(Transition)/]" forceRefresh="true" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/Trigger.gif">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="FSMModel.Trigger" referenceName="trigger" variableName="ob"/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:SelectionWizardDescription" name="AddTrueTriggers" label="Add True Triggers On" precondition="[container.oclIsTypeOf(Transition)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateMachineRelationDefinition).declaration.parameters/]" multiple="true" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select element(s) to trigger on" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/Trigger.gif" windowTitle="Selection of Element(s) To Trigger On">
              <element name="elements"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool:If" conditionExpression="[self.oclAsType(FSMModel::Transition).trigger->isEmpty()/]">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="FSMModel.Trigger" referenceName="trigger" variableName="trig"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="[container.oclAsType(FSMModel::Transition).trigger/]">
                    <subModelOperations xsi:type="tool:SetValue" featureName="trueTriggers" valueExpression="[elements/]"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:SelectionWizardDescription" name="AddFalseTriggers" label="Add False Triggers On" precondition="[container.oclIsTypeOf(Transition)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateMachineRelationDefinition).declaration.parameters/]" multiple="true" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select element(s) to trigger on" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/Trigger.gif" windowTitle="Selection of Element(s) To Trigger On">
              <element name="elements"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool:If" conditionExpression="[self.oclAsType(FSMModel::Transition).trigger->isEmpty()/]">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="FSMModel.Trigger" referenceName="trigger" variableName="trig"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="[container.oclAsType(FSMModel::Transition).trigger/]">
                    <subModelOperations xsi:type="tool:For" expression="elements" iteratorName="e">
                      <subModelOperations xsi:type="tool:SetValue" featureName="falseTriggers" valueExpression="[e/]"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolGroup" name="ActionGroup">
            <tools xsi:type="tool:ToolDescription" name="IntAssignActionCreation" label="New Integer Assignement Action" precondition="[self.oclIsKindOf(Transition)/]" forceRefresh="true" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateAction.gif">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="FSMModel.IntegerAssignement" referenceName="actions" variableName="ob">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="action"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:ToolDescription" name="StartClockActionCreation" label="New Start Clock Action" precondition="[self.oclIsKindOf(Transition)/]" forceRefresh="true" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateAction.gif">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="ccslmocc.StartClock" referenceName="actions" variableName="ob"/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:ToolDescription" name="FinishClockActionCreation" label="New Finish Clock Action" precondition="[self.oclIsKindOf(Transition)/]" forceRefresh="true" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateAction.gif">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="ccslmocc.FinishClock" referenceName="actions" variableName="ob"/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:DirectEditLabel" name="EditLabelAction" forceRefresh="true">
              <mask mask="{0}"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:arg0"/>
              </initialOperation>
            </tools>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolDescription" name="GuardCreation" label="New Guard" precondition="[self.oclIsTypeOf(Transition)/]" forceRefresh="true" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/CreateGuard.gif">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="FSMModel.Guard" referenceName="guard" variableName="ob"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OpenXtextEditor" label="Open Xtext Editor" forceRefresh="true" mappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@edgeMappings[name='FSMTransition'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@nodeMappings[name='Trigger'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@nodeMappings[name='IntAssignAction'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@nodeMappings[name='Guard'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@nodeMappings[name='StartClockAction'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@nodeMappings[name='FinishClockAction']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaActionCall" name="org.gemoc.mocc.ccslmocc.model.design.OpenEditorActionCallID" action="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@toolSections.0/@ownedTools[name='OpenEmbeddedEditorAction']"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ExternalJavaAction" name="OpenEmbeddedEditorAction" forceRefresh="true" id="org.gemoc.mocc.ccslmocc.model.design.OpenEmbeddedEditorID"/>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DeleteTrigger" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:For" expression="trueTriggers" iteratorName="trigger">
                  <subModelOperations xsi:type="tool:Unset" featureName="trueTriggers" elementExpression="trigger"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:For" expression="falseTriggers" iteratorName="trigger">
                  <subModelOperations xsi:type="tool:Unset" featureName="falseTriggers" elementExpression="trigger"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="[element/]">
                  <subModelOperations xsi:type="tool:RemoveElement"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DeleteGuard">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:Unset" featureName="value" elementExpression="[value/]">
                  <subModelOperations xsi:type="tool:RemoveElement"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DeleteAction">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
      <additionalLayers name="Declarations">
        <containerMappings name="DeclarationBlockID" semanticCandidatesExpression="[declarationBlock/]" doubleClickDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@toolSections.0/@ownedTools[name='OpenXtextEditor']" domainClass="FSMModel.DeclarationBlock" childrenPresentation="List">
          <subNodeMappings name="ConcreteEntityID" labelDirectEdit="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@toolSections.0/@ownedTools[name='EditCE']" semanticCandidatesExpression="[concreteEntities/]" doubleClickDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@toolSections.0/@ownedTools[name='OpenXtextEditor']" domainClass="ClockExpressionAndRelation.ConcreteEntity">
            <style xsi:type="style:SquareDescription" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/QualifierValue.gif" labelAlignment="LEFT" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="ClassicalExpressionID" semanticCandidatesExpression="[classicalExpressions/]" doubleClickDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@toolSections.0/@ownedTools[name='OpenXtextEditor']" domainClass="ClassicalExpression.ClassicalExpression">
            <style xsi:type="style:SquareDescription" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/Attribute.gif" labelAlignment="LEFT" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="10" arcHeight="10" labelFormat="italic" labelExpression="Declaration Bloc" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/DeclarationBloc.gif" roundedCorner="true" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
        </containerMappings>
        <containerMappings name="RelationDeclarationID" semanticCandidatesExpression="[declaration/]" doubleClickDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@toolSections.0/@ownedTools[name='OpenXtextEditor']" domainClass="RelationDeclaration" childrenPresentation="List">
          <subNodeMappings name="AbstractEntityID" labelDirectEdit="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@toolSections.0/@ownedTools[name='NameEditAbstractEntity']" semanticCandidatesExpression="[parameters/]" doubleClickDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@toolSections.0/@ownedTools[name='OpenXtextEditor']" domainClass="ClockExpressionAndRelation.AbstractEntity">
            <style xsi:type="style:SquareDescription" labelExpression="service:computeLabel" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/Parameter.gif" labelAlignment="LEFT" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="10" arcHeight="10" labelFormat="italic" labelExpression="['Relation Declaration: '+self.name/]" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/DeclarationBloc.gif" roundedCorner="true" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_chocolate']"/>
          </style>
        </containerMappings>
        <toolSections name="DeclarationsTooling" label="Declarations Tooling">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="DeclarationBlocCreation" label="New Declaration Bloc" precondition="[container.oclAsType(ccslmocc::StateMachineRelationDefinition).declarationBlock=null/]" containerMappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@containerMappings[name='DeclarationBlockID']" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/DeclarationBloc.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="DeclarationBlock" referenceName="declarationBlock"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="CreateConcreteEntity" label="New Concrete Entity" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@containerMappings[name='DeclarationBlockID']/@subNodeMappings[name='ConcreteEntityID']" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/QualifierValue.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="ConcreteEntity" referenceName="concreteEntities">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['CE'+instance.eContainer().oclAsType(DeclarationBlock).concreteEntities->size()/]"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolGroup" name="ClassicalExpressionGroup">
            <tools xsi:type="tool:NodeCreationDescription" name="CreateNot" label="New Not" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@containerMappings[name='DeclarationBlockID']/@subNodeMappings[name='ClassicalExpressionID']" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/Attribute.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:CreateInstance" typeName="ClassicalExpression.Not" referenceName="classicalExpressions">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['Not'+instance.eContainer().oclAsType(DeclarationBlock).classicalExpressions->filter(Not)->size()/]"/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:NodeCreationDescription" name="CreateAnd" label="New And" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@containerMappings[name='DeclarationBlockID']/@subNodeMappings[name='ClassicalExpressionID']" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/Attribute.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:CreateInstance" typeName="ClassicalExpression.And" referenceName="classicalExpressions">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['And'+instance.eContainer().oclAsType(DeclarationBlock).classicalExpressions->filter(And)->size()/]"/>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="RelationDeclarationBlocCreation" label="New Relation Declaration" precondition="[container.oclAsType(ccslmocc::StateMachineRelationDefinition).declaration=null/]" forceRefresh="true" containerMappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@containerMappings[name='RelationDeclarationID']" iconPath="/org.gemoc.mocc.ccslmocc.model.design/images/DeclarationBloc.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[container.eContainer(RelationLibrary)/]">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="RelationDeclaration" referenceName="relationDeclarations">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['newDeclaration'+eContainer(RelationLibrary).relationDeclarations->size()/]"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="declaration" valueExpression="var:container"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="EditCE">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OpenXtextEditor" label="Open Xtext Editor" forceRefresh="true" mappings="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@containerMappings[name='DeclarationBlockID'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@containerMappings[name='DeclarationBlockID']/@subNodeMappings[name='ClassicalExpressionID'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@containerMappings[name='DeclarationBlockID']/@subNodeMappings[name='ConcreteEntityID'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@containerMappings[name='RelationDeclarationID'] //@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@containerMappings[name='RelationDeclarationID']/@subNodeMappings[name='AbstractEntityID']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaActionCall" name="org.gemoc.mocc.ccslmocc.model.design.OpenEditorActionCallID" action="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='TransitionDetails']/@toolSections.0/@ownedTools[name='OpenEmbeddedEditorAction']"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="NameEditAbstractEntity">
            <mask mask="'{'{0}'} '{1}: {2}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:arg1"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:TreeDescription" name="State-BasedLibraryTree" label="State-Based Library Tree" domainClass="ccslmocc.StateRelationBasedLibrary_temp">
      <metamodel href="http://org.gemoc.mocc.ccslmocc/1.0#/"/>
      <metamodel href="http://fr.inria.aoste.timemodel#/"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//BasicType"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel/ClockExpressionAndRelation"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel/ClockExpressionAndRelation/KernelExpression"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel/ClockExpressionAndRelation/KernelRelation"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel/ClassicalExpression"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//PrimitivesTypeValue"/>
      <metamodel href="http://fr.inria.aoste.timesquare.ccslkernel.solver.priorities#/"/>
      <metamodel href="http://fr.inria.aoste.timesquare.ecl#/"/>
      <metamodel href="http://fr.inria.aoste.timesquare.instantrelation.CCSLRelationModel#/"/>
      <metamodel href="http://org.gemoc.mocc.fsmmodel/1.0#/"/>
      <subItemMappings name="StateRelationBasedLibrary" navigationDescriptions="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-BasedLibraryTree']/@ownedRepresentationNavigationDescriptions[name='FromStateBasedLibTreeToDiag']" domainClass="ccslmocc.StateRelationBasedLibrary" semanticCandidatesExpression="[self/]">
        <defaultStyle labelExpression="[self.eClass().name+': '+self.name/]">
          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
        </defaultStyle>
        <subItemMappings name="ExpressionLibrary" label="Expression Library" domainClass="ExpressionLibrary" semanticCandidatesExpression="[expressionLibraries/]">
          <defaultStyle labelExpression="[self.eClass().name+': '+self.name/]">
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </defaultStyle>
        </subItemMappings>
        <subItemMappings name="Import" label="Import" domainClass="TimeModel.ImportStatement" semanticCandidatesExpression="[self.oclAsType(Library).imports/]">
          <defaultStyle labelExpression="['Import '+self.oclAsType(NamedElement).name+': '+importURI/]">
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </defaultStyle>
        </subItemMappings>
        <subItemMappings name="RelationLibrary" label="Relation Library" domainClass="RelationLibrary" semanticCandidatesExpression="[self.oclAsType(Library).relationLibraries/]">
          <defaultStyle labelExpression="[self.eClass().name+': '+self.name/]">
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </defaultStyle>
        </subItemMappings>
        <create name="CreateImport" forceRefresh="true" mapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-BasedLibraryTree']/@subItemMappings[name='StateRelationBasedLibrary']/@subItemMappings[name='Import']">
          <variables name="root" documentation="The semantic element of the tree."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
        </create>
        <create name="CreateExpressionLib" label="New Expression Library" forceRefresh="true" mapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-BasedLibraryTree']/@subItemMappings[name='StateRelationBasedLibrary']/@subItemMappings[name='ExpressionLibrary']">
          <firstModelOperation xsi:type="tool:ChangeContext" browseExpression="[container/]">
            <subModelOperations xsi:type="tool:CreateInstance" typeName="ExpressionLibrary" referenceName="expressionLibraries">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['ELib'+container.oclAsType(ccslmocc::StateRelationBasedLibrary).expressionLibraries->size()/]"/>
            </subModelOperations>
          </firstModelOperation>
          <variables name="root" documentation="The semantic element of the tree."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
        </create>
      </subItemMappings>
      <createTreeItem name="CreateStateRelationBasedLibrary" forceRefresh="true" mapping="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-BasedLibraryTree']/@subItemMappings[name='StateRelationBasedLibrary']">
        <variables name="root" documentation="The semantic element of the tree."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
      </createTreeItem>
      <ownedRepresentationNavigationDescriptions xsi:type="tool:DiagramNavigationDescription" name="FromStateBasedLibTreeToDiag" forceRefresh="true" diagramDescription="//@ownedViewpoints[name='CCSLMoCC']/@ownedRepresentations[name='State-Based%20Library%20Diagram']">
        <containerViewVariable name="containerView"/>
        <containerVariable name="container"/>
        <representationNameVariable name="diagramName"/>
      </ownedRepresentationNavigationDescriptions>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="org.gemoc.mocc.ccslmocc.model.design.services.MoCMLServices"/>
  </ownedViewpoints>
</description:Group>
