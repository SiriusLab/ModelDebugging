// automatically generated by Xtext
grammar org.gemoc.mocc.ccslmocc.model.xtext.MoCDsl with org.gemoc.mocc.fsmkernel.model.xtext.FSMDsl//fr.inria.aoste.timesquare.ccslkernel.library.xtext.CCSLLibrary//org.gemoc.mocc.fsmmodel.model.xtext.FSMDsl

import "http://org.gemoc.mocc.ccslmocc/1.0" as ccslmoc
import "http://fr.inria.aoste.timemodel.primitivetypes" as PrimitivesTypeValue
import "http://fr.inria.aoste.timemodel.ccslmodel.clockexpressionandrelation" as ClockExpressionAndRelation
import "http://fr.inria.aoste.timemodel.classicalexpression" as ClassicalExpression
import "http://fr.inria.aoste.timemodel.basicTypes" as BasicType
import "http://fr.inria.aoste.timemodel" as TimeModel
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://org.gemoc.mocc.fsmmodel/1.0" as fsmmodel  

StateRelationBasedLibrary returns ccslmoc::StateRelationBasedLibrary:
	{ccslmoc::StateRelationBasedLibrary} 
	'StateRelationBasedLibrary' name=EString
	'{'
		(('imports' '{' ( imports+= ImportStatement)* '}' )? 
		(expressionLibraries+=ExpressionLibrary |
		 relationLibraries+=RelationLibrary  |
		 predefinedTypes+=Type  )*)
	'}';

ImportStatement returns TimeModel::ImportStatement:
	'import' importURI=STRING 'as' alias=String0";";
	

// <--- Override --->	
RelationDefinition returns ClockExpressionAndRelation::RelationDefinition: 
	UserRelationDefinition_Impl | ConditionalRelationDefinition | ExternalRelationDefinition |CCSLStateMachineRelationDefinition;
	

CCSLStateMachineRelationDefinition returns ccslmoc::StateMachineRelationDefinition:
	{ccslmoc::StateMachineRelationDefinition}
	'StateBasedRelationDefinition'name=EString '['declaration=[ClockExpressionAndRelation::RelationDeclaration|EString]']'
	'{'
		(declarationBlock=DeclarationBlock)?
		('init: ' initialStates+= [fsmmodel::State|EString]) ( "," initialStates+=[fsmmodel::State|EString])*
		('finals: ' finalStates+=[fsmmodel::State|EString] ( "," finalStates+=[fsmmodel::State|EString])* )?
		((states+=State)|
		(transitions+=Transition))+
		
    '}';

Transition returns fsmmodel::Transition:
	{fsmmodel::Transition}
	'from' source=[fsmmodel::State|EString] 'to' target=[fsmmodel::State|EString]':'name=EString '('
		('when' trigger=Trigger)?
		('if' guard=Guard)?
		('do' (actions+=Action))*
	')';   

// <--- Override --->    
Trigger returns fsmmodel::Trigger:
	{fsmmodel::Trigger}
	((trueTriggers+=[ClockExpressionAndRelation::BindableEntity|EString](","trueTriggers+=[ClockExpressionAndRelation::BindableEntity|EString])*)|
	('not' '(' falseTriggers+=[ClockExpressionAndRelation::BindableEntity|EString](","falseTriggers+=[ClockExpressionAndRelation::BindableEntity|EString])*')'))
	//('.' (trueTriggers+=[TimeModel::Clock|EString])|
	//('not' '(' falseTriggers+=[TimeModel::Clock|EString])')')*
	//('and' trigger+=[TimeModel::Clock|EString])*
	;

// <--- Override --->
Action returns fsmmodel::AbstractAction:
	FinishClock | StartClock | IntegerAssignement	| IntegerAssignementBlock;
    
FinishClock returns ccslmoc::FinishClock:
{ccslmoc::FinishClock}
	'kill' '(' clock=[TimeModel::Clock|EString]')'
;

StartClock returns ccslmoc::StartClock:
{ccslmoc::StartClock}
	'start' '(' clock=[TimeModel::Clock|EString]')'
;
