/*
* generated by Xtext
*/
grammar InternalFSMDsl;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@lexer::header {
package org.gemoc.mocc.fsmkernel.model.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.gemoc.mocc.fsmkernel.model.xtext.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.IUnorderedGroupHelper.UnorderedGroupState;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.gemoc.mocc.fsmkernel.model.xtext.services.FSMDslGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private FSMDslGrammarAccess grammarAccess;
 	
    public InternalFSMDslParser(TokenStream input, FSMDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "StateMachineDefinition";	
   	}
   	
   	@Override
   	protected FSMDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleStateMachineDefinition
entryRuleStateMachineDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateMachineDefinitionRule()); }
	 iv_ruleStateMachineDefinition=ruleStateMachineDefinition 
	 { $current=$iv_ruleStateMachineDefinition.current; } 
	 EOF 
;

// Rule StateMachineDefinition
ruleStateMachineDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStateMachineDefinitionAccess().getStateMachineDefinitionAction_0(),
            $current);
    }
)	otherlv_1='AutomataDefinition' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStateMachineDefinitionAccess().getAutomataDefinitionKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineDefinitionAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineDefinitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStateMachineDefinitionAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineDefinitionAccess().getDeclarationBlockDeclarationBlockParserRuleCall_4_0()); 
	    }
		lv_declarationBlock_4_0=ruleDeclarationBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineDefinitionRule());
	        }
       		set(
       			$current, 
       			"declarationBlock",
        		lv_declarationBlock_4_0, 
        		"DeclarationBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_5='init: ' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStateMachineDefinitionAccess().getInitKeyword_5_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateMachineDefinitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getStateMachineDefinitionAccess().getInitialStatesStateCrossReference_5_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStateMachineDefinitionAccess().getCommaKeyword_6_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateMachineDefinitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getStateMachineDefinitionAccess().getInitialStatesStateCrossReference_6_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_9='finals: ' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getStateMachineDefinitionAccess().getFinalsKeyword_7_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateMachineDefinitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getStateMachineDefinitionAccess().getFinalStatesStateCrossReference_7_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getStateMachineDefinitionAccess().getCommaKeyword_7_2_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateMachineDefinitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getStateMachineDefinitionAccess().getFinalStatesStateCrossReference_7_2_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*)?((
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineDefinitionAccess().getStatesStateParserRuleCall_8_0_0()); 
	    }
		lv_states_13_0=ruleState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineDefinitionRule());
	        }
       		add(
       			$current, 
       			"states",
        		lv_states_13_0, 
        		"State");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineDefinitionAccess().getTransitionsTransitionParserRuleCall_8_1_0()); 
	    }
		lv_transitions_14_0=ruleTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineDefinitionRule());
	        }
       		add(
       			$current, 
       			"transitions",
        		lv_transitions_14_0, 
        		"Transition");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getStateMachineDefinitionAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleDeclarationBlock
entryRuleDeclarationBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclarationBlockRule()); }
	 iv_ruleDeclarationBlock=ruleDeclarationBlock 
	 { $current=$iv_ruleDeclarationBlock.current; } 
	 EOF 
;

// Rule DeclarationBlock
ruleDeclarationBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeclarationBlockAccess().getDeclarationBlockAction_0(),
            $current);
    }
)	otherlv_1='variables {' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeclarationBlockAccess().getVariablesKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationBlockAccess().getConcreteEntitiesConcreteEntityParserRuleCall_2_0()); 
	    }
		lv_concreteEntities_2_0=ruleConcreteEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationBlockRule());
	        }
       		add(
       			$current, 
       			"concreteEntities",
        		lv_concreteEntities_2_0, 
        		"ConcreteEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationBlockAccess().getClassicalExpressionsBooleanExpressionParserRuleCall_3_0()); 
	    }
		lv_classicalExpressions_3_0=ruleBooleanExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationBlockRule());
	        }
       		add(
       			$current, 
       			"classicalExpressions",
        		lv_classicalExpressions_3_0, 
        		"BooleanExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDeclarationBlockAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleTransition
entryRuleTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransitionRule()); }
	 iv_ruleTransition=ruleTransition 
	 { $current=$iv_ruleTransition.current; } 
	 EOF 
;

// Rule Transition
ruleTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTransitionAccess().getTransitionAction_0(),
            $current);
    }
)	otherlv_1='from' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTransitionAccess().getFromKeyword_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTransitionAccess().getSourceStateCrossReference_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='to' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTransitionAccess().getToKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTransitionAccess().getTargetStateCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTransitionAccess().getColonKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTransitionAccess().getNameEStringParserRuleCall_6_0()); 
	    }
		lv_name_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_7='->(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignLeftParenthesisKeyword_7());
    }
(	otherlv_8='when' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTransitionAccess().getWhenKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTransitionAccess().getTriggerTriggerParserRuleCall_8_1_0()); 
	    }
		lv_trigger_9_0=ruleTrigger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransitionRule());
	        }
       		set(
       			$current, 
       			"trigger",
        		lv_trigger_9_0, 
        		"Trigger");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_10='if' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTransitionAccess().getIfKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTransitionAccess().getGuardGuardParserRuleCall_9_1_0()); 
	    }
		lv_guard_11_0=ruleGuard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransitionRule());
	        }
       		set(
       			$current, 
       			"guard",
        		lv_guard_11_0, 
        		"Guard");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_12='do' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getTransitionAccess().getDoKeyword_10_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTransitionAccess().getActionsActionParserRuleCall_10_1_0()); 
	    }
		lv_actions_13_0=ruleAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransitionRule());
	        }
       		add(
       			$current, 
       			"actions",
        		lv_actions_13_0, 
        		"Action");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14=')' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getTransitionAccess().getRightParenthesisKeyword_11());
    }
)
;





// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	 iv_ruleAction=ruleAction 
	 { $current=$iv_ruleAction.current; } 
	 EOF 
;

// Rule Action
ruleAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getActionAccess().getIntegerAssignementParserRuleCall_0()); 
    }
    this_IntegerAssignement_0=ruleIntegerAssignement
    { 
        $current = $this_IntegerAssignement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getActionAccess().getIntegerAssignementBlockParserRuleCall_1()); 
    }
    this_IntegerAssignementBlock_1=ruleIntegerAssignementBlock
    { 
        $current = $this_IntegerAssignementBlock_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIntegerAssignementBlock
entryRuleIntegerAssignementBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerAssignementBlockRule()); }
	 iv_ruleIntegerAssignementBlock=ruleIntegerAssignementBlock 
	 { $current=$iv_ruleIntegerAssignementBlock.current; } 
	 EOF 
;

// Rule IntegerAssignementBlock
ruleIntegerAssignementBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getIntegerAssignementBlockAccess().getIntegerAssignementBlockAction_0(),
            $current);
    }
)	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntegerAssignementBlockAccess().getRefKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerAssignementBlockAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerAssignementBlockRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntegerAssignementBlockAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerAssignementBlockAccess().getActionsIntegerAssignementParserRuleCall_4_0()); 
	    }
		lv_actions_4_0=ruleIntegerAssignement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerAssignementBlockRule());
	        }
       		add(
       			$current, 
       			"actions",
        		lv_actions_4_0, 
        		"IntegerAssignement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntegerAssignementBlockAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerAssignementBlockAccess().getActionsIntegerAssignementParserRuleCall_5_1_0()); 
	    }
		lv_actions_6_0=ruleIntegerAssignement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerAssignementBlockRule());
	        }
       		add(
       			$current, 
       			"actions",
        		lv_actions_6_0, 
        		"IntegerAssignement");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIntegerAssignementBlockAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleState
entryRuleState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	 iv_ruleState=ruleState 
	 { $current=$iv_ruleState.current; } 
	 EOF 
;

// Rule State
ruleState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStateAccess().getStateAction_0(),
            $current);
    }
)	otherlv_1='State' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStateAccess().getStateKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStateAccess().getLeftParenthesisKeyword_3());
    }
(	otherlv_4='in' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStateAccess().getInKeyword_4_0());
    }
	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStateAccess().getColonKeyword_4_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getStateAccess().getInputTransitionsTransitionCrossReference_4_2_0()); 
	}

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStateAccess().getCommaKeyword_4_3_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getStateAccess().getInputTransitionsTransitionCrossReference_4_3_1_0()); 
	}

)
))*)?(	otherlv_9='out' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getStateAccess().getOutKeyword_5_0());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getStateAccess().getColonKeyword_5_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateRule());
	        }
        }
	otherlv_11=RULE_ID
	{
		newLeafNode(otherlv_11, grammarAccess.getStateAccess().getOutputTransitionsTransitionCrossReference_5_2_0()); 
	}

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getStateAccess().getCommaKeyword_5_3_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateRule());
	        }
        }
	otherlv_13=RULE_ID
	{
		newLeafNode(otherlv_13, grammarAccess.getStateAccess().getOutputTransitionsTransitionCrossReference_5_3_1_0()); 
	}

)
))*)?	otherlv_14=')' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getStateAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleGuard
entryRuleGuard returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGuardRule()); }
	 iv_ruleGuard=ruleGuard 
	 { $current=$iv_ruleGuard.current; } 
	 EOF 
;

// Rule Guard
ruleGuard returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getGuardAccess().getGuardAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGuardAccess().getValueBooleanExpressionParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleBooleanExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGuardRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"BooleanExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTrigger
entryRuleTrigger returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTriggerRule()); }
	 iv_ruleTrigger=ruleTrigger 
	 { $current=$iv_ruleTrigger.current; } 
	 EOF 
;

// Rule Trigger
ruleTrigger returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTriggerAccess().getTriggerAction_0(),
            $current);
    }
)	otherlv_1='Trigger' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTriggerAccess().getTriggerKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTriggerAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='trueTriggers' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTriggerAccess().getTrueTriggersKeyword_3_0());
    }
	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTriggerAccess().getLeftParenthesisKeyword_3_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTriggerRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTriggerAccess().getTrueTriggersBindableEntityCrossReference_3_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTriggerAccess().getCommaKeyword_3_3_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTriggerRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTriggerAccess().getTrueTriggersBindableEntityCrossReference_3_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTriggerAccess().getRightParenthesisKeyword_3_4());
    }
)?(	otherlv_9='falseTriggers' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTriggerAccess().getFalseTriggersKeyword_4_0());
    }
	otherlv_10='(' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTriggerAccess().getLeftParenthesisKeyword_4_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTriggerRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTriggerAccess().getFalseTriggersBindableEntityCrossReference_4_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getTriggerAccess().getCommaKeyword_4_3_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTriggerRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTriggerAccess().getFalseTriggersBindableEntityCrossReference_4_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14=')' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getTriggerAccess().getRightParenthesisKeyword_4_4());
    }
)?	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getTriggerAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleBinaryIntegerExpression
entryRuleBinaryIntegerExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBinaryIntegerExpressionRule()); }
	 iv_ruleBinaryIntegerExpression=ruleBinaryIntegerExpression 
	 { $current=$iv_ruleBinaryIntegerExpression.current; } 
	 EOF 
;

// Rule BinaryIntegerExpression
ruleBinaryIntegerExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBinaryIntegerExpressionAccess().getIntPlusParserRuleCall_0()); 
    }
    this_IntPlus_0=ruleIntPlus
    { 
        $current = $this_IntPlus_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBinaryIntegerExpressionAccess().getIntMinusParserRuleCall_1()); 
    }
    this_IntMinus_1=ruleIntMinus
    { 
        $current = $this_IntMinus_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBinaryIntegerExpressionAccess().getIntMultiplyParserRuleCall_2()); 
    }
    this_IntMultiply_2=ruleIntMultiply
    { 
        $current = $this_IntMultiply_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBinaryIntegerExpressionAccess().getIntDivideParserRuleCall_3()); 
    }
    this_IntDivide_3=ruleIntDivide
    { 
        $current = $this_IntDivide_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBinaryIntegerExpressionAccess().getIntegerAssignementParserRuleCall_4()); 
    }
    this_IntegerAssignement_4=ruleIntegerAssignement
    { 
        $current = $this_IntegerAssignement_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBinaryIntegerExpressionAccess().getIntSelfPlusAssignParserRuleCall_5()); 
    }
    this_IntSelfPlusAssign_5=ruleIntSelfPlusAssign
    { 
        $current = $this_IntSelfPlusAssign_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBinaryIntegerExpressionAccess().getIntSelfMinusAssignParserRuleCall_6()); 
    }
    this_IntSelfMinusAssign_6=ruleIntSelfMinusAssign
    { 
        $current = $this_IntSelfMinusAssign_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBinaryIntegerExpressionAccess().getIntSelfMultAssignParserRuleCall_7()); 
    }
    this_IntSelfMultAssign_7=ruleIntSelfMultAssign
    { 
        $current = $this_IntSelfMultAssign_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBinaryIntegerExpressionAccess().getIntSelfDivAssignParserRuleCall_8()); 
    }
    this_IntSelfDivAssign_8=ruleIntSelfDivAssign
    { 
        $current = $this_IntSelfDivAssign_8.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIntSelfPlusAssign
entryRuleIntSelfPlusAssign returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntSelfPlusAssignRule()); }
	 iv_ruleIntSelfPlusAssign=ruleIntSelfPlusAssign 
	 { $current=$iv_ruleIntSelfPlusAssign.current; } 
	 EOF 
;

// Rule IntSelfPlusAssign
ruleIntSelfPlusAssign returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getIntSelfPlusAssignAccess().getIntSelfPlusAssignementAction_0(),
            $current);
    }
)(	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntSelfPlusAssignAccess().getRefKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSelfPlusAssignAccess().getNameEStringParserRuleCall_1_1_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSelfPlusAssignRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntSelfPlusAssignAccess().getEqualsSignKeyword_1_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSelfPlusAssignAccess().getLeftValueIntegerRefParserRuleCall_2_0()); 
	    }
		lv_leftValue_4_0=ruleIntegerRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSelfPlusAssignRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_4_0, 
        		"IntegerRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='+=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntSelfPlusAssignAccess().getPlusSignEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSelfPlusAssignAccess().getRightValueIntegerExpressionParserRuleCall_4_0()); 
	    }
		lv_rightValue_6_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSelfPlusAssignRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_6_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIntSelfMinusAssign
entryRuleIntSelfMinusAssign returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntSelfMinusAssignRule()); }
	 iv_ruleIntSelfMinusAssign=ruleIntSelfMinusAssign 
	 { $current=$iv_ruleIntSelfMinusAssign.current; } 
	 EOF 
;

// Rule IntSelfMinusAssign
ruleIntSelfMinusAssign returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getIntSelfMinusAssignAccess().getIntSelfMinusAssignementAction_0(),
            $current);
    }
)(	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntSelfMinusAssignAccess().getRefKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSelfMinusAssignAccess().getNameEStringParserRuleCall_1_1_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSelfMinusAssignRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntSelfMinusAssignAccess().getEqualsSignKeyword_1_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSelfMinusAssignAccess().getLeftValueIntegerRefParserRuleCall_2_0()); 
	    }
		lv_leftValue_4_0=ruleIntegerRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSelfMinusAssignRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_4_0, 
        		"IntegerRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='-=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntSelfMinusAssignAccess().getHyphenMinusEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSelfMinusAssignAccess().getRightValueIntegerExpressionParserRuleCall_4_0()); 
	    }
		lv_rightValue_6_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSelfMinusAssignRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_6_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIntSelfMultAssign
entryRuleIntSelfMultAssign returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntSelfMultAssignRule()); }
	 iv_ruleIntSelfMultAssign=ruleIntSelfMultAssign 
	 { $current=$iv_ruleIntSelfMultAssign.current; } 
	 EOF 
;

// Rule IntSelfMultAssign
ruleIntSelfMultAssign returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getIntSelfMultAssignAccess().getIntSelfMultiplyAssignementAction_0(),
            $current);
    }
)(	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntSelfMultAssignAccess().getRefKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSelfMultAssignAccess().getNameEStringParserRuleCall_1_1_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSelfMultAssignRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntSelfMultAssignAccess().getEqualsSignKeyword_1_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSelfMultAssignAccess().getLeftValueIntegerRefParserRuleCall_2_0()); 
	    }
		lv_leftValue_4_0=ruleIntegerRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSelfMultAssignRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_4_0, 
        		"IntegerRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='*=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntSelfMultAssignAccess().getAsteriskEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSelfMultAssignAccess().getRightValueIntegerExpressionParserRuleCall_4_0()); 
	    }
		lv_rightValue_6_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSelfMultAssignRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_6_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIntSelfDivAssign
entryRuleIntSelfDivAssign returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntSelfDivAssignRule()); }
	 iv_ruleIntSelfDivAssign=ruleIntSelfDivAssign 
	 { $current=$iv_ruleIntSelfDivAssign.current; } 
	 EOF 
;

// Rule IntSelfDivAssign
ruleIntSelfDivAssign returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getIntSelfDivAssignAccess().getIntSelfDivideAssignementAction_0(),
            $current);
    }
)(	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntSelfDivAssignAccess().getRefKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSelfDivAssignAccess().getNameEStringParserRuleCall_1_1_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSelfDivAssignRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntSelfDivAssignAccess().getEqualsSignKeyword_1_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSelfDivAssignAccess().getLeftValueIntegerRefParserRuleCall_2_0()); 
	    }
		lv_leftValue_4_0=ruleIntegerRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSelfDivAssignRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_4_0, 
        		"IntegerRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='/=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntSelfDivAssignAccess().getSolidusEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSelfDivAssignAccess().getRightValueIntegerExpressionParserRuleCall_4_0()); 
	    }
		lv_rightValue_6_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSelfDivAssignRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_6_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIntegerAssignement
entryRuleIntegerAssignement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerAssignementRule()); }
	 iv_ruleIntegerAssignement=ruleIntegerAssignement 
	 { $current=$iv_ruleIntegerAssignement.current; } 
	 EOF 
;

// Rule IntegerAssignement
ruleIntegerAssignement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getIntegerAssignementAccess().getIntegerAssignementAction_0(),
            $current);
    }
)(	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntegerAssignementAccess().getRefKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerAssignementAccess().getNameEStringParserRuleCall_1_1_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerAssignementRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntegerAssignementAccess().getColonKeyword_1_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerAssignementAccess().getLeftValueIntegerRefParserRuleCall_2_0()); 
	    }
		lv_leftValue_4_0=ruleIntegerRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerAssignementRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_4_0, 
        		"IntegerRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntegerAssignementAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerAssignementAccess().getRightValueIntegerExpressionParserRuleCall_4_0()); 
	    }
		lv_rightValue_6_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerAssignementRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_6_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIntegerExpression
entryRuleIntegerExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerExpressionRule()); }
	 iv_ruleIntegerExpression=ruleIntegerExpression 
	 { $current=$iv_ruleIntegerExpression.current; } 
	 EOF 
;

// Rule IntegerExpression
ruleIntegerExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getIntegerExpressionAccess().getBinaryIntegerExpressionParserRuleCall_0()); 
    }
    this_BinaryIntegerExpression_0=ruleBinaryIntegerExpression
    { 
        $current = $this_BinaryIntegerExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getIntegerExpressionAccess().getUnaryIntegerExpressionParserRuleCall_1()); 
    }
    this_UnaryIntegerExpression_1=ruleUnaryIntegerExpression
    { 
        $current = $this_UnaryIntegerExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getIntegerExpressionAccess().getIntegerRefParserRuleCall_2()); 
    }
    this_IntegerRef_2=ruleIntegerRef
    { 
        $current = $this_IntegerRef_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getIntegerExpressionAccess().getSeqGetHeadParserRuleCall_3()); 
    }
    this_SeqGetHead_3=ruleSeqGetHead
    { 
        $current = $this_SeqGetHead_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getIntegerExpressionAccess().getIntegerVariableRefParserRuleCall_4()); 
    }
    this_IntegerVariableRef_4=ruleIntegerVariableRef
    { 
        $current = $this_IntegerVariableRef_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIntegerVariableRef
entryRuleIntegerVariableRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerVariableRefRule()); }
	 iv_ruleIntegerVariableRef=ruleIntegerVariableRef 
	 { $current=$iv_ruleIntegerVariableRef.current; } 
	 EOF 
;

// Rule IntegerVariableRef
ruleIntegerVariableRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerVariableRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIntegerVariableRefAccess().getReferencedVarAbstractEntityCrossReference_0_0_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='.value' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntegerVariableRefAccess().getValueKeyword_0_1());
    }
)
    |(	otherlv_2='get(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIntegerVariableRefAccess().getGetKeyword_1_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerVariableRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIntegerVariableRefAccess().getReferencedVarAbstractEntityCrossReference_1_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIntegerVariableRefAccess().getRightParenthesisKeyword_1_2());
    }
)
    |(	otherlv_5='IntegerVariableRef' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntegerVariableRefAccess().getIntegerVariableRefKeyword_2_0());
    }
(
(
		lv_name_6_0=RULE_ID
		{
			newLeafNode(lv_name_6_0, grammarAccess.getIntegerVariableRefAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerVariableRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"ID");
	    }

)
)?	otherlv_7='[' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIntegerVariableRefAccess().getLeftSquareBracketKeyword_2_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerVariableRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIntegerVariableRefAccess().getReferencedVarAbstractEntityCrossReference_2_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=']' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getIntegerVariableRefAccess().getRightSquareBracketKeyword_2_4());
    }
))
;





// Entry rule entryRuleUnaryIntegerExpression
entryRuleUnaryIntegerExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnaryIntegerExpressionRule()); }
	 iv_ruleUnaryIntegerExpression=ruleUnaryIntegerExpression 
	 { $current=$iv_ruleUnaryIntegerExpression.current; } 
	 EOF 
;

// Rule UnaryIntegerExpression
ruleUnaryIntegerExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getUnaryIntegerExpressionAccess().getUnaryIntPlusParserRuleCall_0()); 
    }
    this_UnaryIntPlus_0=ruleUnaryIntPlus
    { 
        $current = $this_UnaryIntPlus_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getUnaryIntegerExpressionAccess().getUnaryIntMinusParserRuleCall_1()); 
    }
    this_UnaryIntMinus_1=ruleUnaryIntMinus
    { 
        $current = $this_UnaryIntMinus_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIntEqual
entryRuleIntEqual returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntEqualRule()); }
	 iv_ruleIntEqual=ruleIntEqual 
	 { $current=$iv_ruleIntEqual.current; } 
	 EOF 
;

// Rule IntEqual
ruleIntEqual returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntEqualAccess().getLeftParenthesisKeyword_0_0());
    }
(	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntEqualAccess().getRefKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntEqualAccess().getNameString0ParserRuleCall_0_1_1_0()); 
	    }
		lv_name_2_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntEqualRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntEqualAccess().getColonKeyword_0_1_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntEqualAccess().getLeftValueIntegerExpressionParserRuleCall_0_2_0()); 
	    }
		lv_leftValue_4_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntEqualRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_4_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='==' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntEqualAccess().getEqualsSignEqualsSignKeyword_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntEqualAccess().getRightValueIntegerExpressionParserRuleCall_0_4_0()); 
	    }
		lv_rightValue_6_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntEqualRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_6_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIntEqualAccess().getRightParenthesisKeyword_0_5());
    }
)
    |(	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIntEqualAccess().getLeftParenthesisKeyword_1_0());
    }
(	otherlv_9='#ref' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getIntEqualAccess().getRefKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntEqualAccess().getNameString0ParserRuleCall_1_1_1_0()); 
	    }
		lv_name_10_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntEqualRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_10_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='::' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getIntEqualAccess().getColonColonKeyword_1_1_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntEqualRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIntEqualAccess().getTypeTypeCrossReference_1_1_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getIntEqualAccess().getColonKeyword_1_1_4());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntEqualAccess().getLeftValueIntegerExpressionParserRuleCall_1_2_0()); 
	    }
		lv_leftValue_14_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntEqualRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_14_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15='==' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getIntEqualAccess().getEqualsSignEqualsSignKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntEqualAccess().getRightValueIntegerExpressionParserRuleCall_1_4_0()); 
	    }
		lv_rightValue_16_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntEqualRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_16_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17=')' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getIntEqualAccess().getRightParenthesisKeyword_1_5());
    }
))
;





// Entry rule entryRuleBooleanRef
entryRuleBooleanRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanRefRule()); }
	 iv_ruleBooleanRef=ruleBooleanRef 
	 { $current=$iv_ruleBooleanRef.current; } 
	 EOF 
;

// Rule BooleanRef
ruleBooleanRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getBooleanRefAccess().getReferencedBoolBooleanElementCrossReference_0_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_1='b[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBooleanRefAccess().getBKeyword_1_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getBooleanRefAccess().getReferencedBoolBooleanElementCrossReference_1_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBooleanRefAccess().getRightSquareBracketKeyword_1_2());
    }
)
    |(	otherlv_4='b#ref' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBooleanRefAccess().getBRefKeyword_2_0());
    }
(
(
		lv_name_5_0=RULE_ID
		{
			newLeafNode(lv_name_5_0, grammarAccess.getBooleanRefAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"ID");
	    }

)
)	otherlv_6='[' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBooleanRefAccess().getLeftSquareBracketKeyword_2_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getBooleanRefAccess().getReferencedBoolBooleanElementCrossReference_2_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=']' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBooleanRefAccess().getRightSquareBracketKeyword_2_4());
    }
))
;





// Entry rule entryRuleIntegerRef
entryRuleIntegerRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerRefRule()); }
	 iv_ruleIntegerRef=ruleIntegerRef 
	 { $current=$iv_ruleIntegerRef.current; } 
	 EOF 
;

// Rule IntegerRef
ruleIntegerRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIntegerRefAccess().getIntegerElemIntegerElementCrossReference_0_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_1='i.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntegerRefAccess().getIKeyword_1_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIntegerRefAccess().getIntegerElemIntegerElementCrossReference_1_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_3='i#ref' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntegerRefAccess().getIRefKeyword_2_0());
    }
(
(
		lv_name_4_0=RULE_ID
		{
			newLeafNode(lv_name_4_0, grammarAccess.getIntegerRefAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"ID");
	    }

)
)	otherlv_5='[' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntegerRefAccess().getLeftSquareBracketKeyword_2_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIntegerRefAccess().getIntegerElemIntegerElementCrossReference_2_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIntegerRefAccess().getRightSquareBracketKeyword_2_4());
    }
))
;





// Entry rule entryRuleUnaryIntPlus
entryRuleUnaryIntPlus returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnaryIntPlusRule()); }
	 iv_ruleUnaryIntPlus=ruleUnaryIntPlus 
	 { $current=$iv_ruleUnaryIntPlus.current; } 
	 EOF 
;

// Rule UnaryIntPlus
ruleUnaryIntPlus returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='+' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUnaryIntPlusAccess().getPlusSignKeyword_0_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUnaryIntPlusAccess().getLeftCurlyBracketKeyword_0_1());
    }
	otherlv_2='value' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUnaryIntPlusAccess().getValueKeyword_0_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryIntPlusRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getUnaryIntPlusAccess().getValueIntegerElementCrossReference_0_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='operand' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUnaryIntPlusAccess().getOperandKeyword_0_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryIntPlusAccess().getOperandIntegerExpressionParserRuleCall_0_5_0()); 
	    }
		lv_operand_5_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryIntPlusRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_5_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUnaryIntPlusAccess().getRightCurlyBracketKeyword_0_6());
    }
)
    |(	otherlv_7='(+' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getUnaryIntPlusAccess().getLeftParenthesisPlusSignKeyword_1_0());
    }
(	otherlv_8='#ref' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getUnaryIntPlusAccess().getRefKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryIntPlusAccess().getNameString0ParserRuleCall_1_1_1_0()); 
	    }
		lv_name_9_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryIntPlusRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_9_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getUnaryIntPlusAccess().getColonKeyword_1_1_2_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryIntPlusRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getUnaryIntPlusAccess().getTypeTypeCrossReference_1_1_2_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?)?	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getUnaryIntPlusAccess().getLeftCurlyBracketKeyword_1_2());
    }
	otherlv_13='value' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getUnaryIntPlusAccess().getValueKeyword_1_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryIntPlusRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getUnaryIntPlusAccess().getValueIntegerElementCrossReference_1_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15='operand' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getUnaryIntPlusAccess().getOperandKeyword_1_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryIntPlusAccess().getOperandIntegerExpressionParserRuleCall_1_6_0()); 
	    }
		lv_operand_16_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryIntPlusRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_16_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17='})' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getUnaryIntPlusAccess().getRightCurlyBracketRightParenthesisKeyword_1_7());
    }
))
;





// Entry rule entryRuleUnaryIntMinus
entryRuleUnaryIntMinus returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnaryIntMinusRule()); }
	 iv_ruleUnaryIntMinus=ruleUnaryIntMinus 
	 { $current=$iv_ruleUnaryIntMinus.current; } 
	 EOF 
;

// Rule UnaryIntMinus
ruleUnaryIntMinus returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='-' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUnaryIntMinusAccess().getHyphenMinusKeyword_0_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUnaryIntMinusAccess().getLeftCurlyBracketKeyword_0_1());
    }
	otherlv_2='value' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUnaryIntMinusAccess().getValueKeyword_0_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryIntMinusRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getUnaryIntMinusAccess().getValueIntegerElementCrossReference_0_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='operand' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUnaryIntMinusAccess().getOperandKeyword_0_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryIntMinusAccess().getOperandIntegerExpressionParserRuleCall_0_5_0()); 
	    }
		lv_operand_5_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryIntMinusRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_5_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUnaryIntMinusAccess().getRightCurlyBracketKeyword_0_6());
    }
)
    |(	otherlv_7='(-' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getUnaryIntMinusAccess().getLeftParenthesisHyphenMinusKeyword_1_0());
    }
(	otherlv_8='#ref' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getUnaryIntMinusAccess().getRefKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryIntMinusAccess().getNameString0ParserRuleCall_1_1_1_0()); 
	    }
		lv_name_9_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryIntMinusRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_9_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getUnaryIntMinusAccess().getColonKeyword_1_1_2_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryIntMinusRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getUnaryIntMinusAccess().getTypeTypeCrossReference_1_1_2_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?)?	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getUnaryIntMinusAccess().getLeftCurlyBracketKeyword_1_2());
    }
	otherlv_13='value' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getUnaryIntMinusAccess().getValueKeyword_1_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryIntMinusRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getUnaryIntMinusAccess().getValueIntegerElementCrossReference_1_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15='operand' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getUnaryIntMinusAccess().getOperandKeyword_1_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryIntMinusAccess().getOperandIntegerExpressionParserRuleCall_1_6_0()); 
	    }
		lv_operand_16_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryIntMinusRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_16_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17='})' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getUnaryIntMinusAccess().getRightCurlyBracketRightParenthesisKeyword_1_7());
    }
))
;





// Entry rule entryRuleIntPlus
entryRuleIntPlus returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntPlusRule()); }
	 iv_ruleIntPlus=ruleIntPlus 
	 { $current=$iv_ruleIntPlus.current; } 
	 EOF 
;

// Rule IntPlus
ruleIntPlus returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntPlusAccess().getLeftParenthesisKeyword_0_0());
    }
(	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntPlusAccess().getRefKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntPlusAccess().getNameString0ParserRuleCall_0_1_1_0()); 
	    }
		lv_name_2_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntPlusRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntPlusAccess().getColonKeyword_0_1_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntPlusAccess().getLeftValueIntegerExpressionParserRuleCall_0_2_0()); 
	    }
		lv_leftValue_4_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntPlusRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_4_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='+' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntPlusAccess().getPlusSignKeyword_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntPlusAccess().getRightValueIntegerExpressionParserRuleCall_0_4_0()); 
	    }
		lv_rightValue_6_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntPlusRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_6_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIntPlusAccess().getRightParenthesisKeyword_0_5());
    }
)
    |(	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIntPlusAccess().getLeftParenthesisKeyword_1_0());
    }
(	otherlv_9='#ref' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getIntPlusAccess().getRefKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntPlusAccess().getNameString0ParserRuleCall_1_1_1_0()); 
	    }
		lv_name_10_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntPlusRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_10_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='::' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getIntPlusAccess().getColonColonKeyword_1_1_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntPlusRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIntPlusAccess().getTypeTypeCrossReference_1_1_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getIntPlusAccess().getColonKeyword_1_1_4());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntPlusAccess().getLeftValueIntegerExpressionParserRuleCall_1_2_0()); 
	    }
		lv_leftValue_14_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntPlusRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_14_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15='+' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getIntPlusAccess().getPlusSignKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntPlusAccess().getRightValueIntegerExpressionParserRuleCall_1_4_0()); 
	    }
		lv_rightValue_16_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntPlusRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_16_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17=')' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getIntPlusAccess().getRightParenthesisKeyword_1_5());
    }
))
;





// Entry rule entryRuleIntMinus
entryRuleIntMinus returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntMinusRule()); }
	 iv_ruleIntMinus=ruleIntMinus 
	 { $current=$iv_ruleIntMinus.current; } 
	 EOF 
;

// Rule IntMinus
ruleIntMinus returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntMinusAccess().getLeftParenthesisKeyword_0_0());
    }
(	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntMinusAccess().getRefKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntMinusAccess().getNameString0ParserRuleCall_0_1_1_0()); 
	    }
		lv_name_2_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntMinusRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntMinusAccess().getColonKeyword_0_1_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntMinusAccess().getLeftValueIntegerExpressionParserRuleCall_0_2_0()); 
	    }
		lv_leftValue_4_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntMinusRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_4_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='-' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntMinusAccess().getHyphenMinusKeyword_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntMinusAccess().getRightValueIntegerExpressionParserRuleCall_0_4_0()); 
	    }
		lv_rightValue_6_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntMinusRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_6_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIntMinusAccess().getRightParenthesisKeyword_0_5());
    }
)
    |(	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIntMinusAccess().getLeftParenthesisKeyword_1_0());
    }
(	otherlv_9='#ref' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getIntMinusAccess().getRefKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntMinusAccess().getNameString0ParserRuleCall_1_1_1_0()); 
	    }
		lv_name_10_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntMinusRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_10_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='::' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getIntMinusAccess().getColonColonKeyword_1_1_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntMinusRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIntMinusAccess().getTypeTypeCrossReference_1_1_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getIntMinusAccess().getColonKeyword_1_1_4());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntMinusAccess().getLeftValueIntegerExpressionParserRuleCall_1_2_0()); 
	    }
		lv_leftValue_14_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntMinusRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_14_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15='-' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getIntMinusAccess().getHyphenMinusKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntMinusAccess().getRightValueIntegerExpressionParserRuleCall_1_4_0()); 
	    }
		lv_rightValue_16_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntMinusRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_16_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17=')' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getIntMinusAccess().getRightParenthesisKeyword_1_5());
    }
))
;





// Entry rule entryRuleIntMultiply
entryRuleIntMultiply returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntMultiplyRule()); }
	 iv_ruleIntMultiply=ruleIntMultiply 
	 { $current=$iv_ruleIntMultiply.current; } 
	 EOF 
;

// Rule IntMultiply
ruleIntMultiply returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntMultiplyAccess().getLeftParenthesisKeyword_0_0());
    }
(	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntMultiplyAccess().getRefKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntMultiplyAccess().getNameString0ParserRuleCall_0_1_1_0()); 
	    }
		lv_name_2_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntMultiplyRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntMultiplyAccess().getColonKeyword_0_1_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntMultiplyAccess().getLeftValueIntegerExpressionParserRuleCall_0_2_0()); 
	    }
		lv_leftValue_4_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntMultiplyRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_4_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='*' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntMultiplyAccess().getAsteriskKeyword_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntMultiplyAccess().getRightValueIntegerExpressionParserRuleCall_0_4_0()); 
	    }
		lv_rightValue_6_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntMultiplyRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_6_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIntMultiplyAccess().getRightParenthesisKeyword_0_5());
    }
)
    |(	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIntMultiplyAccess().getLeftParenthesisKeyword_1_0());
    }
(	otherlv_9='#ref' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getIntMultiplyAccess().getRefKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntMultiplyAccess().getNameString0ParserRuleCall_1_1_1_0()); 
	    }
		lv_name_10_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntMultiplyRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_10_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='::' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getIntMultiplyAccess().getColonColonKeyword_1_1_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntMultiplyRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIntMultiplyAccess().getTypeTypeCrossReference_1_1_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getIntMultiplyAccess().getColonKeyword_1_1_4());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntMultiplyAccess().getLeftValueIntegerExpressionParserRuleCall_1_2_0()); 
	    }
		lv_leftValue_14_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntMultiplyRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_14_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15='*' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getIntMultiplyAccess().getAsteriskKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntMultiplyAccess().getRightValueIntegerExpressionParserRuleCall_1_4_0()); 
	    }
		lv_rightValue_16_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntMultiplyRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_16_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17=')' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getIntMultiplyAccess().getRightParenthesisKeyword_1_5());
    }
))
;





// Entry rule entryRuleIntDivide
entryRuleIntDivide returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntDivideRule()); }
	 iv_ruleIntDivide=ruleIntDivide 
	 { $current=$iv_ruleIntDivide.current; } 
	 EOF 
;

// Rule IntDivide
ruleIntDivide returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntDivideAccess().getLeftParenthesisKeyword_0_0());
    }
(	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntDivideAccess().getRefKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntDivideAccess().getNameString0ParserRuleCall_0_1_1_0()); 
	    }
		lv_name_2_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntDivideRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntDivideAccess().getColonKeyword_0_1_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntDivideAccess().getLeftValueIntegerExpressionParserRuleCall_0_2_0()); 
	    }
		lv_leftValue_4_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntDivideRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_4_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='/' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntDivideAccess().getSolidusKeyword_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntDivideAccess().getRightValueIntegerExpressionParserRuleCall_0_4_0()); 
	    }
		lv_rightValue_6_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntDivideRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_6_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIntDivideAccess().getRightParenthesisKeyword_0_5());
    }
)
    |(	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIntDivideAccess().getLeftParenthesisKeyword_1_0());
    }
(	otherlv_9='#ref' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getIntDivideAccess().getRefKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntDivideAccess().getNameString0ParserRuleCall_1_1_1_0()); 
	    }
		lv_name_10_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntDivideRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_10_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='::' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getIntDivideAccess().getColonColonKeyword_1_1_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntDivideRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIntDivideAccess().getTypeTypeCrossReference_1_1_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getIntDivideAccess().getColonKeyword_1_1_4());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntDivideAccess().getLeftValueIntegerExpressionParserRuleCall_1_2_0()); 
	    }
		lv_leftValue_14_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntDivideRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_14_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15='/' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getIntDivideAccess().getSolidusKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntDivideAccess().getRightValueIntegerExpressionParserRuleCall_1_4_0()); 
	    }
		lv_rightValue_16_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntDivideRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_16_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17=')' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getIntDivideAccess().getRightParenthesisKeyword_1_5());
    }
))
;





// Entry rule entryRuleNot
entryRuleNot returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNotRule()); }
	 iv_ruleNot=ruleNot 
	 { $current=$iv_ruleNot.current; } 
	 EOF 
;

// Rule Not
ruleNot returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='!' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNotAccess().getExclamationMarkKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNotAccess().getOperandBooleanExpressionParserRuleCall_0_1_0()); 
	    }
		lv_operand_1_0=ruleBooleanExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNotRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_1_0, 
        		"BooleanExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((	otherlv_2='!(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNotAccess().getExclamationMarkLeftParenthesisKeyword_1_0_0());
    }
(	otherlv_3='#ref' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getNotAccess().getRefKeyword_1_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNotAccess().getNameString0ParserRuleCall_1_0_1_1_0()); 
	    }
		lv_name_4_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNotRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getNotAccess().getColonKeyword_1_0_1_2_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNotRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getNotAccess().getTypeTypeCrossReference_1_0_1_2_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?)?(
(
		{ 
	        newCompositeNode(grammarAccess.getNotAccess().getOperandBooleanExpressionParserRuleCall_1_0_2_0()); 
	    }
		lv_operand_7_0=ruleBooleanExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNotRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_7_0, 
        		"BooleanExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getNotAccess().getRightParenthesisKeyword_1_1());
    }
))
;





// Entry rule entryRuleAnd
entryRuleAnd returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAndRule()); }
	 iv_ruleAnd=ruleAnd 
	 { $current=$iv_ruleAnd.current; } 
	 EOF 
;

// Rule And
ruleAnd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='and (' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAndAccess().getAndKeyword_0());
    }
(	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAndAccess().getRefKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAndAccess().getNameString0ParserRuleCall_1_1_0()); 
	    }
		lv_name_2_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAndAccess().getColonKeyword_1_2_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAndRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAndAccess().getTypeTypeCrossReference_1_2_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAndAccess().getLeftValueBooleanExpressionParserRuleCall_2_0()); 
	    }
		lv_leftValue_5_0=ruleBooleanExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_5_0, 
        		"BooleanExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='^' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAndAccess().getCircumflexAccentKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAndAccess().getRightValueBooleanExpressionParserRuleCall_4_0()); 
	    }
		lv_rightValue_7_0=ruleBooleanExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_7_0, 
        		"BooleanExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAndAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleOr
entryRuleOr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrRule()); }
	 iv_ruleOr=ruleOr 
	 { $current=$iv_ruleOr.current; } 
	 EOF 
;

// Rule Or
ruleOr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='or (' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOrAccess().getOrKeyword_0());
    }
(	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOrAccess().getRefKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrAccess().getNameString0ParserRuleCall_1_1_0()); 
	    }
		lv_name_2_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOrAccess().getColonKeyword_1_2_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getOrAccess().getTypeTypeCrossReference_1_2_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOrAccess().getLeftValueBooleanExpressionParserRuleCall_2_0()); 
	    }
		lv_leftValue_5_0=ruleBooleanExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_5_0, 
        		"BooleanExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='v' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOrAccess().getVKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrAccess().getRightValueBooleanExpressionParserRuleCall_4_0()); 
	    }
		lv_rightValue_7_0=ruleBooleanExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_7_0, 
        		"BooleanExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getOrAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleXor
entryRuleXor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXorRule()); }
	 iv_ruleXor=ruleXor 
	 { $current=$iv_ruleXor.current; } 
	 EOF 
;

// Rule Xor
ruleXor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='xor (' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXorAccess().getXorKeyword_0());
    }
(	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXorAccess().getRefKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXorAccess().getNameString0ParserRuleCall_1_1_0()); 
	    }
		lv_name_2_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXorAccess().getColonKeyword_1_2_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXorRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXorAccess().getTypeTypeCrossReference_1_2_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?)?(
(
		{ 
	        newCompositeNode(grammarAccess.getXorAccess().getLeftValueBooleanExpressionParserRuleCall_2_0()); 
	    }
		lv_leftValue_5_0=ruleBooleanExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXorRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_5_0, 
        		"BooleanExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='v_' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXorAccess().getV_Keyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXorAccess().getRightValueBooleanExpressionParserRuleCall_4_0()); 
	    }
		lv_rightValue_7_0=ruleBooleanExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXorRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_7_0, 
        		"BooleanExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXorAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleIntInf
entryRuleIntInf returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntInfRule()); }
	 iv_ruleIntInf=ruleIntInf 
	 { $current=$iv_ruleIntInf.current; } 
	 EOF 
;

// Rule IntInf
ruleIntInf returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntInfAccess().getLeftParenthesisKeyword_0_0());
    }
(	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntInfAccess().getRefKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntInfAccess().getNameString0ParserRuleCall_0_1_1_0()); 
	    }
		lv_name_2_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntInfRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntInfAccess().getColonKeyword_0_1_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntInfAccess().getLeftValueIntegerExpressionParserRuleCall_0_2_0()); 
	    }
		lv_leftValue_4_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntInfRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_4_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='<' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntInfAccess().getLessThanSignKeyword_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntInfAccess().getRightValueIntegerExpressionParserRuleCall_0_4_0()); 
	    }
		lv_rightValue_6_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntInfRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_6_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIntInfAccess().getRightParenthesisKeyword_0_5());
    }
)
    |(	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIntInfAccess().getLeftParenthesisKeyword_1_0());
    }
(	otherlv_9='#ref' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getIntInfAccess().getRefKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntInfAccess().getNameString0ParserRuleCall_1_1_1_0()); 
	    }
		lv_name_10_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntInfRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_10_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='::' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getIntInfAccess().getColonColonKeyword_1_1_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntInfRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIntInfAccess().getTypeTypeCrossReference_1_1_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getIntInfAccess().getColonKeyword_1_1_4());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntInfAccess().getLeftValueIntegerExpressionParserRuleCall_1_2_0()); 
	    }
		lv_leftValue_14_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntInfRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_14_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15='<' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getIntInfAccess().getLessThanSignKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntInfAccess().getRightValueIntegerExpressionParserRuleCall_1_4_0()); 
	    }
		lv_rightValue_16_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntInfRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_16_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17=')' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getIntInfAccess().getRightParenthesisKeyword_1_5());
    }
))
;





// Entry rule entryRuleIntSup
entryRuleIntSup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntSupRule()); }
	 iv_ruleIntSup=ruleIntSup 
	 { $current=$iv_ruleIntSup.current; } 
	 EOF 
;

// Rule IntSup
ruleIntSup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntSupAccess().getLeftParenthesisKeyword_0_0());
    }
(	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntSupAccess().getRefKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSupAccess().getNameString0ParserRuleCall_0_1_1_0()); 
	    }
		lv_name_2_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSupRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntSupAccess().getColonKeyword_0_1_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSupAccess().getLeftValueIntegerExpressionParserRuleCall_0_2_0()); 
	    }
		lv_leftValue_4_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSupRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_4_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntSupAccess().getGreaterThanSignKeyword_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSupAccess().getRightValueIntegerExpressionParserRuleCall_0_4_0()); 
	    }
		lv_rightValue_6_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSupRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_6_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIntSupAccess().getRightParenthesisKeyword_0_5());
    }
)
    |(	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIntSupAccess().getLeftParenthesisKeyword_1_0());
    }
(	otherlv_9='#ref' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getIntSupAccess().getRefKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSupAccess().getNameString0ParserRuleCall_1_1_1_0()); 
	    }
		lv_name_10_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSupRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_10_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='::' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getIntSupAccess().getColonColonKeyword_1_1_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntSupRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIntSupAccess().getTypeTypeCrossReference_1_1_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getIntSupAccess().getColonKeyword_1_1_4());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSupAccess().getLeftValueIntegerExpressionParserRuleCall_1_2_0()); 
	    }
		lv_leftValue_14_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSupRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_14_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15='>' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getIntSupAccess().getGreaterThanSignKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSupAccess().getRightValueIntegerExpressionParserRuleCall_1_4_0()); 
	    }
		lv_rightValue_16_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSupRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_16_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17=')' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getIntSupAccess().getRightParenthesisKeyword_1_5());
    }
))
;





// Entry rule entryRuleSeqIsEmpty
entryRuleSeqIsEmpty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSeqIsEmptyRule()); }
	 iv_ruleSeqIsEmpty=ruleSeqIsEmpty 
	 { $current=$iv_ruleSeqIsEmpty.current; } 
	 EOF 
;

// Rule SeqIsEmpty
ruleSeqIsEmpty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SeqIsEmpty' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSeqIsEmptyAccess().getSeqIsEmptyKeyword_0());
    }
(	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSeqIsEmptyAccess().getRefKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSeqIsEmptyAccess().getNameString0ParserRuleCall_1_1_0()); 
	    }
		lv_name_2_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeqIsEmptyRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSeqIsEmptyAccess().getColonKeyword_1_2_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSeqIsEmptyRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSeqIsEmptyAccess().getTypeTypeCrossReference_1_2_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?)?	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSeqIsEmptyAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSeqIsEmptyAccess().getOperandSeqExpressionParserRuleCall_3_0()); 
	    }
		lv_operand_6_0=ruleSeqExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeqIsEmptyRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_6_0, 
        		"SeqExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSeqIsEmptyAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleSeqGetTail
entryRuleSeqGetTail returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSeqGetTailRule()); }
	 iv_ruleSeqGetTail=ruleSeqGetTail 
	 { $current=$iv_ruleSeqGetTail.current; } 
	 EOF 
;

// Rule SeqGetTail
ruleSeqGetTail returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Seq->Tail' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSeqGetTailAccess().getSeqTailKeyword_0());
    }
(	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSeqGetTailAccess().getRefKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSeqGetTailAccess().getNameString0ParserRuleCall_1_1_0()); 
	    }
		lv_name_2_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeqGetTailRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSeqGetTailAccess().getColonKeyword_1_2_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSeqGetTailRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSeqGetTailAccess().getTypeTypeCrossReference_1_2_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?)?	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSeqGetTailAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSeqGetTailAccess().getOperandSeqExpressionParserRuleCall_3_0()); 
	    }
		lv_operand_6_0=ruleSeqExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeqGetTailRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_6_0, 
        		"SeqExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSeqGetTailAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleSeqGetHead
entryRuleSeqGetHead returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSeqGetHeadRule()); }
	 iv_ruleSeqGetHead=ruleSeqGetHead 
	 { $current=$iv_ruleSeqGetHead.current; } 
	 EOF 
;

// Rule SeqGetHead
ruleSeqGetHead returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Seq->Head' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSeqGetHeadAccess().getSeqHeadKeyword_0());
    }
(	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSeqGetHeadAccess().getRefKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSeqGetHeadAccess().getNameString0ParserRuleCall_1_1_0()); 
	    }
		lv_name_2_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeqGetHeadRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSeqGetHeadAccess().getColonKeyword_1_2_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSeqGetHeadRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSeqGetHeadAccess().getTypeTypeCrossReference_1_2_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?)?	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSeqGetHeadAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSeqGetHeadAccess().getOperandSeqExpressionParserRuleCall_3_0()); 
	    }
		lv_operand_6_0=ruleSeqExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeqGetHeadRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_6_0, 
        		"SeqExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSeqGetHeadAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleSeqDecr
entryRuleSeqDecr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSeqDecrRule()); }
	 iv_ruleSeqDecr=ruleSeqDecr 
	 { $current=$iv_ruleSeqDecr.current; } 
	 EOF 
;

// Rule SeqDecr
ruleSeqDecr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Seq--' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSeqDecrAccess().getSeqKeyword_0());
    }
(	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSeqDecrAccess().getRefKeyword_1_0());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getSeqDecrAccess().getNameIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSeqDecrRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSeqDecrAccess().getColonKeyword_1_2());
    }
)?	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSeqDecrAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSeqDecrAccess().getOperandSeqExpressionParserRuleCall_3_0()); 
	    }
		lv_operand_5_0=ruleSeqExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeqDecrRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_5_0, 
        		"SeqExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSeqDecrAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleSeqSched
entryRuleSeqSched returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSeqSchedRule()); }
	 iv_ruleSeqSched=ruleSeqSched 
	 { $current=$iv_ruleSeqSched.current; } 
	 EOF 
;

// Rule SeqSched
ruleSeqSched returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Seq++' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSeqSchedAccess().getSeqKeyword_0());
    }
(	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSeqSchedAccess().getRefKeyword_1_0());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getSeqSchedAccess().getNameIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSeqSchedRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSeqSchedAccess().getColonKeyword_1_2());
    }
)?	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSeqSchedAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSeqSchedAccess().getOperandSeqExpressionParserRuleCall_3_0()); 
	    }
		lv_operand_5_0=ruleSeqExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeqSchedRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_5_0, 
        		"SeqExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSeqSchedAccess().getCommaKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSeqSchedAccess().getIntegerExprIntegerExpressionParserRuleCall_5_0()); 
	    }
		lv_integerExpr_7_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeqSchedRule());
	        }
       		set(
       			$current, 
       			"integerExpr",
        		lv_integerExpr_7_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSeqSchedAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanExpressionRule()); }
	 iv_ruleBooleanExpression=ruleBooleanExpression 
	 { $current=$iv_ruleBooleanExpression.current; } 
	 EOF 
;

// Rule BooleanExpression
ruleBooleanExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBooleanExpressionAccess().getBooleanRefParserRuleCall_0()); 
    }
    this_BooleanRef_0=ruleBooleanRef
    { 
        $current = $this_BooleanRef_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBooleanExpressionAccess().getNotParserRuleCall_1()); 
    }
    this_Not_1=ruleNot
    { 
        $current = $this_Not_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBooleanExpressionAccess().getAndParserRuleCall_2()); 
    }
    this_And_2=ruleAnd
    { 
        $current = $this_And_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBooleanExpressionAccess().getOrParserRuleCall_3()); 
    }
    this_Or_3=ruleOr
    { 
        $current = $this_Or_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBooleanExpressionAccess().getXorParserRuleCall_4()); 
    }
    this_Xor_4=ruleXor
    { 
        $current = $this_Xor_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBooleanExpressionAccess().getIntEqualParserRuleCall_5()); 
    }
    this_IntEqual_5=ruleIntEqual
    { 
        $current = $this_IntEqual_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBooleanExpressionAccess().getIntInfParserRuleCall_6()); 
    }
    this_IntInf_6=ruleIntInf
    { 
        $current = $this_IntInf_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBooleanExpressionAccess().getIntSupParserRuleCall_7()); 
    }
    this_IntSup_7=ruleIntSup
    { 
        $current = $this_IntSup_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBooleanExpressionAccess().getSeqIsEmptyParserRuleCall_8()); 
    }
    this_SeqIsEmpty_8=ruleSeqIsEmpty
    { 
        $current = $this_SeqIsEmpty_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBooleanExpressionAccess().getBooleanVariableRefParserRuleCall_9()); 
    }
    this_BooleanVariableRef_9=ruleBooleanVariableRef
    { 
        $current = $this_BooleanVariableRef_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBooleanExpressionAccess().getIntInfEqualParserRuleCall_10()); 
    }
    this_IntInfEqual_10=ruleIntInfEqual
    { 
        $current = $this_IntInfEqual_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBooleanExpressionAccess().getIntSupEqualParserRuleCall_11()); 
    }
    this_IntSupEqual_11=ruleIntSupEqual
    { 
        $current = $this_IntSupEqual_11.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIntSupEqual
entryRuleIntSupEqual returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntSupEqualRule()); }
	 iv_ruleIntSupEqual=ruleIntSupEqual 
	 { $current=$iv_ruleIntSupEqual.current; } 
	 EOF 
;

// Rule IntSupEqual
ruleIntSupEqual returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntSupEqualAccess().getLeftParenthesisKeyword_0_0());
    }
(	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntSupEqualAccess().getRefKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSupEqualAccess().getNameString0ParserRuleCall_0_1_1_0()); 
	    }
		lv_name_2_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSupEqualRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntSupEqualAccess().getColonKeyword_0_1_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSupEqualAccess().getLeftValueIntegerExpressionParserRuleCall_0_2_0()); 
	    }
		lv_leftValue_4_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSupEqualRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_4_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='>=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntSupEqualAccess().getGreaterThanSignEqualsSignKeyword_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSupEqualAccess().getRightValueIntegerExpressionParserRuleCall_0_4_0()); 
	    }
		lv_rightValue_6_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSupEqualRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_6_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIntSupEqualAccess().getRightParenthesisKeyword_0_5());
    }
)
    |(	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIntSupEqualAccess().getLeftParenthesisKeyword_1_0());
    }
(	otherlv_9='#ref' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getIntSupEqualAccess().getRefKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSupEqualAccess().getNameString0ParserRuleCall_1_1_1_0()); 
	    }
		lv_name_10_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSupEqualRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_10_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='::' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getIntSupEqualAccess().getColonColonKeyword_1_1_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntSupEqualRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIntSupEqualAccess().getTypeTypeCrossReference_1_1_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getIntSupEqualAccess().getColonKeyword_1_1_4());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSupEqualAccess().getLeftValueIntegerExpressionParserRuleCall_1_2_0()); 
	    }
		lv_leftValue_14_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSupEqualRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_14_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15='>=' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getIntSupEqualAccess().getGreaterThanSignEqualsSignKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntSupEqualAccess().getRightValueIntegerExpressionParserRuleCall_1_4_0()); 
	    }
		lv_rightValue_16_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntSupEqualRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_16_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17=')' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getIntSupEqualAccess().getRightParenthesisKeyword_1_5());
    }
))
;





// Entry rule entryRuleIntInfEqual
entryRuleIntInfEqual returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntInfEqualRule()); }
	 iv_ruleIntInfEqual=ruleIntInfEqual 
	 { $current=$iv_ruleIntInfEqual.current; } 
	 EOF 
;

// Rule IntInfEqual
ruleIntInfEqual returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntInfEqualAccess().getLeftParenthesisKeyword_0_0());
    }
(	otherlv_1='#ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntInfEqualAccess().getRefKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntInfEqualAccess().getNameString0ParserRuleCall_0_1_1_0()); 
	    }
		lv_name_2_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntInfEqualRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntInfEqualAccess().getColonKeyword_0_1_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntInfEqualAccess().getLeftValueIntegerExpressionParserRuleCall_0_2_0()); 
	    }
		lv_leftValue_4_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntInfEqualRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_4_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='<=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntInfEqualAccess().getLessThanSignEqualsSignKeyword_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntInfEqualAccess().getRightValueIntegerExpressionParserRuleCall_0_4_0()); 
	    }
		lv_rightValue_6_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntInfEqualRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_6_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIntInfEqualAccess().getRightParenthesisKeyword_0_5());
    }
)
    |(	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIntInfEqualAccess().getLeftParenthesisKeyword_1_0());
    }
(	otherlv_9='#ref' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getIntInfEqualAccess().getRefKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntInfEqualAccess().getNameString0ParserRuleCall_1_1_1_0()); 
	    }
		lv_name_10_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntInfEqualRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_10_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='::' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getIntInfEqualAccess().getColonColonKeyword_1_1_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntInfEqualRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIntInfEqualAccess().getTypeTypeCrossReference_1_1_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getIntInfEqualAccess().getColonKeyword_1_1_4());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIntInfEqualAccess().getLeftValueIntegerExpressionParserRuleCall_1_2_0()); 
	    }
		lv_leftValue_14_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntInfEqualRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_14_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15='<=' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getIntInfEqualAccess().getLessThanSignEqualsSignKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntInfEqualAccess().getRightValueIntegerExpressionParserRuleCall_1_4_0()); 
	    }
		lv_rightValue_16_0=ruleIntegerExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntInfEqualRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_16_0, 
        		"IntegerExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17=')' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getIntInfEqualAccess().getRightParenthesisKeyword_1_5());
    }
))
;





// Entry rule entryRuleClassicalExpression0
entryRuleClassicalExpression0 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassicalExpression0Rule()); }
	 iv_ruleClassicalExpression0=ruleClassicalExpression0 
	 { $current=$iv_ruleClassicalExpression0.current; } 
	 EOF 
;

// Rule ClassicalExpression0
ruleClassicalExpression0 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassicalExpression0Access().getBooleanExpressionParserRuleCall_0()); 
    }
    this_BooleanExpression_0=ruleBooleanExpression
    { 
        $current = $this_BooleanExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassicalExpression0Access().getIntegerExpressionParserRuleCall_1()); 
    }
    this_IntegerExpression_1=ruleIntegerExpression
    { 
        $current = $this_IntegerExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassicalExpression0Access().getSeqExpressionParserRuleCall_2()); 
    }
    this_SeqExpression_2=ruleSeqExpression
    { 
        $current = $this_SeqExpression_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;







// Entry rule entryRuleImportStatement
entryRuleImportStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportStatementRule()); }
	 iv_ruleImportStatement=ruleImportStatement 
	 { $current=$iv_ruleImportStatement.current; } 
	 EOF 
;

// Rule ImportStatement
ruleImportStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportStatementAccess().getImportKeyword_0());
    }
(
(
		lv_importURI_1_0=RULE_STRING
		{
			newLeafNode(lv_importURI_1_0, grammarAccess.getImportStatementAccess().getImportURISTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"importURI",
        		lv_importURI_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getImportStatementAccess().getAsKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportStatementAccess().getAliasString0ParserRuleCall_3_0()); 
	    }
		lv_alias_3_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportStatementRule());
	        }
       		set(
       			$current, 
       			"alias",
        		lv_alias_3_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getImportStatementAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleExpressionLibrary
entryRuleExpressionLibrary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionLibraryRule()); }
	 iv_ruleExpressionLibrary=ruleExpressionLibrary 
	 { $current=$iv_ruleExpressionLibrary.current; } 
	 EOF 
;

// Rule ExpressionLibrary
ruleExpressionLibrary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ExpressionLibrary' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExpressionLibraryAccess().getExpressionLibraryKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getExpressionLibraryAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpressionLibraryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExpressionLibraryAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionLibraryAccess().getElementsElementParserRuleCall_3_0_0()); 
	    }
		lv_elements_3_0=ruleElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionLibraryRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_3_0, 
        		"Element");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionLibraryAccess().getExpressionDeclarationsExpressionDeclarationParserRuleCall_3_1_0_0()); 
	    }
		lv_expressionDeclarations_4_1=ruleExpressionDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionLibraryRule());
	        }
       		add(
       			$current, 
       			"expressionDeclarations",
        		lv_expressionDeclarations_4_1, 
        		"ExpressionDeclaration");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getExpressionLibraryAccess().getExpressionDeclarationsKernelExpressionDeclParserRuleCall_3_1_0_1()); 
	    }
		lv_expressionDeclarations_4_2=rulekernelExpressionDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionLibraryRule());
	        }
       		add(
       			$current, 
       			"expressionDeclarations",
        		lv_expressionDeclarations_4_2, 
        		"kernelExpressionDecl");
	        afterParserOrEnumRuleCall();
	    }

)

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionLibraryAccess().getExpressionDefinitionsExpressionDefinitionParserRuleCall_3_2_0()); 
	    }
		lv_expressionDefinitions_5_0=ruleExpressionDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionLibraryRule());
	        }
       		add(
       			$current, 
       			"expressionDefinitions",
        		lv_expressionDefinitions_5_0, 
        		"ExpressionDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExpressionLibraryAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleRelationLibrary
entryRuleRelationLibrary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationLibraryRule()); }
	 iv_ruleRelationLibrary=ruleRelationLibrary 
	 { $current=$iv_ruleRelationLibrary.current; } 
	 EOF 
;

// Rule RelationLibrary
ruleRelationLibrary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RelationLibrary' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRelationLibraryAccess().getRelationLibraryKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRelationLibraryAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationLibraryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRelationLibraryAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRelationLibraryAccess().getElementsElementParserRuleCall_3_0_0()); 
	    }
		lv_elements_3_0=ruleElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationLibraryRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_3_0, 
        		"Element");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationLibraryAccess().getRelationDeclarationsRelationDeclarationParserRuleCall_3_1_0_0()); 
	    }
		lv_relationDeclarations_4_1=ruleRelationDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationLibraryRule());
	        }
       		add(
       			$current, 
       			"relationDeclarations",
        		lv_relationDeclarations_4_1, 
        		"RelationDeclaration");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getRelationLibraryAccess().getRelationDeclarationsKernelRelationDeclParserRuleCall_3_1_0_1()); 
	    }
		lv_relationDeclarations_4_2=rulekernelRelationDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationLibraryRule());
	        }
       		add(
       			$current, 
       			"relationDeclarations",
        		lv_relationDeclarations_4_2, 
        		"kernelRelationDecl");
	        afterParserOrEnumRuleCall();
	    }

)

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationLibraryAccess().getRelationDefinitionsRelationDefinitionParserRuleCall_3_2_0()); 
	    }
		lv_relationDefinitions_5_0=ruleRelationDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationLibraryRule());
	        }
       		add(
       			$current, 
       			"relationDefinitions",
        		lv_relationDefinitions_5_0, 
        		"RelationDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRelationLibraryAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleExpressionDeclaration
entryRuleExpressionDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionDeclarationRule()); }
	 iv_ruleExpressionDeclaration=ruleExpressionDeclaration 
	 { $current=$iv_ruleExpressionDeclaration.current; } 
	 EOF 
;

// Rule ExpressionDeclaration
ruleExpressionDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ExpressionDeclaration' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExpressionDeclarationAccess().getExpressionDeclarationKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getExpressionDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpressionDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExpressionDeclarationAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getParametersAbstractEntityParserRuleCall_3_0()); 
	    }
		lv_parameters_3_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionDeclarationRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExpressionDeclarationAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getParametersAbstractEntityParserRuleCall_4_1_0()); 
	    }
		lv_parameters_5_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionDeclarationRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_5_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExpressionDeclarationAccess().getRightParenthesisKeyword_5());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getExpressionDeclarationAccess().getColonKeyword_6());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpressionDeclarationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getReturnTypeTypeCrossReference_7_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRelationDeclaration
entryRuleRelationDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationDeclarationRule()); }
	 iv_ruleRelationDeclaration=ruleRelationDeclaration 
	 { $current=$iv_ruleRelationDeclaration.current; } 
	 EOF 
;

// Rule RelationDeclaration
ruleRelationDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RelationDeclaration' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRelationDeclarationAccess().getRelationDeclarationKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRelationDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRelationDeclarationAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationDeclarationAccess().getParametersAbstractEntityParserRuleCall_3_0()); 
	    }
		lv_parameters_3_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationDeclarationRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRelationDeclarationAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationDeclarationAccess().getParametersAbstractEntityParserRuleCall_4_1_0()); 
	    }
		lv_parameters_5_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationDeclarationRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_5_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRelationDeclarationAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleUserExpressionDefinition_Impl
entryRuleUserExpressionDefinition_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUserExpressionDefinition_ImplRule()); }
	 iv_ruleUserExpressionDefinition_Impl=ruleUserExpressionDefinition_Impl 
	 { $current=$iv_ruleUserExpressionDefinition_Impl.current; } 
	 EOF 
;

// Rule UserExpressionDefinition_Impl
ruleUserExpressionDefinition_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ExpressionDefinition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUserExpressionDefinition_ImplAccess().getExpressionDefinitionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getUserExpressionDefinition_ImplAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUserExpressionDefinition_ImplRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUserExpressionDefinition_ImplAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUserExpressionDefinition_ImplRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getUserExpressionDefinition_ImplAccess().getDeclarationExpressionDeclarationCrossReference_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUserExpressionDefinition_ImplAccess().getRightSquareBracketKeyword_4());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getUserExpressionDefinition_ImplAccess().getLeftCurlyBracketKeyword_5());
    }
(	otherlv_6='root' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUserExpressionDefinition_ImplAccess().getRootKeyword_6_0());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getUserExpressionDefinition_ImplAccess().getEqualsSignKeyword_6_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUserExpressionDefinition_ImplRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getUserExpressionDefinition_ImplAccess().getRootExpressionExpressionCrossReference_6_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getUserExpressionDefinition_ImplAccess().getConcreteEntitiesConcreteEntityParserRuleCall_6_3_0_0()); 
	    }
		lv_concreteEntities_9_0=ruleConcreteEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserExpressionDefinition_ImplRule());
	        }
       		add(
       			$current, 
       			"concreteEntities",
        		lv_concreteEntities_9_0, 
        		"ConcreteEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getUserExpressionDefinition_ImplAccess().getClassicalExpressionsClassicalExpression0ParserRuleCall_6_3_1_0()); 
	    }
		lv_classicalExpressions_10_0=ruleClassicalExpression0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserExpressionDefinition_ImplRule());
	        }
       		add(
       			$current, 
       			"classicalExpressions",
        		lv_classicalExpressions_10_0, 
        		"ClassicalExpression0");
	        afterParserOrEnumRuleCall();
	    }

)
))+)	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getUserExpressionDefinition_ImplAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleConditionalExpressionDefinition
entryRuleConditionalExpressionDefinition returns [EObject current=null] 
	@init { 
		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
			grammarAccess.getConditionalExpressionDefinitionAccess().getUnorderedGroup_6()
		);
	}
	:
	{ newCompositeNode(grammarAccess.getConditionalExpressionDefinitionRule()); }
	 iv_ruleConditionalExpressionDefinition=ruleConditionalExpressionDefinition 
	 { $current=$iv_ruleConditionalExpressionDefinition.current; } 
	 EOF 
;
finally {
	myUnorderedGroupState.restore();
}

// Rule ConditionalExpressionDefinition
ruleConditionalExpressionDefinition returns [EObject current=null] 
    @init { enterRule(); 
		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
			grammarAccess.getConditionalExpressionDefinitionAccess().getUnorderedGroup_6()
		);
    }
    @after { leaveRule(); }:
(	otherlv_0='ConditionalExpressionDefinition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConditionalExpressionDefinitionAccess().getConditionalExpressionDefinitionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getConditionalExpressionDefinitionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionalExpressionDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConditionalExpressionDefinitionAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionalExpressionDefinitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getConditionalExpressionDefinitionAccess().getDeclarationExpressionDeclarationCrossReference_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConditionalExpressionDefinitionAccess().getRightSquareBracketKeyword_4());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConditionalExpressionDefinitionAccess().getLeftCurlyBracketKeyword_5());
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getConditionalExpressionDefinitionAccess().getUnorderedGroup_6());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConditionalExpressionDefinitionAccess().getUnorderedGroup_6(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getConditionalExpressionDefinitionAccess().getUnorderedGroup_6(), 0);
	 				}
					({true}?=>((
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalExpressionDefinitionAccess().getConcreteEntitiesConcreteEntityParserRuleCall_6_0_0_0()); 
	    }
		lv_concreteEntities_7_0=ruleConcreteEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalExpressionDefinitionRule());
	        }
       		add(
       			$current, 
       			"concreteEntities",
        		lv_concreteEntities_7_0, 
        		"ConcreteEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalExpressionDefinitionAccess().getClassicalExpressionsClassicalExpression0ParserRuleCall_6_0_1_0()); 
	    }
		lv_classicalExpressions_8_0=ruleClassicalExpression0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalExpressionDefinitionRule());
	        }
       		add(
       			$current, 
       			"classicalExpressions",
        		lv_classicalExpressions_8_0, 
        		"ClassicalExpression0");
	        afterParserOrEnumRuleCall();
	    }

)
)))+
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConditionalExpressionDefinitionAccess().getUnorderedGroup_6());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConditionalExpressionDefinitionAccess().getUnorderedGroup_6(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getConditionalExpressionDefinitionAccess().getUnorderedGroup_6(), 1);
	 				}
					({true}?=>(	otherlv_9='switch' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getConditionalExpressionDefinitionAccess().getSwitchKeyword_6_1_0());
    }
	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getConditionalExpressionDefinitionAccess().getLeftCurlyBracketKeyword_6_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalExpressionDefinitionAccess().getExprCasesExprCaseParserRuleCall_6_1_2_0()); 
	    }
		lv_exprCases_11_0=ruleExprCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalExpressionDefinitionRule());
	        }
       		add(
       			$current, 
       			"exprCases",
        		lv_exprCases_11_0, 
        		"ExprCase");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalExpressionDefinitionAccess().getExprCasesExprCaseParserRuleCall_6_1_3_0()); 
	    }
		lv_exprCases_12_0=ruleExprCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalExpressionDefinitionRule());
	        }
       		add(
       			$current, 
       			"exprCases",
        		lv_exprCases_12_0, 
        		"ExprCase");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getConditionalExpressionDefinitionAccess().getRightCurlyBracketKeyword_6_1_4());
    }
(	otherlv_14='default' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getConditionalExpressionDefinitionAccess().getDefaultKeyword_6_1_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalExpressionDefinitionAccess().getDefaultExpressionExpressionParserRuleCall_6_1_5_1_0()); 
	    }
		lv_defaultExpression_15_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalExpressionDefinitionRule());
	        }
       		set(
       			$current, 
       			"defaultExpression",
        		lv_defaultExpression_15_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConditionalExpressionDefinitionAccess().getUnorderedGroup_6());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getConditionalExpressionDefinitionAccess().getUnorderedGroup_6())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getConditionalExpressionDefinitionAccess().getUnorderedGroup_6());
	}

)	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getConditionalExpressionDefinitionAccess().getRightCurlyBracketKeyword_7());
    }
)
;
finally {
	myUnorderedGroupState.restore();
}





// Entry rule entryRuleExternalExpressionDefinition
entryRuleExternalExpressionDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExternalExpressionDefinitionRule()); }
	 iv_ruleExternalExpressionDefinition=ruleExternalExpressionDefinition 
	 { $current=$iv_ruleExternalExpressionDefinition.current; } 
	 EOF 
;

// Rule ExternalExpressionDefinition
ruleExternalExpressionDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='Extern' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExternalExpressionDefinitionAccess().getExternKeyword_0_0());
    }

    |	otherlv_1='External' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExternalExpressionDefinitionAccess().getExternalKeyword_0_1());
    }
)	otherlv_2='ExpressionDefinition' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExternalExpressionDefinitionAccess().getExpressionDefinitionKeyword_1());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getExternalExpressionDefinitionAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExternalExpressionDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExternalExpressionDefinitionAccess().getLeftSquareBracketKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExternalExpressionDefinitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getExternalExpressionDefinitionAccess().getDeclarationExpressionDeclarationCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExternalExpressionDefinitionAccess().getRightSquareBracketKeyword_5());
    }
)
;





// Entry rule entryRuleConditionalRelationDefinition
entryRuleConditionalRelationDefinition returns [EObject current=null] 
	@init { 
		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
			grammarAccess.getConditionalRelationDefinitionAccess().getUnorderedGroup_6()
		);
	}
	:
	{ newCompositeNode(grammarAccess.getConditionalRelationDefinitionRule()); }
	 iv_ruleConditionalRelationDefinition=ruleConditionalRelationDefinition 
	 { $current=$iv_ruleConditionalRelationDefinition.current; } 
	 EOF 
;
finally {
	myUnorderedGroupState.restore();
}

// Rule ConditionalRelationDefinition
ruleConditionalRelationDefinition returns [EObject current=null] 
    @init { enterRule(); 
		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
			grammarAccess.getConditionalRelationDefinitionAccess().getUnorderedGroup_6()
		);
    }
    @after { leaveRule(); }:
(	otherlv_0='ConditionalRelationDefinition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConditionalRelationDefinitionAccess().getConditionalRelationDefinitionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getConditionalRelationDefinitionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionalRelationDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConditionalRelationDefinitionAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionalRelationDefinitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getConditionalRelationDefinitionAccess().getDeclarationRelationDeclarationCrossReference_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConditionalRelationDefinitionAccess().getRightSquareBracketKeyword_4());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConditionalRelationDefinitionAccess().getLeftCurlyBracketKeyword_5());
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getConditionalRelationDefinitionAccess().getUnorderedGroup_6());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConditionalRelationDefinitionAccess().getUnorderedGroup_6(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getConditionalRelationDefinitionAccess().getUnorderedGroup_6(), 0);
	 				}
					({true}?=>((
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalRelationDefinitionAccess().getConcreteEntitiesConcreteEntityParserRuleCall_6_0_0_0()); 
	    }
		lv_concreteEntities_7_0=ruleConcreteEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalRelationDefinitionRule());
	        }
       		add(
       			$current, 
       			"concreteEntities",
        		lv_concreteEntities_7_0, 
        		"ConcreteEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalRelationDefinitionAccess().getClassicalExpressionsClassicalExpression0ParserRuleCall_6_0_1_0()); 
	    }
		lv_classicalExpressions_8_0=ruleClassicalExpression0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalRelationDefinitionRule());
	        }
       		add(
       			$current, 
       			"classicalExpressions",
        		lv_classicalExpressions_8_0, 
        		"ClassicalExpression0");
	        afterParserOrEnumRuleCall();
	    }

)
)))+
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConditionalRelationDefinitionAccess().getUnorderedGroup_6());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConditionalRelationDefinitionAccess().getUnorderedGroup_6(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getConditionalRelationDefinitionAccess().getUnorderedGroup_6(), 1);
	 				}
					({true}?=>(	otherlv_9='switch' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getConditionalRelationDefinitionAccess().getSwitchKeyword_6_1_0());
    }
	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getConditionalRelationDefinitionAccess().getLeftCurlyBracketKeyword_6_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalRelationDefinitionAccess().getRelCasesRelCaseParserRuleCall_6_1_2_0()); 
	    }
		lv_relCases_11_0=ruleRelCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalRelationDefinitionRule());
	        }
       		add(
       			$current, 
       			"relCases",
        		lv_relCases_11_0, 
        		"RelCase");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalRelationDefinitionAccess().getRelCasesRelCaseParserRuleCall_6_1_3_0()); 
	    }
		lv_relCases_12_0=ruleRelCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalRelationDefinitionRule());
	        }
       		add(
       			$current, 
       			"relCases",
        		lv_relCases_12_0, 
        		"RelCase");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getConditionalRelationDefinitionAccess().getRightCurlyBracketKeyword_6_1_4());
    }
	otherlv_14='default' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getConditionalRelationDefinitionAccess().getDefaultKeyword_6_1_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalRelationDefinitionAccess().getDefaultRelationRelationParserRuleCall_6_1_6_0()); 
	    }
		lv_defaultRelation_15_0=ruleRelation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalRelationDefinitionRule());
	        }
       		add(
       			$current, 
       			"defaultRelation",
        		lv_defaultRelation_15_0, 
        		"Relation");
	        afterParserOrEnumRuleCall();
	    }

)
)*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConditionalRelationDefinitionAccess().getUnorderedGroup_6());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getConditionalRelationDefinitionAccess().getUnorderedGroup_6());
	}

)	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getConditionalRelationDefinitionAccess().getRightCurlyBracketKeyword_7());
    }
)
;
finally {
	myUnorderedGroupState.restore();
}





// Entry rule entryRuleExternalRelationDefinition
entryRuleExternalRelationDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExternalRelationDefinitionRule()); }
	 iv_ruleExternalRelationDefinition=ruleExternalRelationDefinition 
	 { $current=$iv_ruleExternalRelationDefinition.current; } 
	 EOF 
;

// Rule ExternalRelationDefinition
ruleExternalRelationDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='Extern' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExternalRelationDefinitionAccess().getExternKeyword_0_0());
    }

    |	otherlv_1='External' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExternalRelationDefinitionAccess().getExternalKeyword_0_1());
    }
)	otherlv_2='RelationDefinition' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExternalRelationDefinitionAccess().getRelationDefinitionKeyword_1());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getExternalRelationDefinitionAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExternalRelationDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExternalRelationDefinitionAccess().getLeftSquareBracketKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExternalRelationDefinitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getExternalRelationDefinitionAccess().getDeclarationRelationDeclarationCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExternalRelationDefinitionAccess().getRightSquareBracketKeyword_5());
    }
)
;





// Entry rule entryRuleRelation
entryRuleRelation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationRule()); }
	 iv_ruleRelation=ruleRelation 
	 { $current=$iv_ruleRelation.current; } 
	 EOF 
;

// Rule Relation
ruleRelation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_isAnAssertion_0_0=	'assert' 
    {
        newLeafNode(lv_isAnAssertion_0_0, grammarAccess.getRelationAccess().getIsAnAssertionAssertKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationRule());
	        }
       		setWithLastConsumed($current, "isAnAssertion", true, "assert");
	    }

)
)?	otherlv_1='Relation' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRelationAccess().getRelationKeyword_1());
    }
((
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getRelationAccess().getNameIDTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRelationAccess().getLeftSquareBracketKeyword_2_1());
    }
)?(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRelationAccess().getTypeRelationDeclarationCrossReference_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRelationAccess().getRightSquareBracketKeyword_4());
    }
)?	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRelationAccess().getLeftParenthesisKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRelationAccess().getBindingsBindingParserRuleCall_6_0_0()); 
	    }
		lv_bindings_7_0=ruleBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationRule());
	        }
       		add(
       			$current, 
       			"bindings",
        		lv_bindings_7_0, 
        		"Binding");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRelationAccess().getCommaKeyword_6_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationAccess().getBindingsBindingParserRuleCall_6_1_1_0()); 
	    }
		lv_bindings_9_0=ruleBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationRule());
	        }
       		add(
       			$current, 
       			"bindings",
        		lv_bindings_9_0, 
        		"Binding");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRelationAccess().getRightParenthesisKeyword_7());
    }
)
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Expression' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExpressionAccess().getExpressionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getExpressionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExpressionAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getTypeExpressionDeclarationCrossReference_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getBindingsBindingParserRuleCall_5_0_0()); 
	    }
		lv_bindings_5_0=ruleBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		add(
       			$current, 
       			"bindings",
        		lv_bindings_5_0, 
        		"Binding");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExpressionAccess().getCommaKeyword_5_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getBindingsBindingParserRuleCall_5_1_1_0()); 
	    }
		lv_bindings_7_0=ruleBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		add(
       			$current, 
       			"bindings",
        		lv_bindings_7_0, 
        		"Binding");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getExpressionAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleBinding
entryRuleBinding returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBindingRule()); }
	 iv_ruleBinding=ruleBinding 
	 { $current=$iv_ruleBinding.current; } 
	 EOF 
;

// Rule Binding
ruleBinding returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBindingRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getBindingAccess().getAbstractAbstractEntityCrossReference_0_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='->' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBindingAccess().getHyphenMinusGreaterThanSignKeyword_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBindingRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getBindingAccess().getBindableBindableEntityCrossReference_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleClock
entryRuleClock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClockRule()); }
	 iv_ruleClock=ruleClock 
	 { $current=$iv_ruleClock.current; } 
	 EOF 
;

// Rule Clock
ruleClock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Clock' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClockAccess().getClockKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getClockAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClockRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getClockAccess().getColonKeyword_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClockRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getClockAccess().getTypeTypeCrossReference_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getString1ParserRuleCall_0()); 
    }
    this_String1_0=ruleString1
    { 
        $current = $this_String1_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getBooleanParserRuleCall_1()); 
    }
    this_Boolean_1=ruleBoolean
    { 
        $current = $this_Boolean_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getIntegerParserRuleCall_2()); 
    }
    this_Integer_2=ruleInteger
    { 
        $current = $this_Integer_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getRealParserRuleCall_3()); 
    }
    this_Real_3=ruleReal
    { 
        $current = $this_Real_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getCharParserRuleCall_4()); 
    }
    this_Char_4=ruleChar
    { 
        $current = $this_Char_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getRecordParserRuleCall_5()); 
    }
    this_Record_5=ruleRecord
    { 
        $current = $this_Record_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getSequenceTypeParserRuleCall_6()); 
    }
    this_SequenceType_6=ruleSequenceType
    { 
        $current = $this_SequenceType_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getDiscreteClockType_ImplParserRuleCall_7()); 
    }
    this_DiscreteClockType_Impl_7=ruleDiscreteClockType_Impl
    { 
        $current = $this_DiscreteClockType_Impl_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getDenseClockTypeParserRuleCall_8()); 
    }
    this_DenseClockType_8=ruleDenseClockType
    { 
        $current = $this_DenseClockType_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getEnumerationTypeParserRuleCall_9()); 
    }
    this_EnumerationType_9=ruleEnumerationType
    { 
        $current = $this_EnumerationType_9.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExpressionDefinition
entryRuleExpressionDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionDefinitionRule()); }
	 iv_ruleExpressionDefinition=ruleExpressionDefinition 
	 { $current=$iv_ruleExpressionDefinition.current; } 
	 EOF 
;

// Rule ExpressionDefinition
ruleExpressionDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExpressionDefinitionAccess().getUserExpressionDefinition_ImplParserRuleCall_0()); 
    }
    this_UserExpressionDefinition_Impl_0=ruleUserExpressionDefinition_Impl
    { 
        $current = $this_UserExpressionDefinition_Impl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExpressionDefinitionAccess().getConditionalExpressionDefinitionParserRuleCall_1()); 
    }
    this_ConditionalExpressionDefinition_1=ruleConditionalExpressionDefinition
    { 
        $current = $this_ConditionalExpressionDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExpressionDefinitionAccess().getExternalExpressionDefinitionParserRuleCall_2()); 
    }
    this_ExternalExpressionDefinition_2=ruleExternalExpressionDefinition
    { 
        $current = $this_ExternalExpressionDefinition_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	 iv_ruleElement=ruleElement 
	 { $current=$iv_ruleElement.current; } 
	 EOF 
;

// Rule Element
ruleElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getElementAccess().getClockParserRuleCall_0()); 
    }
    this_Clock_0=ruleClock
    { 
        $current = $this_Clock_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getElementAccess().getStringElementParserRuleCall_1()); 
    }
    this_StringElement_1=ruleStringElement
    { 
        $current = $this_StringElement_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getElementAccess().getBooleanElementParserRuleCall_2()); 
    }
    this_BooleanElement_2=ruleBooleanElement
    { 
        $current = $this_BooleanElement_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getElementAccess().getIntegerElementParserRuleCall_3()); 
    }
    this_IntegerElement_3=ruleIntegerElement
    { 
        $current = $this_IntegerElement_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getElementAccess().getRealElementParserRuleCall_4()); 
    }
    this_RealElement_4=ruleRealElement
    { 
        $current = $this_RealElement_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getElementAccess().getRecordElementParserRuleCall_5()); 
    }
    this_RecordElement_5=ruleRecordElement
    { 
        $current = $this_RecordElement_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getElementAccess().getSequenceElementParserRuleCall_6()); 
    }
    this_SequenceElement_6=ruleSequenceElement
    { 
        $current = $this_SequenceElement_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRelationDefinition
entryRuleRelationDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationDefinitionRule()); }
	 iv_ruleRelationDefinition=ruleRelationDefinition 
	 { $current=$iv_ruleRelationDefinition.current; } 
	 EOF 
;

// Rule RelationDefinition
ruleRelationDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getRelationDefinitionAccess().getUserRelationDefinition_ImplParserRuleCall_0()); 
    }
    this_UserRelationDefinition_Impl_0=ruleUserRelationDefinition_Impl
    { 
        $current = $this_UserRelationDefinition_Impl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getRelationDefinitionAccess().getConditionalRelationDefinitionParserRuleCall_1()); 
    }
    this_ConditionalRelationDefinition_1=ruleConditionalRelationDefinition
    { 
        $current = $this_ConditionalRelationDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getRelationDefinitionAccess().getExternalRelationDefinitionParserRuleCall_2()); 
    }
    this_ExternalRelationDefinition_2=ruleExternalRelationDefinition
    { 
        $current = $this_ExternalRelationDefinition_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExprCase
entryRuleExprCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExprCaseRule()); }
	 iv_ruleExprCase=ruleExprCase 
	 { $current=$iv_ruleExprCase.current; } 
	 EOF 
;

// Rule ExprCase
ruleExprCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='case' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExprCaseAccess().getCaseKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExprCaseAccess().getConditionBooleanExpressionParserRuleCall_1_0()); 
	    }
		lv_condition_1_0=ruleBooleanExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprCaseRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_1_0, 
        		"BooleanExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExprCaseAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExprCaseAccess().getExpressionExpressionParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprCaseRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRelCase
entryRuleRelCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelCaseRule()); }
	 iv_ruleRelCase=ruleRelCase 
	 { $current=$iv_ruleRelCase.current; } 
	 EOF 
;

// Rule RelCase
ruleRelCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='case' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRelCaseAccess().getCaseKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRelCaseAccess().getConditionBooleanExpressionParserRuleCall_1_0()); 
	    }
		lv_condition_1_0=ruleBooleanExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelCaseRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_1_0, 
        		"BooleanExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRelCaseAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRelCaseAccess().getRelationRelationParserRuleCall_3_0()); 
	    }
		lv_relation_3_0=ruleRelation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelCaseRule());
	        }
       		add(
       			$current, 
       			"relation",
        		lv_relation_3_0, 
        		"Relation");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleUserRelationDefinition_Impl
entryRuleUserRelationDefinition_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUserRelationDefinition_ImplRule()); }
	 iv_ruleUserRelationDefinition_Impl=ruleUserRelationDefinition_Impl 
	 { $current=$iv_ruleUserRelationDefinition_Impl.current; } 
	 EOF 
;

// Rule UserRelationDefinition_Impl
ruleUserRelationDefinition_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RelationDefinition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUserRelationDefinition_ImplAccess().getRelationDefinitionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getUserRelationDefinition_ImplAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUserRelationDefinition_ImplRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUserRelationDefinition_ImplAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUserRelationDefinition_ImplRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getUserRelationDefinition_ImplAccess().getDeclarationRelationDeclarationCrossReference_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUserRelationDefinition_ImplAccess().getRightSquareBracketKeyword_4());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getUserRelationDefinition_ImplAccess().getLeftCurlyBracketKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getUserRelationDefinition_ImplAccess().getConcreteEntitiesConcreteEntityParserRuleCall_6_0_0()); 
	    }
		lv_concreteEntities_6_0=ruleConcreteEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserRelationDefinition_ImplRule());
	        }
       		add(
       			$current, 
       			"concreteEntities",
        		lv_concreteEntities_6_0, 
        		"ConcreteEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getUserRelationDefinition_ImplAccess().getClassicalExpressionsClassicalExpression0ParserRuleCall_6_1_0()); 
	    }
		lv_classicalExpressions_7_0=ruleClassicalExpression0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserRelationDefinition_ImplRule());
	        }
       		add(
       			$current, 
       			"classicalExpressions",
        		lv_classicalExpressions_7_0, 
        		"ClassicalExpression0");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getUserRelationDefinition_ImplAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleConcreteEntity
entryRuleConcreteEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConcreteEntityRule()); }
	 iv_ruleConcreteEntity=ruleConcreteEntity 
	 { $current=$iv_ruleConcreteEntity.current; } 
	 EOF 
;

// Rule ConcreteEntity
ruleConcreteEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConcreteEntityAccess().getExpressionParserRuleCall_0()); 
    }
    this_Expression_0=ruleExpression
    { 
        $current = $this_Expression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConcreteEntityAccess().getRelationParserRuleCall_1()); 
    }
    this_Relation_1=ruleRelation
    { 
        $current = $this_Relation_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConcreteEntityAccess().getClockParserRuleCall_2()); 
    }
    this_Clock_2=ruleClock
    { 
        $current = $this_Clock_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConcreteEntityAccess().getElementParserRuleCall_3()); 
    }
    this_Element_3=ruleElement
    { 
        $current = $this_Element_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;







// Entry rule entryRuleRealExpression
entryRuleRealExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealExpressionRule()); }
	 iv_ruleRealExpression=ruleRealExpression 
	 { $current=$iv_ruleRealExpression.current; } 
	 EOF 
;

// Rule RealExpression
ruleRealExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getRealExpressionAccess().getRealRefParserRuleCall_0()); 
    }
    this_RealRef_0=ruleRealRef
    { 
        $current = $this_RealRef_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getRealExpressionAccess().getUnaryRealPlusParserRuleCall_1()); 
    }
    this_UnaryRealPlus_1=ruleUnaryRealPlus
    { 
        $current = $this_UnaryRealPlus_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getRealExpressionAccess().getUnaryRealMinusParserRuleCall_2()); 
    }
    this_UnaryRealMinus_2=ruleUnaryRealMinus
    { 
        $current = $this_UnaryRealMinus_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getRealExpressionAccess().getRealPlusParserRuleCall_3()); 
    }
    this_RealPlus_3=ruleRealPlus
    { 
        $current = $this_RealPlus_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getRealExpressionAccess().getRealMinusParserRuleCall_4()); 
    }
    this_RealMinus_4=ruleRealMinus
    { 
        $current = $this_RealMinus_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getRealExpressionAccess().getRealMultiplyParserRuleCall_5()); 
    }
    this_RealMultiply_5=ruleRealMultiply
    { 
        $current = $this_RealMultiply_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getRealExpressionAccess().getRealVariableRefParserRuleCall_6()); 
    }
    this_RealVariableRef_6=ruleRealVariableRef
    { 
        $current = $this_RealVariableRef_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSeqExpression
entryRuleSeqExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSeqExpressionRule()); }
	 iv_ruleSeqExpression=ruleSeqExpression 
	 { $current=$iv_ruleSeqExpression.current; } 
	 EOF 
;

// Rule SeqExpression
ruleSeqExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSeqExpressionAccess().getSeqGetTailParserRuleCall_0()); 
    }
    this_SeqGetTail_0=ruleSeqGetTail
    { 
        $current = $this_SeqGetTail_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSeqExpressionAccess().getSeqDecrParserRuleCall_1()); 
    }
    this_SeqDecr_1=ruleSeqDecr
    { 
        $current = $this_SeqDecr_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSeqExpressionAccess().getSeqSchedParserRuleCall_2()); 
    }
    this_SeqSched_2=ruleSeqSched
    { 
        $current = $this_SeqSched_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSeqExpressionAccess().getNumberSeqRefParserRuleCall_3()); 
    }
    this_NumberSeqRef_3=ruleNumberSeqRef
    { 
        $current = $this_NumberSeqRef_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSeqExpressionAccess().getNumberSeqVariableRefParserRuleCall_4()); 
    }
    this_NumberSeqVariableRef_4=ruleNumberSeqVariableRef
    { 
        $current = $this_NumberSeqVariableRef_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePrimitiveElement
entryRulePrimitiveElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimitiveElementRule()); }
	 iv_rulePrimitiveElement=rulePrimitiveElement 
	 { $current=$iv_rulePrimitiveElement.current; } 
	 EOF 
;

// Rule PrimitiveElement
rulePrimitiveElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPrimitiveElementAccess().getStringElementParserRuleCall_0()); 
    }
    this_StringElement_0=ruleStringElement
    { 
        $current = $this_StringElement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPrimitiveElementAccess().getBooleanElementParserRuleCall_1()); 
    }
    this_BooleanElement_1=ruleBooleanElement
    { 
        $current = $this_BooleanElement_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPrimitiveElementAccess().getIntegerElementParserRuleCall_2()); 
    }
    this_IntegerElement_2=ruleIntegerElement
    { 
        $current = $this_IntegerElement_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPrimitiveElementAccess().getIntegerVariableRefParserRuleCall_3()); 
    }
    this_IntegerVariableRef_3=ruleIntegerVariableRef
    { 
        $current = $this_IntegerVariableRef_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPrimitiveElementAccess().getRealElementParserRuleCall_4()); 
    }
    this_RealElement_4=ruleRealElement
    { 
        $current = $this_RealElement_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;







// Entry rule entryRulekernelExpressionDecl
entryRulekernelExpressionDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKernelExpressionDeclRule()); }
	 iv_rulekernelExpressionDecl=rulekernelExpressionDecl 
	 { $current=$iv_rulekernelExpressionDecl.current; } 
	 EOF 
;

// Rule kernelExpressionDecl
rulekernelExpressionDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getKernelExpressionDeclAccess().getDeathParserRuleCall_0()); 
    }
    this_Death_0=ruleDeath
    { 
        $current = $this_Death_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getKernelExpressionDeclAccess().getUpToParserRuleCall_1()); 
    }
    this_UpTo_1=ruleUpTo
    { 
        $current = $this_UpTo_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getKernelExpressionDeclAccess().getUnionParserRuleCall_2()); 
    }
    this_Union_2=ruleUnion
    { 
        $current = $this_Union_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getKernelExpressionDeclAccess().getIntersectionParserRuleCall_3()); 
    }
    this_Intersection_3=ruleIntersection
    { 
        $current = $this_Intersection_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getKernelExpressionDeclAccess().getInfParserRuleCall_4()); 
    }
    this_Inf_4=ruleInf
    { 
        $current = $this_Inf_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getKernelExpressionDeclAccess().getSupParserRuleCall_5()); 
    }
    this_Sup_5=ruleSup
    { 
        $current = $this_Sup_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getKernelExpressionDeclAccess().getConcatenationParserRuleCall_6()); 
    }
    this_Concatenation_6=ruleConcatenation
    { 
        $current = $this_Concatenation_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getKernelExpressionDeclAccess().getStrictSamplingParserRuleCall_7()); 
    }
    this_StrictSampling_7=ruleStrictSampling
    { 
        $current = $this_StrictSampling_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getKernelExpressionDeclAccess().getNonStrictSamplingParserRuleCall_8()); 
    }
    this_NonStrictSampling_8=ruleNonStrictSampling
    { 
        $current = $this_NonStrictSampling_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getKernelExpressionDeclAccess().getDeferParserRuleCall_9()); 
    }
    this_Defer_9=ruleDefer
    { 
        $current = $this_Defer_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getKernelExpressionDeclAccess().getDiscretizationParserRuleCall_10()); 
    }
    this_Discretization_10=ruleDiscretization
    { 
        $current = $this_Discretization_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getKernelExpressionDeclAccess().getWaitParserRuleCall_11()); 
    }
    this_Wait_11=ruleWait
    { 
        $current = $this_Wait_11.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulekernelRelationDecl
entryRulekernelRelationDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKernelRelationDeclRule()); }
	 iv_rulekernelRelationDecl=rulekernelRelationDecl 
	 { $current=$iv_rulekernelRelationDecl.current; } 
	 EOF 
;

// Rule kernelRelationDecl
rulekernelRelationDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getKernelRelationDeclAccess().getPrecedenceParserRuleCall_0()); 
    }
    this_Precedence_0=rulePrecedence
    { 
        $current = $this_Precedence_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getKernelRelationDeclAccess().getNonStrictPrecedenceParserRuleCall_1()); 
    }
    this_NonStrictPrecedence_1=ruleNonStrictPrecedence
    { 
        $current = $this_NonStrictPrecedence_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getKernelRelationDeclAccess().getCoincidenceParserRuleCall_2()); 
    }
    this_Coincidence_2=ruleCoincidence
    { 
        $current = $this_Coincidence_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getKernelRelationDeclAccess().getSubClockParserRuleCall_3()); 
    }
    this_SubClock_3=ruleSubClock
    { 
        $current = $this_SubClock_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getKernelRelationDeclAccess().getExclusionParserRuleCall_4()); 
    }
    this_Exclusion_4=ruleExclusion
    { 
        $current = $this_Exclusion_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleString0
entryRuleString0 returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getString0Rule()); } 
	 iv_ruleString0=ruleString0 
	 { $current=$iv_ruleString0.current.getText(); }  
	 EOF 
;

// Rule String0
ruleString0 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='String' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getString0Access().getStringKeyword_0_0()); 
    }
    this_STRING_1=RULE_STRING    {
		$current.merge(this_STRING_1);
    }

    { 
    newLeafNode(this_STRING_1, grammarAccess.getString0Access().getSTRINGTerminalRuleCall_0_1()); 
    }
)
    |    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getString0Access().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleAbstractEntity
entryRuleAbstractEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractEntityRule()); }
	 iv_ruleAbstractEntity=ruleAbstractEntity 
	 { $current=$iv_ruleAbstractEntity.current; } 
	 EOF 
;

// Rule AbstractEntity
ruleAbstractEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getAbstractEntityAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAbstractEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAbstractEntityAccess().getColonKeyword_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAbstractEntityRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAbstractEntityAccess().getTypeTypeCrossReference_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAbstractEntityAccess().getDesiredEventKindEventKindEnumRuleCall_3_0()); 
	    }
		lv_desiredEventKind_3_0=ruleEventKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractEntityRule());
	        }
       		set(
       			$current, 
       			"desiredEventKind",
        		lv_desiredEventKind_3_0, 
        		"EventKind");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleBoolean0
entryRuleBoolean0 returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoolean0Rule()); } 
	 iv_ruleBoolean0=ruleBoolean0 
	 { $current=$iv_ruleBoolean0.current.getText(); }  
	 EOF 
;

// Rule Boolean0
ruleBoolean0 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='True' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBoolean0Access().getTrueKeyword_0()); 
    }

    |
	kw='False' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBoolean0Access().getFalseKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleRealRef
entryRuleRealRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealRefRule()); }
	 iv_ruleRealRef=ruleRealRef 
	 { $current=$iv_ruleRealRef.current; } 
	 EOF 
;

// Rule RealRef
ruleRealRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RealRef' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRealRefAccess().getRealRefKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRealRefAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRealRefAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getRealRefAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRealRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='realElem' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRealRefAccess().getRealElemKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRealRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRealRefAccess().getRealElemRealElementCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRealRefAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleUnaryRealPlus
entryRuleUnaryRealPlus returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnaryRealPlusRule()); }
	 iv_ruleUnaryRealPlus=ruleUnaryRealPlus 
	 { $current=$iv_ruleUnaryRealPlus.current; } 
	 EOF 
;

// Rule UnaryRealPlus
ruleUnaryRealPlus returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='UnaryRealPlus' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUnaryRealPlusAccess().getUnaryRealPlusKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUnaryRealPlusAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUnaryRealPlusAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getUnaryRealPlusAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryRealPlusRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='value' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUnaryRealPlusAccess().getValueKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryRealPlusRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getUnaryRealPlusAccess().getValueRealElementCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='operand' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUnaryRealPlusAccess().getOperandKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryRealPlusAccess().getOperandRealExpressionParserRuleCall_6_0()); 
	    }
		lv_operand_7_0=ruleRealExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryRealPlusRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_7_0, 
        		"RealExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getUnaryRealPlusAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleUnaryRealMinus
entryRuleUnaryRealMinus returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnaryRealMinusRule()); }
	 iv_ruleUnaryRealMinus=ruleUnaryRealMinus 
	 { $current=$iv_ruleUnaryRealMinus.current; } 
	 EOF 
;

// Rule UnaryRealMinus
ruleUnaryRealMinus returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='UnaryRealMinus' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUnaryRealMinusAccess().getUnaryRealMinusKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUnaryRealMinusAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUnaryRealMinusAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getUnaryRealMinusAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryRealMinusRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='value' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUnaryRealMinusAccess().getValueKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryRealMinusRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getUnaryRealMinusAccess().getValueRealElementCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='operand' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUnaryRealMinusAccess().getOperandKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryRealMinusAccess().getOperandRealExpressionParserRuleCall_6_0()); 
	    }
		lv_operand_7_0=ruleRealExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryRealMinusRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_7_0, 
        		"RealExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getUnaryRealMinusAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleRealPlus
entryRuleRealPlus returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealPlusRule()); }
	 iv_ruleRealPlus=ruleRealPlus 
	 { $current=$iv_ruleRealPlus.current; } 
	 EOF 
;

// Rule RealPlus
ruleRealPlus returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RealPlus' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRealPlusAccess().getRealPlusKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRealPlusAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRealPlusAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getRealPlusAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRealPlusRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='leftValue' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRealPlusAccess().getLeftValueKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRealPlusAccess().getLeftValueRealExpressionParserRuleCall_4_0()); 
	    }
		lv_leftValue_5_0=ruleRealExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealPlusRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_5_0, 
        		"RealExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='rightValue' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRealPlusAccess().getRightValueKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRealPlusAccess().getRightValueRealExpressionParserRuleCall_6_0()); 
	    }
		lv_rightValue_7_0=ruleRealExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealPlusRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_7_0, 
        		"RealExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRealPlusAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleRealMinus
entryRuleRealMinus returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealMinusRule()); }
	 iv_ruleRealMinus=ruleRealMinus 
	 { $current=$iv_ruleRealMinus.current; } 
	 EOF 
;

// Rule RealMinus
ruleRealMinus returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RealMinus' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRealMinusAccess().getRealMinusKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRealMinusAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRealMinusAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getRealMinusAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRealMinusRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='leftValue' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRealMinusAccess().getLeftValueKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRealMinusAccess().getLeftValueRealExpressionParserRuleCall_4_0()); 
	    }
		lv_leftValue_5_0=ruleRealExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealMinusRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_5_0, 
        		"RealExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='rightValue' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRealMinusAccess().getRightValueKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRealMinusAccess().getRightValueRealExpressionParserRuleCall_6_0()); 
	    }
		lv_rightValue_7_0=ruleRealExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealMinusRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_7_0, 
        		"RealExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRealMinusAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleRealMultiply
entryRuleRealMultiply returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealMultiplyRule()); }
	 iv_ruleRealMultiply=ruleRealMultiply 
	 { $current=$iv_ruleRealMultiply.current; } 
	 EOF 
;

// Rule RealMultiply
ruleRealMultiply returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RealMultiply' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRealMultiplyAccess().getRealMultiplyKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRealMultiplyAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRealMultiplyAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getRealMultiplyAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRealMultiplyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='leftValue' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRealMultiplyAccess().getLeftValueKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRealMultiplyAccess().getLeftValueRealExpressionParserRuleCall_4_0()); 
	    }
		lv_leftValue_5_0=ruleRealExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealMultiplyRule());
	        }
       		set(
       			$current, 
       			"leftValue",
        		lv_leftValue_5_0, 
        		"RealExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='rightValue' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRealMultiplyAccess().getRightValueKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRealMultiplyAccess().getRightValueRealExpressionParserRuleCall_6_0()); 
	    }
		lv_rightValue_7_0=ruleRealExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealMultiplyRule());
	        }
       		set(
       			$current, 
       			"rightValue",
        		lv_rightValue_7_0, 
        		"RealExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRealMultiplyAccess().getRightCurlyBracketKeyword_7());
    }
)
;











// Entry rule entryRuleBooleanVariableRef
entryRuleBooleanVariableRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanVariableRefRule()); }
	 iv_ruleBooleanVariableRef=ruleBooleanVariableRef 
	 { $current=$iv_ruleBooleanVariableRef.current; } 
	 EOF 
;

// Rule BooleanVariableRef
ruleBooleanVariableRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='BooleanVariableRef' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBooleanVariableRefAccess().getBooleanVariableRefKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getBooleanVariableRefAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanVariableRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)?	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBooleanVariableRefAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanVariableRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getBooleanVariableRefAccess().getReferencedVarAbstractEntityCrossReference_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBooleanVariableRefAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleRealVariableRef
entryRuleRealVariableRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealVariableRefRule()); }
	 iv_ruleRealVariableRef=ruleRealVariableRef 
	 { $current=$iv_ruleRealVariableRef.current; } 
	 EOF 
;

// Rule RealVariableRef
ruleRealVariableRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RealVariableRef' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRealVariableRefAccess().getRealVariableRefKeyword_0());
    }
(	otherlv_1='name' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRealVariableRefAccess().getNameKeyword_1_0());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getRealVariableRefAccess().getNameIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRealVariableRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))?	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRealVariableRefAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRealVariableRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRealVariableRefAccess().getReferencedVarAbstractEntityCrossReference_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRealVariableRefAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleNumberSeqRef
entryRuleNumberSeqRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberSeqRefRule()); }
	 iv_ruleNumberSeqRef=ruleNumberSeqRef 
	 { $current=$iv_ruleNumberSeqRef.current; } 
	 EOF 
;

// Rule NumberSeqRef
ruleNumberSeqRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SeqRef' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNumberSeqRefAccess().getSeqRefKeyword_0());
    }
(	otherlv_1='name' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNumberSeqRefAccess().getNameKeyword_1_0());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getNumberSeqRefAccess().getNameIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumberSeqRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))?	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getNumberSeqRefAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumberSeqRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getNumberSeqRefAccess().getReferencedNumberSeqSequenceElementCrossReference_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getNumberSeqRefAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleNumberSeqVariableRef
entryRuleNumberSeqVariableRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberSeqVariableRefRule()); }
	 iv_ruleNumberSeqVariableRef=ruleNumberSeqVariableRef 
	 { $current=$iv_ruleNumberSeqVariableRef.current; } 
	 EOF 
;

// Rule NumberSeqVariableRef
ruleNumberSeqVariableRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SeqVarRef' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNumberSeqVariableRefAccess().getSeqVarRefKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getNumberSeqVariableRefAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumberSeqVariableRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)?	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNumberSeqVariableRefAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumberSeqVariableRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getNumberSeqVariableRefAccess().getReferencedVarAbstractEntityCrossReference_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getNumberSeqVariableRefAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleRealElement
entryRuleRealElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealElementRule()); }
	 iv_ruleRealElement=ruleRealElement 
	 { $current=$iv_ruleRealElement.current; } 
	 EOF 
;

// Rule RealElement
ruleRealElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Real' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRealElementAccess().getRealKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRealElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRealElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRealElementAccess().getColonKeyword_2_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRealElementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRealElementAccess().getTypeTypeCrossReference_2_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRealElementAccess().getEqualsSignKeyword_3());
    }
(
(
		lv_value_5_0=RULE_REAL0
		{
			newLeafNode(lv_value_5_0, grammarAccess.getRealElementAccess().getValueReal0TerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRealElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"Real0");
	    }

)
))
;





// Entry rule entryRuleIntegerElement
entryRuleIntegerElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerElementRule()); }
	 iv_ruleIntegerElement=ruleIntegerElement 
	 { $current=$iv_ruleIntegerElement.current; } 
	 EOF 
;

// Rule IntegerElement
ruleIntegerElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='Integer' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntegerElementAccess().getIntegerKeyword_0_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getIntegerElementAccess().getNameIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIntegerElementAccess().getColonKeyword_0_2_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerElementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIntegerElementAccess().getTypeTypeCrossReference_0_2_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIntegerElementAccess().getEqualsSignKeyword_0_3());
    }
(
(
		lv_value_5_0=RULE_INT
		{
			newLeafNode(lv_value_5_0, grammarAccess.getIntegerElementAccess().getValueINTTerminalRuleCall_0_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"INT");
	    }

)
))
    |((
(
		lv_name_6_0=RULE_ID
		{
			newLeafNode(lv_name_6_0, grammarAccess.getIntegerElementAccess().getNameIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"ID");
	    }

)
)	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIntegerElementAccess().getEqualsSignKeyword_1_1());
    }
(
(
		lv_value_8_0=RULE_INT
		{
			newLeafNode(lv_value_8_0, grammarAccess.getIntegerElementAccess().getValueINTTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_8_0, 
        		"INT");
	    }

)
))
    |(
(
		lv_value_9_0=RULE_INT
		{
			newLeafNode(lv_value_9_0, grammarAccess.getIntegerElementAccess().getValueINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_9_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleBooleanElement
entryRuleBooleanElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanElementRule()); }
	 iv_ruleBooleanElement=ruleBooleanElement 
	 { $current=$iv_ruleBooleanElement.current; } 
	 EOF 
;

// Rule BooleanElement
ruleBooleanElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='BooleanElement' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBooleanElementAccess().getBooleanElementKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getBooleanElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)((	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBooleanElementAccess().getColonKeyword_2_0_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanElementRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getBooleanElementAccess().getTypeTypeCrossReference_2_0_1_0()); 
	}

)
))
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBooleanElementAccess().getEStringParserRuleCall_2_1()); 
    }
ruleEString
    { 
        afterParserOrEnumRuleCall();
    }
)?	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBooleanElementAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanElementAccess().getValueBoolean0ParserRuleCall_4_0()); 
	    }
		lv_value_6_0=ruleBoolean0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanElementRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_6_0, 
        		"Boolean0");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSequenceElement
entryRuleSequenceElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSequenceElementRule()); }
	 iv_ruleSequenceElement=ruleSequenceElement 
	 { $current=$iv_ruleSequenceElement.current; } 
	 EOF 
;

// Rule SequenceElement
ruleSequenceElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSequenceElementAccess().getSequenceElementAction_0(),
            $current);
    }
)	otherlv_1='Sequence' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSequenceElementAccess().getSequenceKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getSequenceElementAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSequenceElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)?(	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSequenceElementAccess().getColonKeyword_3_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSequenceElementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSequenceElementAccess().getTypeTypeCrossReference_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSequenceElementAccess().getEqualsSignKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceElementAccess().getFinitePartPrimitiveElementParserRuleCall_5_0_0()); 
	    }
		lv_finitePart_6_0=rulePrimitiveElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceElementRule());
	        }
       		add(
       			$current, 
       			"finitePart",
        		lv_finitePart_6_0, 
        		"PrimitiveElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSequenceElementAccess().getSemicolonKeyword_5_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceElementAccess().getFinitePartPrimitiveElementParserRuleCall_5_1_1_0()); 
	    }
		lv_finitePart_8_0=rulePrimitiveElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceElementRule());
	        }
       		add(
       			$current, 
       			"finitePart",
        		lv_finitePart_8_0, 
        		"PrimitiveElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSequenceElementAccess().getSemicolonKeyword_5_2());
    }
)?)?(	otherlv_10='(' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSequenceElementAccess().getLeftParenthesisKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceElementAccess().getNonFinitePartPrimitiveElementParserRuleCall_6_1_0()); 
	    }
		lv_nonFinitePart_11_0=rulePrimitiveElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceElementRule());
	        }
       		add(
       			$current, 
       			"nonFinitePart",
        		lv_nonFinitePart_11_0, 
        		"PrimitiveElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=';' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSequenceElementAccess().getSemicolonKeyword_6_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceElementAccess().getNonFinitePartPrimitiveElementParserRuleCall_6_2_1_0()); 
	    }
		lv_nonFinitePart_13_0=rulePrimitiveElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceElementRule());
	        }
       		add(
       			$current, 
       			"nonFinitePart",
        		lv_nonFinitePart_13_0, 
        		"PrimitiveElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14=')' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getSequenceElementAccess().getRightParenthesisKeyword_6_3());
    }
)?)
;





// Entry rule entryRuleStringElement
entryRuleStringElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringElementRule()); }
	 iv_ruleStringElement=ruleStringElement 
	 { $current=$iv_ruleStringElement.current; } 
	 EOF 
;

// Rule StringElement
ruleStringElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='String' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStringElementAccess().getStringKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStringElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStringElementAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringElementAccess().getValueString0ParserRuleCall_3_0()); 
	    }
		lv_value_3_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringElementRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRecordElement
entryRuleRecordElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRecordElementRule()); }
	 iv_ruleRecordElement=ruleRecordElement 
	 { $current=$iv_ruleRecordElement.current; } 
	 EOF 
;

// Rule RecordElement
ruleRecordElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RecordElement' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRecordElementAccess().getRecordElementKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRecordElementAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRecordElementAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getRecordElementAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRecordElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?(	otherlv_4='type' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRecordElementAccess().getTypeKeyword_3_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRecordElementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRecordElementAccess().getTypeTypeCrossReference_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='box' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRecordElementAccess().getBoxKeyword_4());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRecordElementAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRecordElementAccess().getBoxBoxParserRuleCall_6_0()); 
	    }
		lv_box_8_0=ruleBox		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRecordElementRule());
	        }
       		add(
       			$current, 
       			"box",
        		lv_box_8_0, 
        		"Box");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRecordElementAccess().getCommaKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRecordElementAccess().getBoxBoxParserRuleCall_7_1_0()); 
	    }
		lv_box_10_0=ruleBox		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRecordElementRule());
	        }
       		add(
       			$current, 
       			"box",
        		lv_box_10_0, 
        		"Box");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getRecordElementAccess().getRightCurlyBracketKeyword_8());
    }
	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getRecordElementAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleBox
entryRuleBox returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoxRule()); }
	 iv_ruleBox=ruleBox 
	 { $current=$iv_ruleBox.current; } 
	 EOF 
;

// Rule Box
ruleBox returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Box' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBoxAccess().getBoxKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBoxAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='containment' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBoxAccess().getContainmentKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoxAccess().getContainmentElementParserRuleCall_3_0()); 
	    }
		lv_containment_3_0=ruleElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoxRule());
	        }
       		set(
       			$current, 
       			"containment",
        		lv_containment_3_0, 
        		"Element");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBoxAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleString1
entryRuleString1 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getString1Rule()); }
	 iv_ruleString1=ruleString1 
	 { $current=$iv_ruleString1.current; } 
	 EOF 
;

// Rule String1
ruleString1 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='StringType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getString1Access().getStringTypeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getString1Access().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getString1Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleBoolean
entryRuleBoolean returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanRule()); }
	 iv_ruleBoolean=ruleBoolean 
	 { $current=$iv_ruleBoolean.current; } 
	 EOF 
;

// Rule Boolean
ruleBoolean returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='BooleanType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBooleanAccess().getBooleanTypeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getBooleanAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleInteger
entryRuleInteger returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerRule()); }
	 iv_ruleInteger=ruleInteger 
	 { $current=$iv_ruleInteger.current; } 
	 EOF 
;

// Rule Integer
ruleInteger returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='IntegerType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntegerAccess().getIntegerTypeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getIntegerAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleReal
entryRuleReal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealRule()); }
	 iv_ruleReal=ruleReal 
	 { $current=$iv_ruleReal.current; } 
	 EOF 
;

// Rule Real
ruleReal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RealType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRealAccess().getRealTypeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRealAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRealRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleChar
entryRuleChar returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCharRule()); }
	 iv_ruleChar=ruleChar 
	 { $current=$iv_ruleChar.current; } 
	 EOF 
;

// Rule Char
ruleChar returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='CharType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCharAccess().getCharTypeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCharAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCharRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleRecord
entryRuleRecord returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRecordRule()); }
	 iv_ruleRecord=ruleRecord 
	 { $current=$iv_ruleRecord.current; } 
	 EOF 
;

// Rule Record
ruleRecord returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RecordType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRecordAccess().getRecordTypeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRecordAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRecordRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRecordAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRecordAccess().getFieldFieldParserRuleCall_3_0()); 
	    }
		lv_field_3_0=ruleField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRecordRule());
	        }
       		add(
       			$current, 
       			"field",
        		lv_field_3_0, 
        		"Field");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRecordAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRecordAccess().getFieldFieldParserRuleCall_4_1_0()); 
	    }
		lv_field_5_0=ruleField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRecordRule());
	        }
       		add(
       			$current, 
       			"field",
        		lv_field_5_0, 
        		"Field");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRecordAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSequenceType
entryRuleSequenceType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSequenceTypeRule()); }
	 iv_ruleSequenceType=ruleSequenceType 
	 { $current=$iv_ruleSequenceType.current; } 
	 EOF 
;

// Rule SequenceType
ruleSequenceType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SequenceType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSequenceTypeAccess().getSequenceTypeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSequenceTypeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSequenceTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSequenceTypeAccess().getColonKeyword_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSequenceTypeRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getSequenceTypeAccess().getElementTypePrimitiveTypeCrossReference_3_0()); 
	}

)
))
;





// Entry rule entryRuleDiscreteClockType_Impl
entryRuleDiscreteClockType_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDiscreteClockType_ImplRule()); }
	 iv_ruleDiscreteClockType_Impl=ruleDiscreteClockType_Impl 
	 { $current=$iv_ruleDiscreteClockType_Impl.current; } 
	 EOF 
;

// Rule DiscreteClockType_Impl
ruleDiscreteClockType_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='DiscreteClockType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDiscreteClockType_ImplAccess().getDiscreteClockTypeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDiscreteClockType_ImplAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDiscreteClockType_ImplRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleDenseClockType
entryRuleDenseClockType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDenseClockTypeRule()); }
	 iv_ruleDenseClockType=ruleDenseClockType 
	 { $current=$iv_ruleDenseClockType.current; } 
	 EOF 
;

// Rule DenseClockType
ruleDenseClockType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='DenseClockType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDenseClockTypeAccess().getDenseClockTypeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDenseClockTypeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDenseClockTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDenseClockTypeAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='baseUnit' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDenseClockTypeAccess().getBaseUnitKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDenseClockTypeAccess().getBaseUnitString0ParserRuleCall_3_1_0()); 
	    }
		lv_baseUnit_4_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDenseClockTypeRule());
	        }
       		set(
       			$current, 
       			"baseUnit",
        		lv_baseUnit_4_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='physicalMagnitude' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDenseClockTypeAccess().getPhysicalMagnitudeKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDenseClockTypeAccess().getPhysicalMagnitudeString0ParserRuleCall_4_1_0()); 
	    }
		lv_physicalMagnitude_6_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDenseClockTypeRule());
	        }
       		set(
       			$current, 
       			"physicalMagnitude",
        		lv_physicalMagnitude_6_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDenseClockTypeAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleEnumerationType
entryRuleEnumerationType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumerationTypeRule()); }
	 iv_ruleEnumerationType=ruleEnumerationType 
	 { $current=$iv_ruleEnumerationType.current; } 
	 EOF 
;

// Rule EnumerationType
ruleEnumerationType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='EnumerationType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnumerationTypeAccess().getEnumerationTypeKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumerationTypeAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumerationTypeAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getEnumerationTypeAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumerationTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='enumLiteral' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnumerationTypeAccess().getEnumLiteralKeyword_3());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEnumerationTypeAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumerationTypeAccess().getEnumLiteralString0ParserRuleCall_5_0()); 
	    }
		lv_enumLiteral_6_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumerationTypeRule());
	        }
       		add(
       			$current, 
       			"enumLiteral",
        		lv_enumLiteral_6_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEnumerationTypeAccess().getCommaKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumerationTypeAccess().getEnumLiteralString0ParserRuleCall_6_1_0()); 
	    }
		lv_enumLiteral_8_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumerationTypeRule());
	        }
       		add(
       			$current, 
       			"enumLiteral",
        		lv_enumLiteral_8_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getEnumerationTypeAccess().getRightCurlyBracketKeyword_7());
    }
	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getEnumerationTypeAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleField
entryRuleField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	 iv_ruleField=ruleField 
	 { $current=$iv_ruleField.current; } 
	 EOF 
;

// Rule Field
ruleField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Field' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFieldAccess().getFieldKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFieldAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFieldAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='type' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFieldAccess().getTypeKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getFieldAccess().getTypeTypeCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFieldAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleSubClock
entryRuleSubClock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubClockRule()); }
	 iv_ruleSubClock=ruleSubClock 
	 { $current=$iv_ruleSubClock.current; } 
	 EOF 
;

// Rule SubClock
ruleSubClock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='_SubClock' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubClockAccess().get_SubClockKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSubClockAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubClockAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getSubClockAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubClockRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='rightEntity' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSubClockAccess().getRightEntityKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubClockAccess().getRightEntityAbstractEntityParserRuleCall_4_0()); 
	    }
		lv_rightEntity_5_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubClockRule());
	        }
       		set(
       			$current, 
       			"rightEntity",
        		lv_rightEntity_5_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='leftEntity' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSubClockAccess().getLeftEntityKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubClockAccess().getLeftEntityAbstractEntityParserRuleCall_6_0()); 
	    }
		lv_leftEntity_7_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubClockRule());
	        }
       		set(
       			$current, 
       			"leftEntity",
        		lv_leftEntity_7_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSubClockAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleCoincidence
entryRuleCoincidence returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCoincidenceRule()); }
	 iv_ruleCoincidence=ruleCoincidence 
	 { $current=$iv_ruleCoincidence.current; } 
	 EOF 
;

// Rule Coincidence
ruleCoincidence returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='_Coincidence' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCoincidenceAccess().get_CoincidenceKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCoincidenceAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCoincidenceAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getCoincidenceAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCoincidenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='rightEntity' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCoincidenceAccess().getRightEntityKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCoincidenceAccess().getRightEntityAbstractEntityParserRuleCall_4_0()); 
	    }
		lv_rightEntity_5_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCoincidenceRule());
	        }
       		set(
       			$current, 
       			"rightEntity",
        		lv_rightEntity_5_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='leftEntity' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCoincidenceAccess().getLeftEntityKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCoincidenceAccess().getLeftEntityAbstractEntityParserRuleCall_6_0()); 
	    }
		lv_leftEntity_7_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCoincidenceRule());
	        }
       		set(
       			$current, 
       			"leftEntity",
        		lv_leftEntity_7_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCoincidenceAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleExclusion
entryRuleExclusion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExclusionRule()); }
	 iv_ruleExclusion=ruleExclusion 
	 { $current=$iv_ruleExclusion.current; } 
	 EOF 
;

// Rule Exclusion
ruleExclusion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='_Exclusion' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExclusionAccess().get_ExclusionKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExclusionAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExclusionAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getExclusionAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExclusionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='rightEntity' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExclusionAccess().getRightEntityKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExclusionAccess().getRightEntityAbstractEntityParserRuleCall_4_0()); 
	    }
		lv_rightEntity_5_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExclusionRule());
	        }
       		set(
       			$current, 
       			"rightEntity",
        		lv_rightEntity_5_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='leftEntity' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExclusionAccess().getLeftEntityKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExclusionAccess().getLeftEntityAbstractEntityParserRuleCall_6_0()); 
	    }
		lv_leftEntity_7_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExclusionRule());
	        }
       		set(
       			$current, 
       			"leftEntity",
        		lv_leftEntity_7_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getExclusionAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRulePrecedence
entryRulePrecedence returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrecedenceRule()); }
	 iv_rulePrecedence=rulePrecedence 
	 { $current=$iv_rulePrecedence.current; } 
	 EOF 
;

// Rule Precedence
rulePrecedence returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='_Precedence' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrecedenceAccess().get_PrecedenceKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPrecedenceAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPrecedenceAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getPrecedenceAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='rightEntity' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPrecedenceAccess().getRightEntityKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrecedenceAccess().getRightEntityAbstractEntityParserRuleCall_4_0()); 
	    }
		lv_rightEntity_5_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrecedenceRule());
	        }
       		set(
       			$current, 
       			"rightEntity",
        		lv_rightEntity_5_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='leftEntity' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPrecedenceAccess().getLeftEntityKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrecedenceAccess().getLeftEntityAbstractEntityParserRuleCall_6_0()); 
	    }
		lv_leftEntity_7_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrecedenceRule());
	        }
       		set(
       			$current, 
       			"leftEntity",
        		lv_leftEntity_7_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPrecedenceAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleNonStrictPrecedence
entryRuleNonStrictPrecedence returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNonStrictPrecedenceRule()); }
	 iv_ruleNonStrictPrecedence=ruleNonStrictPrecedence 
	 { $current=$iv_ruleNonStrictPrecedence.current; } 
	 EOF 
;

// Rule NonStrictPrecedence
ruleNonStrictPrecedence returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='_NonStrictPrecedence' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNonStrictPrecedenceAccess().get_NonStrictPrecedenceKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNonStrictPrecedenceAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNonStrictPrecedenceAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getNonStrictPrecedenceAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNonStrictPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='rightEntity' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getNonStrictPrecedenceAccess().getRightEntityKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNonStrictPrecedenceAccess().getRightEntityAbstractEntityParserRuleCall_4_0()); 
	    }
		lv_rightEntity_5_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonStrictPrecedenceRule());
	        }
       		set(
       			$current, 
       			"rightEntity",
        		lv_rightEntity_5_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='leftEntity' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getNonStrictPrecedenceAccess().getLeftEntityKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNonStrictPrecedenceAccess().getLeftEntityAbstractEntityParserRuleCall_6_0()); 
	    }
		lv_leftEntity_7_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonStrictPrecedenceRule());
	        }
       		set(
       			$current, 
       			"leftEntity",
        		lv_leftEntity_7_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getNonStrictPrecedenceAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleUpTo
entryRuleUpTo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUpToRule()); }
	 iv_ruleUpTo=ruleUpTo 
	 { $current=$iv_ruleUpTo.current; } 
	 EOF 
;

// Rule UpTo
ruleUpTo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='_UpTo' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUpToAccess().get_UpToKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUpToAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUpToAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getUpToAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUpToRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='returnType' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUpToAccess().getReturnTypeKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUpToRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getUpToAccess().getReturnTypeTypeCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='clockToFollow' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUpToAccess().getClockToFollowKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUpToAccess().getClockToFollowAbstractEntityParserRuleCall_6_0()); 
	    }
		lv_clockToFollow_7_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUpToRule());
	        }
       		set(
       			$current, 
       			"clockToFollow",
        		lv_clockToFollow_7_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='killerClock' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getUpToAccess().getKillerClockKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUpToAccess().getKillerClockAbstractEntityParserRuleCall_8_0()); 
	    }
		lv_killerClock_9_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUpToRule());
	        }
       		set(
       			$current, 
       			"killerClock",
        		lv_killerClock_9_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='isPreemptive' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getUpToAccess().getIsPreemptiveKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUpToAccess().getIsPreemptiveBoolean0ParserRuleCall_10_0()); 
	    }
		lv_isPreemptive_11_0=ruleBoolean0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUpToRule());
	        }
       		set(
       			$current, 
       			"isPreemptive",
        		lv_isPreemptive_11_0, 
        		"Boolean0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getUpToAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleDefer
entryRuleDefer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeferRule()); }
	 iv_ruleDefer=ruleDefer 
	 { $current=$iv_ruleDefer.current; } 
	 EOF 
;

// Rule Defer
ruleDefer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='_Defer' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDeferAccess().get_DeferKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeferAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeferAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getDeferAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeferRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='returnType' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDeferAccess().getReturnTypeKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeferRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDeferAccess().getReturnTypeTypeCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='baseClock' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDeferAccess().getBaseClockKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeferAccess().getBaseClockAbstractEntityParserRuleCall_6_0()); 
	    }
		lv_baseClock_7_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeferRule());
	        }
       		set(
       			$current, 
       			"baseClock",
        		lv_baseClock_7_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='delayClock' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDeferAccess().getDelayClockKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeferAccess().getDelayClockAbstractEntityParserRuleCall_8_0()); 
	    }
		lv_delayClock_9_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeferRule());
	        }
       		set(
       			$current, 
       			"delayClock",
        		lv_delayClock_9_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='delayPattern' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDeferAccess().getDelayPatternKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeferAccess().getDelayPatternAbstractEntityParserRuleCall_10_0()); 
	    }
		lv_delayPattern_11_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeferRule());
	        }
       		set(
       			$current, 
       			"delayPattern",
        		lv_delayPattern_11_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDeferAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleStrictSampling
entryRuleStrictSampling returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStrictSamplingRule()); }
	 iv_ruleStrictSampling=ruleStrictSampling 
	 { $current=$iv_ruleStrictSampling.current; } 
	 EOF 
;

// Rule StrictSampling
ruleStrictSampling returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='_StrictSampling' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStrictSamplingAccess().get_StrictSamplingKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStrictSamplingAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStrictSamplingAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getStrictSamplingAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStrictSamplingRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='returnType' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStrictSamplingAccess().getReturnTypeKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStrictSamplingRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getStrictSamplingAccess().getReturnTypeTypeCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='sampledClock' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStrictSamplingAccess().getSampledClockKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStrictSamplingAccess().getSampledClockAbstractEntityParserRuleCall_6_0()); 
	    }
		lv_sampledClock_7_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStrictSamplingRule());
	        }
       		set(
       			$current, 
       			"sampledClock",
        		lv_sampledClock_7_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='samplingClock' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getStrictSamplingAccess().getSamplingClockKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStrictSamplingAccess().getSamplingClockAbstractEntityParserRuleCall_8_0()); 
	    }
		lv_samplingClock_9_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStrictSamplingRule());
	        }
       		set(
       			$current, 
       			"samplingClock",
        		lv_samplingClock_9_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getStrictSamplingAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleConcatenation
entryRuleConcatenation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConcatenationRule()); }
	 iv_ruleConcatenation=ruleConcatenation 
	 { $current=$iv_ruleConcatenation.current; } 
	 EOF 
;

// Rule Concatenation
ruleConcatenation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='_Concatenation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConcatenationAccess().get_ConcatenationKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConcatenationAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConcatenationAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getConcatenationAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConcatenationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='returnType' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConcatenationAccess().getReturnTypeKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConcatenationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getConcatenationAccess().getReturnTypeTypeCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='leftClock' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getConcatenationAccess().getLeftClockKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConcatenationAccess().getLeftClockAbstractEntityParserRuleCall_6_0()); 
	    }
		lv_leftClock_7_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConcatenationRule());
	        }
       		set(
       			$current, 
       			"leftClock",
        		lv_leftClock_7_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='rightClock' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getConcatenationAccess().getRightClockKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConcatenationAccess().getRightClockAbstractEntityParserRuleCall_8_0()); 
	    }
		lv_rightClock_9_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConcatenationRule());
	        }
       		set(
       			$current, 
       			"rightClock",
        		lv_rightClock_9_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getConcatenationAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleUnion
entryRuleUnion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnionRule()); }
	 iv_ruleUnion=ruleUnion 
	 { $current=$iv_ruleUnion.current; } 
	 EOF 
;

// Rule Union
ruleUnion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='_Union' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUnionAccess().get_UnionKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUnionAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUnionAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getUnionAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='returnType' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUnionAccess().getReturnTypeKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getUnionAccess().getReturnTypeTypeCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='clock1' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUnionAccess().getClock1Keyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnionAccess().getClock1AbstractEntityParserRuleCall_6_0()); 
	    }
		lv_clock1_7_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnionRule());
	        }
       		set(
       			$current, 
       			"clock1",
        		lv_clock1_7_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='clock2' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getUnionAccess().getClock2Keyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnionAccess().getClock2AbstractEntityParserRuleCall_8_0()); 
	    }
		lv_clock2_9_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnionRule());
	        }
       		set(
       			$current, 
       			"clock2",
        		lv_clock2_9_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getUnionAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleIntersection
entryRuleIntersection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntersectionRule()); }
	 iv_ruleIntersection=ruleIntersection 
	 { $current=$iv_ruleIntersection.current; } 
	 EOF 
;

// Rule Intersection
ruleIntersection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='_Intersection' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntersectionAccess().get_IntersectionKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntersectionAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIntersectionAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getIntersectionAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntersectionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='returnType' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIntersectionAccess().getReturnTypeKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntersectionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIntersectionAccess().getReturnTypeTypeCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='clock1' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getIntersectionAccess().getClock1Keyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntersectionAccess().getClock1AbstractEntityParserRuleCall_6_0()); 
	    }
		lv_clock1_7_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntersectionRule());
	        }
       		set(
       			$current, 
       			"clock1",
        		lv_clock1_7_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='clock2' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIntersectionAccess().getClock2Keyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntersectionAccess().getClock2AbstractEntityParserRuleCall_8_0()); 
	    }
		lv_clock2_9_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntersectionRule());
	        }
       		set(
       			$current, 
       			"clock2",
        		lv_clock2_9_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getIntersectionAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleSup
entryRuleSup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSupRule()); }
	 iv_ruleSup=ruleSup 
	 { $current=$iv_ruleSup.current; } 
	 EOF 
;

// Rule Sup
ruleSup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='_Sup' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSupAccess().get_SupKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSupAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSupAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getSupAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSupRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='returnType' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSupAccess().getReturnTypeKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSupRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSupAccess().getReturnTypeTypeCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='clock1' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSupAccess().getClock1Keyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSupAccess().getClock1AbstractEntityParserRuleCall_6_0()); 
	    }
		lv_clock1_7_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSupRule());
	        }
       		set(
       			$current, 
       			"clock1",
        		lv_clock1_7_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='clock2' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSupAccess().getClock2Keyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSupAccess().getClock2AbstractEntityParserRuleCall_8_0()); 
	    }
		lv_clock2_9_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSupRule());
	        }
       		set(
       			$current, 
       			"clock2",
        		lv_clock2_9_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSupAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleInf
entryRuleInf returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInfRule()); }
	 iv_ruleInf=ruleInf 
	 { $current=$iv_ruleInf.current; } 
	 EOF 
;

// Rule Inf
ruleInf returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='_Inf' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInfAccess().get_InfKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInfAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInfAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getInfAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInfRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='returnType' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInfAccess().getReturnTypeKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInfRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInfAccess().getReturnTypeTypeCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='clock1' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInfAccess().getClock1Keyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInfAccess().getClock1AbstractEntityParserRuleCall_6_0()); 
	    }
		lv_clock1_7_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInfRule());
	        }
       		set(
       			$current, 
       			"clock1",
        		lv_clock1_7_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='clock2' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInfAccess().getClock2Keyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInfAccess().getClock2AbstractEntityParserRuleCall_8_0()); 
	    }
		lv_clock2_9_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInfRule());
	        }
       		set(
       			$current, 
       			"clock2",
        		lv_clock2_9_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getInfAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleNonStrictSampling
entryRuleNonStrictSampling returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNonStrictSamplingRule()); }
	 iv_ruleNonStrictSampling=ruleNonStrictSampling 
	 { $current=$iv_ruleNonStrictSampling.current; } 
	 EOF 
;

// Rule NonStrictSampling
ruleNonStrictSampling returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='_NonStrictSampling' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNonStrictSamplingAccess().get_NonStrictSamplingKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNonStrictSamplingAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNonStrictSamplingAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getNonStrictSamplingAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNonStrictSamplingRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='returnType' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getNonStrictSamplingAccess().getReturnTypeKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNonStrictSamplingRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getNonStrictSamplingAccess().getReturnTypeTypeCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='sampledClock' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getNonStrictSamplingAccess().getSampledClockKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNonStrictSamplingAccess().getSampledClockAbstractEntityParserRuleCall_6_0()); 
	    }
		lv_sampledClock_7_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonStrictSamplingRule());
	        }
       		set(
       			$current, 
       			"sampledClock",
        		lv_sampledClock_7_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='samplingClock' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getNonStrictSamplingAccess().getSamplingClockKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNonStrictSamplingAccess().getSamplingClockAbstractEntityParserRuleCall_8_0()); 
	    }
		lv_samplingClock_9_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonStrictSamplingRule());
	        }
       		set(
       			$current, 
       			"samplingClock",
        		lv_samplingClock_9_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getNonStrictSamplingAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleWait
entryRuleWait returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWaitRule()); }
	 iv_ruleWait=ruleWait 
	 { $current=$iv_ruleWait.current; } 
	 EOF 
;

// Rule Wait
ruleWait returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='_Wait' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWaitAccess().get_WaitKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWaitAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWaitAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getWaitAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWaitRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='returnType' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getWaitAccess().getReturnTypeKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getWaitRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getWaitAccess().getReturnTypeTypeCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='waitingClock' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getWaitAccess().getWaitingClockKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWaitAccess().getWaitingClockAbstractEntityParserRuleCall_6_0()); 
	    }
		lv_waitingClock_7_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWaitRule());
	        }
       		set(
       			$current, 
       			"waitingClock",
        		lv_waitingClock_7_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='waitingValue' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getWaitAccess().getWaitingValueKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWaitAccess().getWaitingValueAbstractEntityParserRuleCall_8_0()); 
	    }
		lv_waitingValue_9_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWaitRule());
	        }
       		set(
       			$current, 
       			"waitingValue",
        		lv_waitingValue_9_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getWaitAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleDiscretization
entryRuleDiscretization returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDiscretizationRule()); }
	 iv_ruleDiscretization=ruleDiscretization 
	 { $current=$iv_ruleDiscretization.current; } 
	 EOF 
;

// Rule Discretization
ruleDiscretization returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='_Discretization' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDiscretizationAccess().get_DiscretizationKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDiscretizationAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDiscretizationAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getDiscretizationAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDiscretizationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='returnType' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDiscretizationAccess().getReturnTypeKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDiscretizationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDiscretizationAccess().getReturnTypeTypeCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='denseClock' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDiscretizationAccess().getDenseClockKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDiscretizationAccess().getDenseClockAbstractEntityParserRuleCall_6_0()); 
	    }
		lv_denseClock_7_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDiscretizationRule());
	        }
       		set(
       			$current, 
       			"denseClock",
        		lv_denseClock_7_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='discretizationFactor' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDiscretizationAccess().getDiscretizationFactorKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDiscretizationAccess().getDiscretizationFactorAbstractEntityParserRuleCall_8_0()); 
	    }
		lv_discretizationFactor_9_0=ruleAbstractEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDiscretizationRule());
	        }
       		set(
       			$current, 
       			"discretizationFactor",
        		lv_discretizationFactor_9_0, 
        		"AbstractEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDiscretizationAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleDeath
entryRuleDeath returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeathRule()); }
	 iv_ruleDeath=ruleDeath 
	 { $current=$iv_ruleDeath.current; } 
	 EOF 
;

// Rule Death
ruleDeath returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='_Death' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDeathAccess().get_DeathKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeathAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeathAccess().getNameKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getDeathAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeathRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?	otherlv_4='returnType' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDeathAccess().getReturnTypeKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeathRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDeathAccess().getReturnTypeTypeCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDeathAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Rule EventKind
ruleEventKind returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='start' 
	{
        $current = grammarAccess.getEventKindAccess().getStartEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getEventKindAccess().getStartEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='finish' 
	{
        $current = grammarAccess.getEventKindAccess().getFinishEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getEventKindAccess().getFinishEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='stop' 
	{
        $current = grammarAccess.getEventKindAccess().getFinishEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getEventKindAccess().getFinishEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='consume' 
	{
        $current = grammarAccess.getEventKindAccess().getConsumeEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getEventKindAccess().getConsumeEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='produce' 
	{
        $current = grammarAccess.getEventKindAccess().getProduceEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getEventKindAccess().getProduceEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='receive' 
	{
        $current = grammarAccess.getEventKindAccess().getReceiveEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getEventKindAccess().getReceiveEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='send' 
	{
        $current = grammarAccess.getEventKindAccess().getSendEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getEventKindAccess().getSendEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='any' 
	{
        $current = grammarAccess.getEventKindAccess().getUndefinedEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getEventKindAccess().getUndefinedEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='all' 
	{
        $current = grammarAccess.getEventKindAccess().getUndefinedEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getEventKindAccess().getUndefinedEnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='undefined' 
	{
        $current = grammarAccess.getEventKindAccess().getUndefinedEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getEventKindAccess().getUndefinedEnumLiteralDeclaration_9()); 
    }
));



RULE_REAL0 : ('0'..'9')+ '.' ('0'..'9')+;

RULE_INT : '-'? ('0'..'9')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


