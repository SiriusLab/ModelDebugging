<!-- Generated pom.xml, feel free to adapt it to your needs -->    
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>@artefactId@</artifactId>
    <groupId>@groupId@</groupId>
    <packaging>bundle</packaging>
    <name>@artefactId@</name>
    <version>1.0.0-SNAPSHOT</version>

    <properties>
    	<scala.version>2.9.0-1</scala.version>	
    	<kermeta.version>@kermeta.version@</kermeta.version>
    </properties>
    
    
    <build>
    	
     	<resources>
     		<resource>
     			<directory>${basedir}/src/main/resources</directory>
     		</resource>
     		<resource>
     			<directory>${project.build.directory}/resources</directory>
     		</resource>
     	</resources>
        <plugins>
           <!-- Kermeta Compiler plugin -->
           <plugin>
                <groupId>org.kermeta.kp</groupId>
                <artifactId>kp.compiler.mavenplugin</artifactId>
                <version>${kermeta.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <kp>@kp.filename@</kp>
                            <resourceOutputDirectory>${project.build.directory}/resources</resourceOutputDirectory>
                            <targetGroupId>${project.groupId}</targetGroupId>
                            <targetArtifactId>${project.artifactId}</targetArtifactId>
                            <stopAfterPhase>GENERATE_SCALA</stopAfterPhase>
                            <checkingEnabled>false</checkingEnabled>
                            <intermediateFilesRequired>true</intermediateFilesRequired>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Scala plugin : allow to compile Scala file -->
			<plugin>
				<groupId>org.scala-tools</groupId>
				<artifactId>maven-scala-plugin</artifactId>
				<version>2.15.2</version>
				<executions>
					<execution>
						<id>scala-compile-first</id>
						<phase>process-resources</phase>
						<goals>
							<goal>add-source</goal>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>scala-test-compile</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<jvmArgs>
						<jvmArg>-Xmx1024m</jvmArg>
					</jvmArgs>
				</configuration>
			</plugin>
			 
            <!-- Creation of the bundle jar and its manifest -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.7</version>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>@artefactId@</Bundle-SymbolicName>
                        <Bundle-Name>${project.name}</Bundle-Name>
                        <Bundle-Vendor>${bundle.vendor}</Bundle-Vendor>
                        <!-- <Bundle-Activator>org.kermeta.kp.wizard.eclipse.Activator</Bundle-Activator>-->
                        <Bundle-ActivationPolicy>lazy</Bundle-ActivationPolicy>
                        <Bundle-ManifestVersion>2</Bundle-ManifestVersion>
                        <Bundle-Version>${bundle.version}</Bundle-Version>
                        <Export-Package>
                        	${project.groupId}.${project.artifactId}.*
                        </Export-Package>
                        <Require-Bundle>
							 org.eclipse.core.runtime,
							 org.eclipse.core.resources
						</Require-Bundle>
                        <Import-Package>
                        	!org.eclipse.core.resources,
                        	!org.eclipse.core.runtime,
                        	org.osgi.framework;version="[1.5,2)",
                        	*
                        </Import-Package>
                        <Bundle-ClassPath>.</Bundle-ClassPath>
                        <Bundle-RequiredExecutionEnvironment>JavaSE-1.6</Bundle-RequiredExecutionEnvironment>
                    </instructions>
                </configuration>
            </plugin>
            <!-- calculate versions for some special cases -->
			<!-- calculate the bundle version from the project version : replace -SNAPSHOT 
				by .SNAPSHOT_${timestamp} -->
			<plugin>
				<groupId>org.codehaus.groovy.maven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<id>generate_bundle_version</id>
						<phase>initialize</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<source>
								String scalaVersionNoSuffix = "${scala.version}"
								int index = "${scala.version}".indexOf("-")
								if(index!=-1)
									scalaVersionNoSuffix = "${scala.version}".substring(0,index)
								project.properties.setProperty('scala.version.nosuffix', scalaVersionNoSuffix)
								println("scala.version.nosuffix="+scalaVersionNoSuffix)
								String bundleVersion = "${project.version}"
								// workaround jenkins bug https://issues.jenkins-ci.org/browse/JENKINS-9693?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel
								String timestamp = "${maven.build.timestamp}".replaceAll("-","_") 
								bundleVersion = bundleVersion.replaceAll("-SNAPSHOT", "-SNAPSHOT_"+timestamp)
								bundleVersion = bundleVersion.replaceAll("-",".")
								project.properties.setProperty('bundle.version',bundleVersion)
								println("bundle.version="+bundleVersion)
							</source>
						</configuration>
					</execution>
				</executions>
			</plugin>
            <!-- copy the generated manifest to a place where eclipse expects it so it doesn't raise error -->
			  <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.4.3</version>
                <executions>
                    <execution>
                        <id>copy-manifest-for-eclipse-ide</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>META-INF</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/classes/META-INF</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- correctly configure eclipse project accordingly to the pom -->
      		<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-eclipse-plugin</artifactId>
			    <version>2.8</version>
			    <!-- see http://maven.apache.org/plugins/maven-eclipse-plugin/eclipse-mojo.html for more information -->
			    <configuration>
			      <downloadSources>true</downloadSources>
			      <downloadJavadocs>true</downloadJavadocs>
			      <projectnatures>
			      	<projectnature>org.kermeta.language.texteditor.eclipse.nature.KermetaNatureID</projectnature>
			        <projectnature>org.scala-ide.sdt.core.scalanature</projectnature>
			        <projectnature>org.eclipse.jdt.core.javanature</projectnature>			        
			      </projectnatures>
			      <buildcommands>
			        <buildcommand>org.scala-ide.sdt.core.scalabuilder</buildcommand>
			      </buildcommands>
			      <classpathContainers>
			        <classpathContainer>org.scala-ide.sdt.launching.SCALA_CONTAINER</classpathContainer>
			        <classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
			      </classpathContainers>
			      <excludes> 
			        <exclude>org.scala-lang:scala-library</exclude>
			      </excludes>
			      <sourceIncludes>
			        <sourceInclude>**/*.scala</sourceInclude>
			        <sourceInclude>**/*.java</sourceInclude>
			      </sourceIncludes>
			      <useProjectReferences>false</useProjectReferences>
			    </configuration>
			  </plugin>
			  <plugin>
		        <groupId>org.codehaus.mojo</groupId>
		        <artifactId>build-helper-maven-plugin</artifactId>
		        <executions>
		          <execution>
		            <id>add-source</id>
		            <phase>generate-sources</phase>
		            <goals>
		              <goal>add-source</goal>
		            </goals>
		            <configuration>
		              <sources>
		                <source>src/main/scala</source>
		                <!-- make sure that the generated code is taken into account -->
		                <source>${project.build.directory}/scala</source>
		                <source>${project.build.directory}/emfjava</source>  
		              </sources>
		            </configuration>
		          </execution>
		        </executions>
		      </plugin>
        </plugins>
    </build>

    <dependencies>
    	<dependency>
            <groupId>org.kermeta.language</groupId>
            <artifactId>language.model</artifactId>
            <version>${kermeta.version}</version>
        </dependency>
    	<dependency>
    		<groupId>org.kermeta.language</groupId>
    		<artifactId>language.library.core</artifactId>
    		<version>${kermeta.version}</version>
    	</dependency>
    	<!-- Add more dependencies here -->        
    </dependencies>
</project>
